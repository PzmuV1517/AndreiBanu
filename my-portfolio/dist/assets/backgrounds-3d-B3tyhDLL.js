import{r as Em,g as Vy,R as _b,a as ne}from"./vendor-BiYCeH42.js";var Gd={exports:{}},cl={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Mv;function yb(){if(Mv)return cl;Mv=1;var i=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(n,s,a){var l=null;if(a!==void 0&&(l=""+a),s.key!==void 0&&(l=""+s.key),"key"in s){a={};for(var c in s)c!=="key"&&(a[c]=s[c])}else a=s;return s=a.ref,{$$typeof:i,type:n,key:l,ref:s!==void 0?s:null,props:a}}return cl.Fragment=t,cl.jsx=e,cl.jsxs=e,cl}var bv;function xb(){return bv||(bv=1,Gd.exports=yb()),Gd.exports}var un=xb();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bh="178",Sb={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Mb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Gy=0,tm=1,ky=2,bb=3,Wy=0,Fh=1,Tl=2,ki=3,Ps=0,Zn=1,ss=2,Ns=0,ra=1,em=2,nm=3,im=4,Xy=5,lr=100,qy=101,Yy=102,Zy=103,jy=104,Ky=200,Jy=201,Qy=202,$y=203,Zu=204,ju=205,tx=206,ex=207,nx=208,ix=209,sx=210,rx=211,ax=212,ox=213,lx=214,Ku=0,Ju=1,Qu=2,la=3,$u=4,th=5,eh=6,nh=7,nc=0,cx=1,ux=2,os=0,hx=1,fx=2,dx=3,Tm=4,px=5,mx=6,gx=7,sm="attached",vx="detached",Hh=300,Is=301,dr=302,Bl=303,Fl=304,Co=306,Hl=1e3,Di=1001,Vl=1002,An=1003,Am=1004,Eb=1004,ho=1005,Tb=1005,pn=1006,Al=1007,Ab=1007,rs=1008,wb=1008,Ni=1009,wm=1010,Cm=1011,_o=1012,Vh=1013,Os=1014,ii=1015,Ro=1016,Gh=1017,kh=1018,yo=1020,Rm=35902,Dm=1021,Um=1022,Bn=1023,xo=1026,So=1027,Wh=1028,ic=1029,Nm=1030,Xh=1031,Cb=1032,qh=1033,wl=33776,Cl=33777,Rl=33778,Dl=33779,ih=35840,sh=35841,rh=35842,ah=35843,oh=36196,lh=37492,ch=37496,uh=37808,hh=37809,fh=37810,dh=37811,ph=37812,mh=37813,gh=37814,vh=37815,_h=37816,yh=37817,xh=37818,Sh=37819,Mh=37820,bh=37821,Ul=36492,Eh=36494,Th=36495,Lm=36283,Ah=36284,wh=36285,Ch=36286,_x=2200,yx=2201,xx=2202,Gl=2300,Rh=2301,ku=2302,na=2400,ia=2401,kl=2402,Yh=2500,Pm=2501,Rb=0,Db=1,Ub=2,Sx=3200,Mx=3201,Nb=3202,Lb=3203,gr=0,bx=1,Ds="",zn="srgb",pr="srgb-linear",Wl="linear",He="srgb",Pb=0,$r=7680,Ib=7681,Ob=7682,zb=7683,Bb=34055,Fb=34056,Hb=5386,Vb=512,Gb=513,kb=514,Wb=515,Xb=516,qb=517,Yb=518,rm=519,Ex=512,Tx=513,Ax=514,Im=515,wx=516,Cx=517,Rx=518,Dx=519,Xl=35044,Zb=35048,jb=35040,Kb=35045,Jb=35049,Qb=35041,$b=35046,tE=35050,eE=35042,nE="100",am="300 es",Ui=2e3,ql=2001,iE={COMPUTE:"compute",RENDER:"render"},sE={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},rE={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class us{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const s=n[t];if(s!==void 0){const a=s.indexOf(e);a!==-1&&s.splice(a,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let a=0,l=s.length;a<l;a++)s[a].call(this,t);t.target=null}}}const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Ev=1234567;const aa=Math.PI/180,Mo=180/Math.PI;function _i(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pn[i&255]+Pn[i>>8&255]+Pn[i>>16&255]+Pn[i>>24&255]+"-"+Pn[t&255]+Pn[t>>8&255]+"-"+Pn[t>>16&15|64]+Pn[t>>24&255]+"-"+Pn[e&63|128]+Pn[e>>8&255]+"-"+Pn[e>>16&255]+Pn[e>>24&255]+Pn[n&255]+Pn[n>>8&255]+Pn[n>>16&255]+Pn[n>>24&255]).toLowerCase()}function de(i,t,e){return Math.max(t,Math.min(e,i))}function Om(i,t){return(i%t+t)%t}function aE(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function oE(i,t,e){return i!==t?(e-i)/(t-i):0}function Nl(i,t,e){return(1-e)*i+e*t}function lE(i,t,e,n){return Nl(i,t,1-Math.exp(-e*n))}function cE(i,t=1){return t-Math.abs(Om(i,t*2)-t)}function uE(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function hE(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function fE(i,t){return i+Math.floor(Math.random()*(t-i+1))}function dE(i,t){return i+Math.random()*(t-i)}function pE(i){return i*(.5-Math.random())}function mE(i){i!==void 0&&(Ev=i);let t=Ev+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function gE(i){return i*aa}function vE(i){return i*Mo}function _E(i){return(i&i-1)===0&&i!==0}function yE(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function xE(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function SE(i,t,e,n,s){const a=Math.cos,l=Math.sin,c=a(e/2),u=l(e/2),f=a((t+n)/2),d=l((t+n)/2),m=a((t-n)/2),g=l((t-n)/2),v=a((n-t)/2),x=l((n-t)/2);switch(s){case"XYX":i.set(c*d,u*m,u*g,c*f);break;case"YZY":i.set(u*g,c*d,u*m,c*f);break;case"ZXZ":i.set(u*m,u*g,c*d,c*f);break;case"XZX":i.set(c*d,u*x,u*v,c*f);break;case"YXY":i.set(u*v,c*d,u*x,c*f);break;case"ZYZ":i.set(u*x,u*v,c*d,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Yn(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function ge(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const ME={DEG2RAD:aa,RAD2DEG:Mo,generateUUID:_i,clamp:de,euclideanModulo:Om,mapLinear:aE,inverseLerp:oE,lerp:Nl,damp:lE,pingpong:cE,smoothstep:uE,smootherstep:hE,randInt:fE,randFloat:dE,randFloatSpread:pE,seededRandom:mE,degToRad:gE,radToDeg:vE,isPowerOfTwo:_E,ceilPowerOfTwo:yE,floorPowerOfTwo:xE,setQuaternionFromProperEuler:SE,normalize:ge,denormalize:Yn};class pt{constructor(t=0,e=0){pt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),a=this.x-t.x,l=this.y-t.y;return this.x=a*n-l*s+t.x,this.y=a*s+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class si{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,a,l,c){let u=n[s+0],f=n[s+1],d=n[s+2],m=n[s+3];const g=a[l+0],v=a[l+1],x=a[l+2],M=a[l+3];if(c===0){t[e+0]=u,t[e+1]=f,t[e+2]=d,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=M;return}if(m!==M||u!==g||f!==v||d!==x){let S=1-c;const _=u*g+f*v+d*x+m*M,E=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const U=Math.sqrt(A),R=Math.atan2(U,_*E);S=Math.sin(S*R)/U,c=Math.sin(c*R)/U}const T=c*E;if(u=u*S+g*T,f=f*S+v*T,d=d*S+x*T,m=m*S+M*T,S===1-c){const U=1/Math.sqrt(u*u+f*f+d*d+m*m);u*=U,f*=U,d*=U,m*=U}}t[e]=u,t[e+1]=f,t[e+2]=d,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,s,a,l){const c=n[s],u=n[s+1],f=n[s+2],d=n[s+3],m=a[l],g=a[l+1],v=a[l+2],x=a[l+3];return t[e]=c*x+d*m+u*v-f*g,t[e+1]=u*x+d*g+f*m-c*v,t[e+2]=f*x+d*v+c*g-u*m,t[e+3]=d*x-c*m-u*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,s=t._y,a=t._z,l=t._order,c=Math.cos,u=Math.sin,f=c(n/2),d=c(s/2),m=c(a/2),g=u(n/2),v=u(s/2),x=u(a/2);switch(l){case"XYZ":this._x=g*d*m+f*v*x,this._y=f*v*m-g*d*x,this._z=f*d*x+g*v*m,this._w=f*d*m-g*v*x;break;case"YXZ":this._x=g*d*m+f*v*x,this._y=f*v*m-g*d*x,this._z=f*d*x-g*v*m,this._w=f*d*m+g*v*x;break;case"ZXY":this._x=g*d*m-f*v*x,this._y=f*v*m+g*d*x,this._z=f*d*x+g*v*m,this._w=f*d*m-g*v*x;break;case"ZYX":this._x=g*d*m-f*v*x,this._y=f*v*m+g*d*x,this._z=f*d*x-g*v*m,this._w=f*d*m+g*v*x;break;case"YZX":this._x=g*d*m+f*v*x,this._y=f*v*m+g*d*x,this._z=f*d*x-g*v*m,this._w=f*d*m-g*v*x;break;case"XZY":this._x=g*d*m-f*v*x,this._y=f*v*m-g*d*x,this._z=f*d*x+g*v*m,this._w=f*d*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],a=e[8],l=e[1],c=e[5],u=e[9],f=e[2],d=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(d-u)*v,this._y=(a-f)*v,this._z=(l-s)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(d-u)/v,this._x=.25*v,this._y=(s+l)/v,this._z=(a+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(a-f)/v,this._x=(s+l)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-s)/v,this._x=(a+f)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(de(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,a=t._z,l=t._w,c=e._x,u=e._y,f=e._z,d=e._w;return this._x=n*d+l*c+s*f-a*u,this._y=s*d+l*u+a*c-n*f,this._z=a*d+l*f+n*u-s*c,this._w=l*d-n*c-s*u-a*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,a=this._z,l=this._w;let c=l*t._w+n*t._x+s*t._y+a*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=s,this._z=a,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*s+e*this._y,this._z=v*a+e*this._z,this.normalize(),this}const f=Math.sqrt(u),d=Math.atan2(f,c),m=Math.sin((1-e)*d)/f,g=Math.sin(e*d)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=s*m+this._y*g,this._z=a*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),a=Math.sqrt(n);return this.set(s*Math.sin(t),s*Math.cos(t),a*Math.sin(e),a*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(t=0,e=0,n=0){B.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Tv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Tv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,a=t.elements;return this.x=a[0]*e+a[3]*n+a[6]*s,this.y=a[1]*e+a[4]*n+a[7]*s,this.z=a[2]*e+a[5]*n+a[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,a=t.elements,l=1/(a[3]*e+a[7]*n+a[11]*s+a[15]);return this.x=(a[0]*e+a[4]*n+a[8]*s+a[12])*l,this.y=(a[1]*e+a[5]*n+a[9]*s+a[13])*l,this.z=(a[2]*e+a[6]*n+a[10]*s+a[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,a=t.x,l=t.y,c=t.z,u=t.w,f=2*(l*s-c*n),d=2*(c*e-a*s),m=2*(a*n-l*e);return this.x=e+u*f+l*m-c*d,this.y=n+u*d+c*f-a*m,this.z=s+u*m+a*d-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*s,this.y=a[1]*e+a[5]*n+a[9]*s,this.z=a[2]*e+a[6]*n+a[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,a=t.z,l=e.x,c=e.y,u=e.z;return this.x=s*u-a*c,this.y=a*l-n*u,this.z=n*c-s*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return kd.copy(this).projectOnVector(t),this.sub(kd)}reflect(t){return this.sub(kd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(de(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const kd=new B,Tv=new si;class pe{constructor(t,e,n,s,a,l,c,u,f){pe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,s,a,l,c,u,f)}set(t,e,n,s,a,l,c,u,f){const d=this.elements;return d[0]=t,d[1]=s,d[2]=c,d[3]=e,d[4]=a,d[5]=u,d[6]=n,d[7]=l,d[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,a=this.elements,l=n[0],c=n[3],u=n[6],f=n[1],d=n[4],m=n[7],g=n[2],v=n[5],x=n[8],M=s[0],S=s[3],_=s[6],E=s[1],A=s[4],T=s[7],U=s[2],R=s[5],P=s[8];return a[0]=l*M+c*E+u*U,a[3]=l*S+c*A+u*R,a[6]=l*_+c*T+u*P,a[1]=f*M+d*E+m*U,a[4]=f*S+d*A+m*R,a[7]=f*_+d*T+m*P,a[2]=g*M+v*E+x*U,a[5]=g*S+v*A+x*R,a[8]=g*_+v*T+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8];return e*l*d-e*c*f-n*a*d+n*c*u+s*a*f-s*l*u}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8],m=d*l-c*f,g=c*u-d*a,v=f*a-l*u,x=e*m+n*g+s*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return t[0]=m*M,t[1]=(s*f-d*n)*M,t[2]=(c*n-s*l)*M,t[3]=g*M,t[4]=(d*e-s*u)*M,t[5]=(s*a-c*e)*M,t[6]=v*M,t[7]=(n*u-f*e)*M,t[8]=(l*e-n*a)*M,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,a,l,c){const u=Math.cos(a),f=Math.sin(a);return this.set(n*u,n*f,-n*(u*l+f*c)+l+t,-s*f,s*u,-s*(-f*l+u*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Wd.makeScale(t,e)),this}rotate(t){return this.premultiply(Wd.makeRotation(-t)),this}translate(t,e){return this.premultiply(Wd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Wd=new pe;function Ux(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}const bE={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function fo(i,t){return new bE[i](t)}function Yl(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Nx(){const i=Yl("canvas");return i.style.display="block",i}const Av={};function go(i){i in Av||(Av[i]=!0,console.warn(i))}function EE(i,t,e){return new Promise(function(n,s){function a(){switch(i.clientWaitSync(t,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:s();break;case i.TIMEOUT_EXPIRED:setTimeout(a,e);break;default:n()}}setTimeout(a,e)})}function TE(i){const t=i.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function AE(i){const t=i.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const wv=new pe().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Cv=new pe().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function wE(){const i={enabled:!0,workingColorSpace:pr,spaces:{},convert:function(s,a,l){return this.enabled===!1||a===l||!a||!l||(this.spaces[a].transfer===He&&(s.r=Ls(s.r),s.g=Ls(s.g),s.b=Ls(s.b)),this.spaces[a].primaries!==this.spaces[l].primaries&&(s.applyMatrix3(this.spaces[a].toXYZ),s.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===He&&(s.r=vo(s.r),s.g=vo(s.g),s.b=vo(s.b))),s},workingToColorSpace:function(s,a){return this.convert(s,this.workingColorSpace,a)},colorSpaceToWorking:function(s,a){return this.convert(s,a,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Ds?Wl:this.spaces[s].transfer},getLuminanceCoefficients:function(s,a=this.workingColorSpace){return s.fromArray(this.spaces[a].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,a,l){return s.copy(this.spaces[a].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(s,a){return go("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(s,a)},toWorkingColorSpace:function(s,a){return go("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(s,a)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[pr]:{primaries:t,whitePoint:n,transfer:Wl,toXYZ:wv,fromXYZ:Cv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:zn},outputColorSpaceConfig:{drawingBufferColorSpace:zn}},[zn]:{primaries:t,whitePoint:n,transfer:He,toXYZ:wv,fromXYZ:Cv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:zn}}}),i}const Te=wE();function Ls(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function vo(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Ga;class Lx{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Ga===void 0&&(Ga=Yl("canvas")),Ga.width=t.width,Ga.height=t.height;const s=Ga.getContext("2d");t instanceof ImageData?s.putImageData(t,0,0):s.drawImage(t,0,0,t.width,t.height),n=Ga}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Yl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),a=s.data;for(let l=0;l<a.length;l++)a[l]=Ls(a[l]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ls(e[n]/255)*255):e[n]=Ls(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let CE=0;class hr{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:CE++}),this.uuid=_i(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let a;if(Array.isArray(s)){a=[];for(let l=0,c=s.length;l<c;l++)s[l].isDataTexture?a.push(Xd(s[l].image)):a.push(Xd(s[l]))}else a=Xd(s);n.url=a}return e||(t.images[this.uuid]=n),n}}function Xd(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Lx.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let RE=0;const qd=new B;class rn extends us{constructor(t=rn.DEFAULT_IMAGE,e=rn.DEFAULT_MAPPING,n=Di,s=Di,a=pn,l=rs,c=Bn,u=Ni,f=rn.DEFAULT_ANISOTROPY,d=Ds){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:RE++}),this.uuid=_i(),this.name="",this.source=new hr(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=a,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=u,this.offset=new pt(0,0),this.repeat=new pt(1,1),this.center=new pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(qd).x}get height(){return this.source.getSize(qd).y}get depth(){return this.source.getSize(qd).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}s&&n&&s.isVector2&&n.isVector2||s&&n&&s.isVector3&&n.isVector3||s&&n&&s.isMatrix3&&n.isMatrix3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Hh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Hl:t.x=t.x-Math.floor(t.x);break;case Di:t.x=t.x<0?0:1;break;case Vl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Hl:t.y=t.y-Math.floor(t.y);break;case Di:t.y=t.y<0?0:1;break;case Vl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}rn.DEFAULT_IMAGE=null;rn.DEFAULT_MAPPING=Hh;rn.DEFAULT_ANISOTROPY=1;class Re{constructor(t=0,e=0,n=0,s=1){Re.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,a=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*s+l[12]*a,this.y=l[1]*e+l[5]*n+l[9]*s+l[13]*a,this.z=l[2]*e+l[6]*n+l[10]*s+l[14]*a,this.w=l[3]*e+l[7]*n+l[11]*s+l[15]*a,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,a;const u=t.elements,f=u[0],d=u[4],m=u[8],g=u[1],v=u[5],x=u[9],M=u[2],S=u[6],_=u[10];if(Math.abs(d-g)<.01&&Math.abs(m-M)<.01&&Math.abs(x-S)<.01){if(Math.abs(d+g)<.1&&Math.abs(m+M)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,U=(_+1)/2,R=(d+g)/4,P=(m+M)/4,I=(x+S)/4;return A>T&&A>U?A<.01?(n=0,s=.707106781,a=.707106781):(n=Math.sqrt(A),s=R/n,a=P/n):T>U?T<.01?(n=.707106781,s=0,a=.707106781):(s=Math.sqrt(T),n=R/s,a=I/s):U<.01?(n=.707106781,s=.707106781,a=0):(a=Math.sqrt(U),n=P/a,s=I/a),this.set(n,s,a,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-M)*(m-M)+(g-d)*(g-d));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-M)/E,this.z=(g-d)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=de(this.x,t.x,e.x),this.y=de(this.y,t.y,e.y),this.z=de(this.z,t.z,e.z),this.w=de(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=de(this.x,t,e),this.y=de(this.y,t,e),this.z=de(this.z,t,e),this.w=de(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(de(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class zm extends us{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Re(0,0,t,e),this.scissorTest=!1,this.viewport=new Re(0,0,t,e);const s={width:t,height:e,depth:n.depth},a=new rn(s);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=a.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:pn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let s=0,a=this.textures.length;s<a;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=n,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const s=Object.assign({},t.textures[e].image);this.textures[e].source=new hr(s)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class cs extends zm{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Zh extends rn{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=An,this.minFilter=An,this.wrapR=Di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class DE extends cs{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Zh(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class jh extends rn{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=An,this.minFilter=An,this.wrapR=Di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class UE extends cs{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new jh(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class Fn{constructor(t=new B(1/0,1/0,1/0),e=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Hi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Hi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Hi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const a=n.getAttribute("position");if(e===!0&&a!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=a.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Hi):Hi.fromBufferAttribute(a,l),Hi.applyMatrix4(t.matrixWorld),this.expandByPoint(Hi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Kc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Kc.copy(n.boundingBox)),Kc.applyMatrix4(t.matrixWorld),this.union(Kc)}const s=t.children;for(let a=0,l=s.length;a<l;a++)this.expandByObject(s[a],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Hi),Hi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ul),Jc.subVectors(this.max,ul),ka.subVectors(t.a,ul),Wa.subVectors(t.b,ul),Xa.subVectors(t.c,ul),tr.subVectors(Wa,ka),er.subVectors(Xa,Wa),Fr.subVectors(ka,Xa);let e=[0,-tr.z,tr.y,0,-er.z,er.y,0,-Fr.z,Fr.y,tr.z,0,-tr.x,er.z,0,-er.x,Fr.z,0,-Fr.x,-tr.y,tr.x,0,-er.y,er.x,0,-Fr.y,Fr.x,0];return!Yd(e,ka,Wa,Xa,Jc)||(e=[1,0,0,0,1,0,0,0,1],!Yd(e,ka,Wa,Xa,Jc))?!1:(Qc.crossVectors(tr,er),e=[Qc.x,Qc.y,Qc.z],Yd(e,ka,Wa,Xa,Jc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Hi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Hi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(bs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),bs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),bs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),bs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),bs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),bs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),bs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),bs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(bs),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const bs=[new B,new B,new B,new B,new B,new B,new B,new B],Hi=new B,Kc=new Fn,ka=new B,Wa=new B,Xa=new B,tr=new B,er=new B,Fr=new B,ul=new B,Jc=new B,Qc=new B,Hr=new B;function Yd(i,t,e,n,s){for(let a=0,l=i.length-3;a<=l;a+=3){Hr.fromArray(i,a);const c=s.x*Math.abs(Hr.x)+s.y*Math.abs(Hr.y)+s.z*Math.abs(Hr.z),u=t.dot(Hr),f=e.dot(Hr),d=n.dot(Hr);if(Math.max(-Math.max(u,f,d),Math.min(u,f,d))>c)return!1}return!0}const NE=new Fn,hl=new B,Zd=new B;class wn{constructor(t=new B,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):NE.setFromPoints(t).getCenter(n);let s=0;for(let a=0,l=t.length;a<l;a++)s=Math.max(s,n.distanceToSquared(t[a]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;hl.subVectors(t,this.center);const e=hl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(hl,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Zd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(hl.copy(t.center).add(Zd)),this.expandByPoint(hl.copy(t.center).sub(Zd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const Es=new B,jd=new B,$c=new B,nr=new B,Kd=new B,tu=new B,Jd=new B;class Do{constructor(t=new B,e=new B(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Es)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Es.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Es.copy(this.origin).addScaledVector(this.direction,e),Es.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){jd.copy(t).add(e).multiplyScalar(.5),$c.copy(e).sub(t).normalize(),nr.copy(this.origin).sub(jd);const a=t.distanceTo(e)*.5,l=-this.direction.dot($c),c=nr.dot(this.direction),u=-nr.dot($c),f=nr.lengthSq(),d=Math.abs(1-l*l);let m,g,v,x;if(d>0)if(m=l*u-c,g=l*c-u,x=a*d,m>=0)if(g>=-x)if(g<=x){const M=1/d;m*=M,g*=M,v=m*(m+l*g+2*c)+g*(l*m+g+2*u)+f}else g=a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*u)+f;else g=-a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*u)+f;else g<=-x?(m=Math.max(0,-(-l*a+c)),g=m>0?-a:Math.min(Math.max(-a,-u),a),v=-m*m+g*(g+2*u)+f):g<=x?(m=0,g=Math.min(Math.max(-a,-u),a),v=g*(g+2*u)+f):(m=Math.max(0,-(l*a+c)),g=m>0?a:Math.min(Math.max(-a,-u),a),v=-m*m+g*(g+2*u)+f);else g=l>0?-a:a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*u)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),s&&s.copy(jd).addScaledVector($c,g),v}intersectSphere(t,e){Es.subVectors(t.center,this.origin);const n=Es.dot(this.direction),s=Es.dot(Es)-n*n,a=t.radius*t.radius;if(s>a)return null;const l=Math.sqrt(a-s),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,a,l,c,u;const f=1/this.direction.x,d=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,s=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,s=(t.min.x-g.x)*f),d>=0?(a=(t.min.y-g.y)*d,l=(t.max.y-g.y)*d):(a=(t.max.y-g.y)*d,l=(t.min.y-g.y)*d),n>l||a>s||((a>n||isNaN(n))&&(n=a),(l<s||isNaN(s))&&(s=l),m>=0?(c=(t.min.z-g.z)*m,u=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,u=(t.min.z-g.z)*m),n>u||c>s)||((c>n||n!==n)&&(n=c),(u<s||s!==s)&&(s=u),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,Es)!==null}intersectTriangle(t,e,n,s,a){Kd.subVectors(e,t),tu.subVectors(n,t),Jd.crossVectors(Kd,tu);let l=this.direction.dot(Jd),c;if(l>0){if(s)return null;c=1}else if(l<0)c=-1,l=-l;else return null;nr.subVectors(this.origin,t);const u=c*this.direction.dot(tu.crossVectors(nr,tu));if(u<0)return null;const f=c*this.direction.dot(Kd.cross(nr));if(f<0||u+f>l)return null;const d=-c*nr.dot(Jd);return d<0?null:this.at(d/l,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class re{constructor(t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S){re.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S)}set(t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=s,_[1]=a,_[5]=l,_[9]=c,_[13]=u,_[2]=f,_[6]=d,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=M,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new re().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/qa.setFromMatrixColumn(t,0).length(),a=1/qa.setFromMatrixColumn(t,1).length(),l=1/qa.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*a,e[5]=n[5]*a,e[6]=n[6]*a,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,a=t.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(s),f=Math.sin(s),d=Math.cos(a),m=Math.sin(a);if(t.order==="XYZ"){const g=l*d,v=l*m,x=c*d,M=c*m;e[0]=u*d,e[4]=-u*m,e[8]=f,e[1]=v+x*f,e[5]=g-M*f,e[9]=-c*u,e[2]=M-g*f,e[6]=x+v*f,e[10]=l*u}else if(t.order==="YXZ"){const g=u*d,v=u*m,x=f*d,M=f*m;e[0]=g+M*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*d,e[9]=-c,e[2]=v*c-x,e[6]=M+g*c,e[10]=l*u}else if(t.order==="ZXY"){const g=u*d,v=u*m,x=f*d,M=f*m;e[0]=g-M*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*d,e[9]=M-g*c,e[2]=-l*f,e[6]=c,e[10]=l*u}else if(t.order==="ZYX"){const g=l*d,v=l*m,x=c*d,M=c*m;e[0]=u*d,e[4]=x*f-v,e[8]=g*f+M,e[1]=u*m,e[5]=M*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*u,e[10]=l*u}else if(t.order==="YZX"){const g=l*u,v=l*f,x=c*u,M=c*f;e[0]=u*d,e[4]=M-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*d,e[9]=-c*d,e[2]=-f*d,e[6]=v*m+x,e[10]=g-M*m}else if(t.order==="XZY"){const g=l*u,v=l*f,x=c*u,M=c*f;e[0]=u*d,e[4]=-m,e[8]=f*d,e[1]=g*m+M,e[5]=l*d,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*d,e[10]=M*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(LE,t,PE)}lookAt(t,e,n){const s=this.elements;return gi.subVectors(t,e),gi.lengthSq()===0&&(gi.z=1),gi.normalize(),ir.crossVectors(n,gi),ir.lengthSq()===0&&(Math.abs(n.z)===1?gi.x+=1e-4:gi.z+=1e-4,gi.normalize(),ir.crossVectors(n,gi)),ir.normalize(),eu.crossVectors(gi,ir),s[0]=ir.x,s[4]=eu.x,s[8]=gi.x,s[1]=ir.y,s[5]=eu.y,s[9]=gi.y,s[2]=ir.z,s[6]=eu.z,s[10]=gi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,a=this.elements,l=n[0],c=n[4],u=n[8],f=n[12],d=n[1],m=n[5],g=n[9],v=n[13],x=n[2],M=n[6],S=n[10],_=n[14],E=n[3],A=n[7],T=n[11],U=n[15],R=s[0],P=s[4],I=s[8],C=s[12],w=s[1],z=s[5],Z=s[9],k=s[13],W=s[2],rt=s[6],H=s[10],Y=s[14],G=s[3],st=s[7],lt=s[11],mt=s[15];return a[0]=l*R+c*w+u*W+f*G,a[4]=l*P+c*z+u*rt+f*st,a[8]=l*I+c*Z+u*H+f*lt,a[12]=l*C+c*k+u*Y+f*mt,a[1]=d*R+m*w+g*W+v*G,a[5]=d*P+m*z+g*rt+v*st,a[9]=d*I+m*Z+g*H+v*lt,a[13]=d*C+m*k+g*Y+v*mt,a[2]=x*R+M*w+S*W+_*G,a[6]=x*P+M*z+S*rt+_*st,a[10]=x*I+M*Z+S*H+_*lt,a[14]=x*C+M*k+S*Y+_*mt,a[3]=E*R+A*w+T*W+U*G,a[7]=E*P+A*z+T*rt+U*st,a[11]=E*I+A*Z+T*H+U*lt,a[15]=E*C+A*k+T*Y+U*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],a=t[12],l=t[1],c=t[5],u=t[9],f=t[13],d=t[2],m=t[6],g=t[10],v=t[14],x=t[3],M=t[7],S=t[11],_=t[15];return x*(+a*u*m-s*f*m-a*c*g+n*f*g+s*c*v-n*u*v)+M*(+e*u*v-e*f*g+a*l*g-s*l*v+s*f*d-a*u*d)+S*(+e*f*m-e*c*v-a*l*m+n*l*v+a*c*d-n*f*d)+_*(-s*c*d-e*u*m+e*c*g+s*l*m-n*l*g+n*u*d)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8],m=t[9],g=t[10],v=t[11],x=t[12],M=t[13],S=t[14],_=t[15],E=m*S*f-M*g*f+M*u*v-c*S*v-m*u*_+c*g*_,A=x*g*f-d*S*f-x*u*v+l*S*v+d*u*_-l*g*_,T=d*M*f-x*m*f+x*c*v-l*M*v-d*c*_+l*m*_,U=x*m*u-d*M*u-x*c*g+l*M*g+d*c*S-l*m*S,R=e*E+n*A+s*T+a*U;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/R;return t[0]=E*P,t[1]=(M*g*a-m*S*a-M*s*v+n*S*v+m*s*_-n*g*_)*P,t[2]=(c*S*a-M*u*a+M*s*f-n*S*f-c*s*_+n*u*_)*P,t[3]=(m*u*a-c*g*a-m*s*f+n*g*f+c*s*v-n*u*v)*P,t[4]=A*P,t[5]=(d*S*a-x*g*a+x*s*v-e*S*v-d*s*_+e*g*_)*P,t[6]=(x*u*a-l*S*a-x*s*f+e*S*f+l*s*_-e*u*_)*P,t[7]=(l*g*a-d*u*a+d*s*f-e*g*f-l*s*v+e*u*v)*P,t[8]=T*P,t[9]=(x*m*a-d*M*a-x*n*v+e*M*v+d*n*_-e*m*_)*P,t[10]=(l*M*a-x*c*a+x*n*f-e*M*f-l*n*_+e*c*_)*P,t[11]=(d*c*a-l*m*a-d*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=U*P,t[13]=(d*M*s-x*m*s+x*n*g-e*M*g-d*n*S+e*m*S)*P,t[14]=(x*c*s-l*M*s-x*n*u+e*M*u+l*n*S-e*c*S)*P,t[15]=(l*m*s-d*c*s+d*n*u-e*m*u-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,s=t.y,a=t.z;return e[0]*=n,e[4]*=s,e[8]*=a,e[1]*=n,e[5]*=s,e[9]*=a,e[2]*=n,e[6]*=s,e[10]*=a,e[3]*=n,e[7]*=s,e[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),a=1-n,l=t.x,c=t.y,u=t.z,f=a*l,d=a*c;return this.set(f*l+n,f*c-s*u,f*u+s*c,0,f*c+s*u,d*c+n,d*u-s*l,0,f*u-s*c,d*u+s*l,a*u*u+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,a,l){return this.set(1,n,a,0,t,1,l,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,a=e._x,l=e._y,c=e._z,u=e._w,f=a+a,d=l+l,m=c+c,g=a*f,v=a*d,x=a*m,M=l*d,S=l*m,_=c*m,E=u*f,A=u*d,T=u*m,U=n.x,R=n.y,P=n.z;return s[0]=(1-(M+_))*U,s[1]=(v+T)*U,s[2]=(x-A)*U,s[3]=0,s[4]=(v-T)*R,s[5]=(1-(g+_))*R,s[6]=(S+E)*R,s[7]=0,s[8]=(x+A)*P,s[9]=(S-E)*P,s[10]=(1-(g+M))*P,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let a=qa.set(s[0],s[1],s[2]).length();const l=qa.set(s[4],s[5],s[6]).length(),c=qa.set(s[8],s[9],s[10]).length();this.determinant()<0&&(a=-a),t.x=s[12],t.y=s[13],t.z=s[14],Vi.copy(this);const f=1/a,d=1/l,m=1/c;return Vi.elements[0]*=f,Vi.elements[1]*=f,Vi.elements[2]*=f,Vi.elements[4]*=d,Vi.elements[5]*=d,Vi.elements[6]*=d,Vi.elements[8]*=m,Vi.elements[9]*=m,Vi.elements[10]*=m,e.setFromRotationMatrix(Vi),n.x=a,n.y=l,n.z=c,this}makePerspective(t,e,n,s,a,l,c=Ui){const u=this.elements,f=2*a/(e-t),d=2*a/(n-s),m=(e+t)/(e-t),g=(n+s)/(n-s);let v,x;if(c===Ui)v=-(l+a)/(l-a),x=-2*l*a/(l-a);else if(c===ql)v=-l/(l-a),x=-l*a/(l-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=f,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=d,u[9]=g,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=x,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(t,e,n,s,a,l,c=Ui){const u=this.elements,f=1/(e-t),d=1/(n-s),m=1/(l-a),g=(e+t)*f,v=(n+s)*d;let x,M;if(c===Ui)x=(l+a)*m,M=-2*m;else if(c===ql)x=a*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*f,u[4]=0,u[8]=0,u[12]=-g,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=M,u[14]=-x,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const qa=new B,Vi=new re,LE=new B(0,0,0),PE=new B(1,1,1),ir=new B,eu=new B,gi=new B,Rv=new re,Dv=new si;let qi=class Px{constructor(t=0,e=0,n=0,s=Px.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,a=s[0],l=s[4],c=s[8],u=s[1],f=s[5],d=s[9],m=s[2],g=s[6],v=s[10];switch(e){case"XYZ":this._y=Math.asin(de(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-l,a)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-de(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,f)):(this._y=Math.atan2(-m,a),this._z=0);break;case"ZXY":this._x=Math.asin(de(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(u,a));break;case"ZYX":this._y=Math.asin(-de(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(u,a)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(de(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,f),this._y=Math.atan2(-m,a)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-de(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,a)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Rv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Rv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Dv.setFromEuler(this),this.setFromQuaternion(Dv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};qi.DEFAULT_ORDER="XYZ";class bo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let IE=0;const Uv=new B,Ya=new si,Ts=new re,nu=new B,fl=new B,OE=new B,zE=new si,Nv=new B(1,0,0),Lv=new B(0,1,0),Pv=new B(0,0,1),Iv={type:"added"},BE={type:"removed"},Za={type:"childadded",child:null},Qd={type:"childremoved",child:null};class De extends us{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:IE++}),this.uuid=_i(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=De.DEFAULT_UP.clone();const t=new B,e=new qi,n=new si,s=new B(1,1,1);function a(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(a),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new re},normalMatrix:{value:new pe}}),this.matrix=new re,this.matrixWorld=new re,this.matrixAutoUpdate=De.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new bo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ya.setFromAxisAngle(t,e),this.quaternion.multiply(Ya),this}rotateOnWorldAxis(t,e){return Ya.setFromAxisAngle(t,e),this.quaternion.premultiply(Ya),this}rotateX(t){return this.rotateOnAxis(Nv,t)}rotateY(t){return this.rotateOnAxis(Lv,t)}rotateZ(t){return this.rotateOnAxis(Pv,t)}translateOnAxis(t,e){return Uv.copy(t).applyQuaternion(this.quaternion),this.position.add(Uv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Nv,t)}translateY(t){return this.translateOnAxis(Lv,t)}translateZ(t){return this.translateOnAxis(Pv,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ts.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?nu.copy(t):nu.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),fl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ts.lookAt(fl,nu,this.up):Ts.lookAt(nu,fl,this.up),this.quaternion.setFromRotationMatrix(Ts),s&&(Ts.extractRotation(s.matrixWorld),Ya.setFromRotationMatrix(Ts),this.quaternion.premultiply(Ya.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Iv),Za.child=t,this.dispatchEvent(Za),Za.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(BE),Qd.child=t,this.dispatchEvent(Qd),Qd.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ts.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ts.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ts),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Iv),Za.child=t,this.dispatchEvent(Za),Za.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const s=this.children;for(let a=0,l=s.length;a<l;a++)s[a].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fl,t,OE),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fl,zE,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let a=0,l=s.length;a<l;a++)s[a].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(c=>({...c})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(t),s.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(s.boundingBox=this.boundingBox.toJSON()));function a(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(t)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=a(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let f=0,d=u.length;f<d;f++){const m=u[f];a(t.shapes,m)}else a(t.shapes,u)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,f=this.material.length;u<f;u++)c.push(a(t.materials,this.material[u]));s.material=c}else s.material=a(t.materials,this.material);if(this.children.length>0){s.children=[];for(let c=0;c<this.children.length;c++)s.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];s.animations.push(a(t.animations,u))}}if(e){const c=l(t.geometries),u=l(t.materials),f=l(t.textures),d=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),f.length>0&&(n.textures=f),d.length>0&&(n.images=d),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=s,n;function l(c){const u=[];for(const f in c){const d=c[f];delete d.metadata,u.push(d)}return u}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}De.DEFAULT_UP=new B(0,1,0);De.DEFAULT_MATRIX_AUTO_UPDATE=!0;De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Gi=new B,As=new B,$d=new B,ws=new B,ja=new B,Ka=new B,Ov=new B,tp=new B,ep=new B,np=new B,ip=new Re,sp=new Re,rp=new Re;let cr=class uo{constructor(t=new B,e=new B,n=new B){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),Gi.subVectors(t,e),s.cross(Gi);const a=s.lengthSq();return a>0?s.multiplyScalar(1/Math.sqrt(a)):s.set(0,0,0)}static getBarycoord(t,e,n,s,a){Gi.subVectors(s,e),As.subVectors(n,e),$d.subVectors(t,e);const l=Gi.dot(Gi),c=Gi.dot(As),u=Gi.dot($d),f=As.dot(As),d=As.dot($d),m=l*f-c*c;if(m===0)return a.set(0,0,0),null;const g=1/m,v=(f*u-c*d)*g,x=(l*d-c*u)*g;return a.set(1-v-x,x,v)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,ws)===null?!1:ws.x>=0&&ws.y>=0&&ws.x+ws.y<=1}static getInterpolation(t,e,n,s,a,l,c,u){return this.getBarycoord(t,e,n,s,ws)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(a,ws.x),u.addScaledVector(l,ws.y),u.addScaledVector(c,ws.z),u)}static getInterpolatedAttribute(t,e,n,s,a,l){return ip.setScalar(0),sp.setScalar(0),rp.setScalar(0),ip.fromBufferAttribute(t,e),sp.fromBufferAttribute(t,n),rp.fromBufferAttribute(t,s),l.setScalar(0),l.addScaledVector(ip,a.x),l.addScaledVector(sp,a.y),l.addScaledVector(rp,a.z),l}static isFrontFacing(t,e,n,s){return Gi.subVectors(n,e),As.subVectors(t,e),Gi.cross(As).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Gi.subVectors(this.c,this.b),As.subVectors(this.a,this.b),Gi.cross(As).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return uo.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return uo.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,s,a){return uo.getInterpolation(t,this.a,this.b,this.c,e,n,s,a)}containsPoint(t){return uo.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return uo.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,a=this.c;let l,c;ja.subVectors(s,n),Ka.subVectors(a,n),tp.subVectors(t,n);const u=ja.dot(tp),f=Ka.dot(tp);if(u<=0&&f<=0)return e.copy(n);ep.subVectors(t,s);const d=ja.dot(ep),m=Ka.dot(ep);if(d>=0&&m<=d)return e.copy(s);const g=u*m-d*f;if(g<=0&&u>=0&&d<=0)return l=u/(u-d),e.copy(n).addScaledVector(ja,l);np.subVectors(t,a);const v=ja.dot(np),x=Ka.dot(np);if(x>=0&&v<=x)return e.copy(a);const M=v*f-u*x;if(M<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(Ka,c);const S=d*x-v*m;if(S<=0&&m-d>=0&&v-x>=0)return Ov.subVectors(a,s),c=(m-d)/(m-d+(v-x)),e.copy(s).addScaledVector(Ov,c);const _=1/(S+M+g);return l=M*_,c=g*_,e.copy(n).addScaledVector(ja,l).addScaledVector(Ka,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const Ix={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},sr={h:0,s:0,l:0},iu={h:0,s:0,l:0};function ap(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}let Ot=class{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=zn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Te.colorSpaceToWorking(this,e),this}setRGB(t,e,n,s=Te.workingColorSpace){return this.r=t,this.g=e,this.b=n,Te.colorSpaceToWorking(this,s),this}setHSL(t,e,n,s=Te.workingColorSpace){if(t=Om(t,1),e=de(e,0,1),n=de(n,0,1),e===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+e):n+e-n*e,l=2*n-a;this.r=ap(l,a,t+1/3),this.g=ap(l,a,t),this.b=ap(l,a,t-1/3)}return Te.colorSpaceToWorking(this,s),this}setStyle(t,e=zn){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const l=s[1],c=s[2];switch(l){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,e);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,e);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=s[1],l=a.length;if(l===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(a,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=zn){const n=Ix[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ls(t.r),this.g=Ls(t.g),this.b=Ls(t.b),this}copyLinearToSRGB(t){return this.r=vo(t.r),this.g=vo(t.g),this.b=vo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=zn){return Te.workingToColorSpace(In.copy(this),t),Math.round(de(In.r*255,0,255))*65536+Math.round(de(In.g*255,0,255))*256+Math.round(de(In.b*255,0,255))}getHexString(t=zn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Te.workingColorSpace){Te.workingToColorSpace(In.copy(this),e);const n=In.r,s=In.g,a=In.b,l=Math.max(n,s,a),c=Math.min(n,s,a);let u,f;const d=(c+l)/2;if(c===l)u=0,f=0;else{const m=l-c;switch(f=d<=.5?m/(l+c):m/(2-l-c),l){case n:u=(s-a)/m+(s<a?6:0);break;case s:u=(a-n)/m+2;break;case a:u=(n-s)/m+4;break}u/=6}return t.h=u,t.s=f,t.l=d,t}getRGB(t,e=Te.workingColorSpace){return Te.workingToColorSpace(In.copy(this),e),t.r=In.r,t.g=In.g,t.b=In.b,t}getStyle(t=zn){Te.workingToColorSpace(In.copy(this),t);const e=In.r,n=In.g,s=In.b;return t!==zn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(t,e,n){return this.getHSL(sr),this.setHSL(sr.h+t,sr.s+e,sr.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(sr),t.getHSL(iu);const n=Nl(sr.h,iu.h,e),s=Nl(sr.s,iu.s,e),a=Nl(sr.l,iu.l,e);return this.setHSL(n,s,a),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,s=this.b,a=t.elements;return this.r=a[0]*e+a[3]*n+a[6]*s,this.g=a[1]*e+a[4]*n+a[7]*s,this.b=a[2]*e+a[5]*n+a[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const In=new Ot;Ot.NAMES=Ix;let FE=0;class Hn extends us{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:FE++}),this.uuid=_i(),this.name="",this.type="Material",this.blending=ra,this.side=Ps,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Zu,this.blendDst=ju,this.blendEquation=lr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ot(0,0,0),this.blendAlpha=0,this.depthFunc=la,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=rm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$r,this.stencilZFail=$r,this.stencilZPass=$r,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ra&&(n.blending=this.blending),this.side!==Ps&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Zu&&(n.blendSrc=this.blendSrc),this.blendDst!==ju&&(n.blendDst=this.blendDst),this.blendEquation!==lr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==la&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==rm&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==$r&&(n.stencilFail=this.stencilFail),this.stencilZFail!==$r&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==$r&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(e){const a=s(t.textures),l=s(t.images);a.length>0&&(n.textures=a),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let a=0;a!==s;++a)n[a]=e[a].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class vr extends Hn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ot(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new qi,this.combine=nc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Us=HE();function HE(){const i=new ArrayBuffer(4),t=new Float32Array(i),e=new Uint32Array(i),n=new Uint32Array(512),s=new Uint32Array(512);for(let u=0;u<256;++u){const f=u-127;f<-27?(n[u]=0,n[u|256]=32768,s[u]=24,s[u|256]=24):f<-14?(n[u]=1024>>-f-14,n[u|256]=1024>>-f-14|32768,s[u]=-f-1,s[u|256]=-f-1):f<=15?(n[u]=f+15<<10,n[u|256]=f+15<<10|32768,s[u]=13,s[u|256]=13):f<128?(n[u]=31744,n[u|256]=64512,s[u]=24,s[u|256]=24):(n[u]=31744,n[u|256]=64512,s[u]=13,s[u|256]=13)}const a=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let f=u<<13,d=0;for(;(f&8388608)===0;)f<<=1,d-=8388608;f&=-8388609,d+=947912704,a[u]=f|d}for(let u=1024;u<2048;++u)a[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:s,mantissaTable:a,exponentTable:l,offsetTable:c}}function ei(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=de(i,-65504,65504),Us.floatView[0]=i;const t=Us.uint32View[0],e=t>>23&511;return Us.baseTable[e]+((t&8388607)>>Us.shiftTable[e])}function Ml(i){const t=i>>10;return Us.uint32View[0]=Us.mantissaTable[Us.offsetTable[t]+(i&1023)]+Us.exponentTable[t],Us.floatView[0]}class VE{static toHalfFloat(t){return ei(t)}static fromHalfFloat(t){return Ml(t)}}const cn=new B,su=new pt;let GE=0;class ke{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:GE++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Xl,this.updateRanges=[],this.gpuType=ii,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,a=this.itemSize;s<a;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)su.fromBufferAttribute(this,e),su.applyMatrix3(t),this.setXY(e,su.x,su.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix3(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix4(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyNormalMatrix(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.transformDirection(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Yn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ge(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Yn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Yn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Yn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Yn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,a){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array),a=ge(a,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=a,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Xl&&(t.usage=this.usage),t}}class kE extends ke{constructor(t,e,n){super(new Int8Array(t),e,n)}}class WE extends ke{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class XE extends ke{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class qE extends ke{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Bm extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class YE extends ke{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Fm extends ke{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class ZE extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Ml(this.array[t*this.itemSize]);return this.normalized&&(e=Yn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize]=ei(e),this}getY(t){let e=Ml(this.array[t*this.itemSize+1]);return this.normalized&&(e=Yn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+1]=ei(e),this}getZ(t){let e=Ml(this.array[t*this.itemSize+2]);return this.normalized&&(e=Yn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+2]=ei(e),this}getW(t){let e=Ml(this.array[t*this.itemSize+3]);return this.normalized&&(e=Yn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ge(e,this.array)),this.array[t*this.itemSize+3]=ei(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this.array[t+2]=ei(s),this}setXYZW(t,e,n,s,a){return t*=this.itemSize,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array),a=ge(a,this.array)),this.array[t+0]=ei(e),this.array[t+1]=ei(n),this.array[t+2]=ei(s),this.array[t+3]=ei(a),this}}class qt extends ke{constructor(t,e,n){super(new Float32Array(t),e,n)}}let jE=0;const Ri=new re,op=new De,Ja=new B,vi=new Fn,dl=new Fn,xn=new B;class ve extends us{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:jE++}),this.uuid=_i(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ux(t)?Fm:Bm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new pe().getNormalMatrix(t);n.applyNormalMatrix(a),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ri.makeRotationFromQuaternion(t),this.applyMatrix4(Ri),this}rotateX(t){return Ri.makeRotationX(t),this.applyMatrix4(Ri),this}rotateY(t){return Ri.makeRotationY(t),this.applyMatrix4(Ri),this}rotateZ(t){return Ri.makeRotationZ(t),this.applyMatrix4(Ri),this}translate(t,e,n){return Ri.makeTranslation(t,e,n),this.applyMatrix4(Ri),this}scale(t,e,n){return Ri.makeScale(t,e,n),this.applyMatrix4(Ri),this}lookAt(t){return op.lookAt(t),op.updateMatrix(),this.applyMatrix4(op.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ja).negate(),this.translate(Ja.x,Ja.y,Ja.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let s=0,a=t.length;s<a;s++){const l=t[s];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new qt(n,3))}else{const n=Math.min(t.length,e.count);for(let s=0;s<n;s++){const a=t[s];e.setXYZ(s,a.x,a.y,a.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const a=e[n];vi.setFromBufferAttribute(a),this.morphTargetsRelative?(xn.addVectors(this.boundingBox.min,vi.min),this.boundingBox.expandByPoint(xn),xn.addVectors(this.boundingBox.max,vi.max),this.boundingBox.expandByPoint(xn)):(this.boundingBox.expandByPoint(vi.min),this.boundingBox.expandByPoint(vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(t){const n=this.boundingSphere.center;if(vi.setFromBufferAttribute(t),e)for(let a=0,l=e.length;a<l;a++){const c=e[a];dl.setFromBufferAttribute(c),this.morphTargetsRelative?(xn.addVectors(vi.min,dl.min),vi.expandByPoint(xn),xn.addVectors(vi.max,dl.max),vi.expandByPoint(xn)):(vi.expandByPoint(dl.min),vi.expandByPoint(dl.max))}vi.getCenter(n);let s=0;for(let a=0,l=t.count;a<l;a++)xn.fromBufferAttribute(t,a),s=Math.max(s,n.distanceToSquared(xn));if(e)for(let a=0,l=e.length;a<l;a++){const c=e[a],u=this.morphTargetsRelative;for(let f=0,d=c.count;f<d;f++)xn.fromBufferAttribute(c,f),u&&(Ja.fromBufferAttribute(t,f),xn.add(Ja)),s=Math.max(s,n.distanceToSquared(xn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,s=e.normal,a=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ke(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let I=0;I<n.count;I++)c[I]=new B,u[I]=new B;const f=new B,d=new B,m=new B,g=new pt,v=new pt,x=new pt,M=new B,S=new B;function _(I,C,w){f.fromBufferAttribute(n,I),d.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(a,I),v.fromBufferAttribute(a,C),x.fromBufferAttribute(a,w),d.sub(f),m.sub(f),v.sub(g),x.sub(g);const z=1/(v.x*x.y-x.x*v.y);isFinite(z)&&(M.copy(d).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(z),S.copy(m).multiplyScalar(v.x).addScaledVector(d,-x.x).multiplyScalar(z),c[I].add(M),c[C].add(M),c[w].add(M),u[I].add(S),u[C].add(S),u[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let I=0,C=E.length;I<C;++I){const w=E[I],z=w.start,Z=w.count;for(let k=z,W=z+Z;k<W;k+=3)_(t.getX(k+0),t.getX(k+1),t.getX(k+2))}const A=new B,T=new B,U=new B,R=new B;function P(I){U.fromBufferAttribute(s,I),R.copy(U);const C=c[I];A.copy(C),A.sub(U.multiplyScalar(U.dot(C))).normalize(),T.crossVectors(R,C);const z=T.dot(u[I])<0?-1:1;l.setXYZW(I,A.x,A.y,A.z,z)}for(let I=0,C=E.length;I<C;++I){const w=E[I],z=w.start,Z=w.count;for(let k=z,W=z+Z;k<W;k+=3)P(t.getX(k+0)),P(t.getX(k+1)),P(t.getX(k+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ke(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const s=new B,a=new B,l=new B,c=new B,u=new B,f=new B,d=new B,m=new B;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),M=t.getX(g+1),S=t.getX(g+2);s.fromBufferAttribute(e,x),a.fromBufferAttribute(e,M),l.fromBufferAttribute(e,S),d.subVectors(l,a),m.subVectors(s,a),d.cross(m),c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,M),f.fromBufferAttribute(n,S),c.add(d),u.add(d),f.add(d),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)s.fromBufferAttribute(e,g+0),a.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),d.subVectors(l,a),m.subVectors(s,a),d.cross(m),n.setXYZ(g+0,d.x,d.y,d.z),n.setXYZ(g+1,d.x,d.y,d.z),n.setXYZ(g+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)xn.fromBufferAttribute(t,e),xn.normalize(),t.setXYZ(e,xn.x,xn.y,xn.z)}toNonIndexed(){function t(c,u){const f=c.array,d=c.itemSize,m=c.normalized,g=new f.constructor(u.length*d);let v=0,x=0;for(let M=0,S=u.length;M<S;M++){c.isInterleavedBufferAttribute?v=u[M]*c.data.stride+c.offset:v=u[M]*d;for(let _=0;_<d;_++)g[x++]=f[v++]}return new ke(g,d,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ve,n=this.index.array,s=this.attributes;for(const c in s){const u=s[c],f=t(u,n);e.setAttribute(c,f)}const a=this.morphAttributes;for(const c in a){const u=[],f=a[c];for(let d=0,m=f.length;d<m;d++){const g=f[d],v=t(g,n);u.push(v)}e.morphAttributes[c]=u}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const f in u)u[f]!==void 0&&(t[f]=u[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const u in n){const f=n[u];t.data.attributes[u]=f.toJSON(t.data)}const s={};let a=!1;for(const u in this.morphAttributes){const f=this.morphAttributes[u],d=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];d.push(v.toJSON(t.data))}d.length>0&&(s[u]=d,a=!0)}a&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const s=t.attributes;for(const f in s){const d=s[f];this.setAttribute(f,d.clone(e))}const a=t.morphAttributes;for(const f in a){const d=[],m=a[f];for(let g=0,v=m.length;g<v;g++)d.push(m[g].clone(e));this.morphAttributes[f]=d}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,d=l.length;f<d;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=t.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const zv=new re,Vr=new Do,ru=new wn,Bv=new B,au=new B,ou=new B,lu=new B,lp=new B,cu=new B,Fv=new B,uu=new B;let fn=class extends De{constructor(t=new ve,e=new vr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=s.length;a<l;a++){const c=s[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,a=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const c=this.morphTargetInfluences;if(a&&c){cu.set(0,0,0);for(let u=0,f=a.length;u<f;u++){const d=c[u],m=a[u];d!==0&&(lp.fromBufferAttribute(m,t),l?cu.addScaledVector(lp,d):cu.addScaledVector(lp.sub(e),d))}e.add(cu)}return e}raycast(t,e){const n=this.geometry,s=this.material,a=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ru.copy(n.boundingSphere),ru.applyMatrix4(a),Vr.copy(t.ray).recast(t.near),!(ru.containsPoint(Vr.origin)===!1&&(Vr.intersectSphere(ru,Bv)===null||Vr.origin.distanceToSquared(Bv)>(t.far-t.near)**2))&&(zv.copy(a).invert(),Vr.copy(t.ray).applyMatrix4(zv),!(n.boundingBox!==null&&Vr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Vr)))}_computeIntersections(t,e,n){let s;const a=this.geometry,l=this.material,c=a.index,u=a.attributes.position,f=a.attributes.uv,d=a.attributes.uv1,m=a.attributes.normal,g=a.groups,v=a.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const R=c.getX(T),P=c.getX(T+1),I=c.getX(T+2);s=hu(this,_,t,n,f,d,m,R,P,I),s&&(s.faceIndex=Math.floor(T/3),s.face.materialIndex=S.materialIndex,e.push(s))}}else{const x=Math.max(0,v.start),M=Math.min(c.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);s=hu(this,l,t,n,f,d,m,E,A,T),s&&(s.faceIndex=Math.floor(S/3),e.push(s))}}else if(u!==void 0)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(u.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const R=T,P=T+1,I=T+2;s=hu(this,_,t,n,f,d,m,R,P,I),s&&(s.faceIndex=Math.floor(T/3),s.face.materialIndex=S.materialIndex,e.push(s))}}else{const x=Math.max(0,v.start),M=Math.min(u.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const E=S,A=S+1,T=S+2;s=hu(this,l,t,n,f,d,m,E,A,T),s&&(s.faceIndex=Math.floor(S/3),e.push(s))}}}};function KE(i,t,e,n,s,a,l,c){let u;if(t.side===Zn?u=n.intersectTriangle(l,a,s,!0,c):u=n.intersectTriangle(s,a,l,t.side===Ps,c),u===null)return null;uu.copy(c),uu.applyMatrix4(i.matrixWorld);const f=e.ray.origin.distanceTo(uu);return f<e.near||f>e.far?null:{distance:f,point:uu.clone(),object:i}}function hu(i,t,e,n,s,a,l,c,u,f){i.getVertexPosition(c,au),i.getVertexPosition(u,ou),i.getVertexPosition(f,lu);const d=KE(i,t,e,n,au,ou,lu,Fv);if(d){const m=new B;cr.getBarycoord(Fv,au,ou,lu,m),s&&(d.uv=cr.getInterpolatedAttribute(s,c,u,f,m,new pt)),a&&(d.uv1=cr.getInterpolatedAttribute(a,c,u,f,m,new pt)),l&&(d.normal=cr.getInterpolatedAttribute(l,c,u,f,m,new B),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const g={a:c,b:u,c:f,normal:new B,materialIndex:0};cr.getNormal(au,ou,lu,g.normal),d.face=g,d.barycoord=m}return d}class fa extends ve{constructor(t=1,e=1,n=1,s=1,a=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:a,depthSegments:l};const c=this;s=Math.floor(s),a=Math.floor(a),l=Math.floor(l);const u=[],f=[],d=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,a,0),x("z","y","x",1,-1,n,e,-t,l,a,1),x("x","z","y",1,1,t,n,e,s,l,2),x("x","z","y",1,-1,t,n,-e,s,l,3),x("x","y","z",1,-1,t,e,n,s,a,4),x("x","y","z",-1,-1,t,e,-n,s,a,5),this.setIndex(u),this.setAttribute("position",new qt(f,3)),this.setAttribute("normal",new qt(d,3)),this.setAttribute("uv",new qt(m,2));function x(M,S,_,E,A,T,U,R,P,I,C){const w=T/P,z=U/I,Z=T/2,k=U/2,W=R/2,rt=P+1,H=I+1;let Y=0,G=0;const st=new B;for(let lt=0;lt<H;lt++){const mt=lt*z-k;for(let wt=0;wt<rt;wt++){const jt=wt*w-Z;st[M]=jt*E,st[S]=mt*A,st[_]=W,f.push(st.x,st.y,st.z),st[M]=0,st[S]=0,st[_]=R>0?1:-1,d.push(st.x,st.y,st.z),m.push(wt/P),m.push(1-lt/I),Y+=1}}for(let lt=0;lt<I;lt++)for(let mt=0;mt<P;mt++){const wt=g+mt+rt*lt,jt=g+mt+rt*(lt+1),$=g+(mt+1)+rt*(lt+1),gt=g+(mt+1)+rt*lt;u.push(wt,jt,gt),u.push(jt,$,gt),G+=6}c.addGroup(v,G,C),v+=G,g+=Y}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new fa(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Eo(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function qn(i){const t={};for(let e=0;e<i.length;e++){const n=Eo(i[e]);for(const s in n)t[s]=n[s]}return t}function JE(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function Ox(i){const t=i.getRenderTarget();return t===null?i.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Te.workingColorSpace}const zx={clone:Eo,merge:qn};var QE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$E=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Yi extends Hn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=QE,this.fragmentShader=$E,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Eo(t.uniforms),this.uniformsGroups=JE(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const l=this.uniforms[s].value;l&&l.isTexture?e.uniforms[s]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[s]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[s]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[s]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[s]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[s]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[s]={type:"m4",value:l.toArray()}:e.uniforms[s]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}let Kh=class extends De{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new re,this.projectionMatrix=new re,this.projectionMatrixInverse=new re,this.coordinateSystem=Ui}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const rr=new B,Hv=new pt,Vv=new pt;class Sn extends Kh{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Mo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(aa*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Mo*2*Math.atan(Math.tan(aa*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){rr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(rr.x,rr.y).multiplyScalar(-t/rr.z),rr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(rr.x,rr.y).multiplyScalar(-t/rr.z)}getViewSize(t,e){return this.getViewBounds(t,Hv,Vv),e.subVectors(Vv,Hv)}setViewOffset(t,e,n,s,a,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=a,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(aa*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,a=-.5*s;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,f=l.fullHeight;a+=l.offsetX*s/u,e-=l.offsetY*n/f,s*=l.width/u,n*=l.height/f}const c=this.filmOffset;c!==0&&(a+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+s,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Qa=-90,$a=1;class Bx extends De{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Sn(Qa,$a,t,e);s.layers=this.layers,this.add(s);const a=new Sn(Qa,$a,t,e);a.layers=this.layers,this.add(a);const l=new Sn(Qa,$a,t,e);l.layers=this.layers,this.add(l);const c=new Sn(Qa,$a,t,e);c.layers=this.layers,this.add(c);const u=new Sn(Qa,$a,t,e);u.layers=this.layers,this.add(u);const f=new Sn(Qa,$a,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,s,a,l,c,u]=e;for(const f of e)this.remove(f);if(t===Ui)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(t===ql)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[a,l,c,u,f,d]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,s),t.render(e,a),t.setRenderTarget(n,1,s),t.render(e,l),t.setRenderTarget(n,2,s),t.render(e,c),t.setRenderTarget(n,3,s),t.render(e,u),t.setRenderTarget(n,4,s),t.render(e,f),n.texture.generateMipmaps=M,t.setRenderTarget(n,5,s),t.render(e,d),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class sc extends rn{constructor(t=[],e=Is,n,s,a,l,c,u,f,d){super(t,e,n,s,a,l,c,u,f,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Fx extends cs{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new sc(s),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new fa(5,5,5),a=new Yi({name:"CubemapFromEquirect",uniforms:Eo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Zn,blending:Ns});a.uniforms.tEquirect.value=e;const l=new fn(s,a),c=e.minFilter;return e.minFilter===rs&&(e.minFilter=pn),new Bx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,s=!0){const a=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,s);t.setRenderTarget(a)}}class po extends De{constructor(){super(),this.isGroup=!0,this.type="Group"}}const tT={type:"move"};class Wu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new po,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new po,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new po,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,a=null,l=null;const c=this._targetRay,u=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const M of t.hand.values()){const S=e.getJointPose(M,n),_=this._getHandJoint(f,M);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const d=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=d.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else u!==null&&t.gripSpace&&(a=e.getPose(t.gripSpace,n),a!==null&&(u.matrix.fromArray(a.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,a.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(a.linearVelocity)):u.hasLinearVelocity=!1,a.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(a.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&a!==null&&(s=a),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(tT)))}return c!==null&&(c.visible=s!==null),u!==null&&(u.visible=a!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new po;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Jh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ot(t),this.density=e}clone(){return new Jh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Qh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ot(t),this.near=e,this.far=n}clone(){return new Qh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Hm extends De{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new qi,this.environmentIntensity=1,this.environmentRotation=new qi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class $h{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Xl,this.updateRanges=[],this.version=0,this.uuid=_i()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let s=0,a=this.stride;s<a;s++)this.array[t+s]=e.array[n+s];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_i()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_i()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Xn=new B;class ca{constructor(t,e,n,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.applyMatrix4(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.applyNormalMatrix(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Xn.fromBufferAttribute(this,e),Xn.transformDirection(t),this.setXYZ(e,Xn.x,Xn.y,Xn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Yn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ge(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ge(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ge(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ge(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ge(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Yn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Yn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Yn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Yn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=s,this}setXYZW(t,e,n,s,a){return t=t*this.data.stride+this.offset,this.normalized&&(e=ge(e,this.array),n=ge(n,this.array),s=ge(s,this.array),a=ge(a,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=s,this.data.array[t+3]=a,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)e.push(this.data.array[s+a])}return new ke(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ca(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const s=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)e.push(this.data.array[s+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Vm extends Hn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ot(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let to;const pl=new B,eo=new B,no=new B,io=new pt,ml=new pt,Hx=new re,fu=new B,gl=new B,du=new B,Gv=new pt,cp=new pt,kv=new pt;class Vx extends De{constructor(t=new Vm){if(super(),this.isSprite=!0,this.type="Sprite",to===void 0){to=new ve;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new $h(e,5);to.setIndex([0,1,2,0,2,3]),to.setAttribute("position",new ca(n,3,0,!1)),to.setAttribute("uv",new ca(n,2,3,!1))}this.geometry=to,this.material=t,this.center=new pt(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),eo.setFromMatrixScale(this.matrixWorld),Hx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),no.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&eo.multiplyScalar(-no.z);const n=this.material.rotation;let s,a;n!==0&&(a=Math.cos(n),s=Math.sin(n));const l=this.center;pu(fu.set(-.5,-.5,0),no,l,eo,s,a),pu(gl.set(.5,-.5,0),no,l,eo,s,a),pu(du.set(.5,.5,0),no,l,eo,s,a),Gv.set(0,0),cp.set(1,0),kv.set(1,1);let c=t.ray.intersectTriangle(fu,gl,du,!1,pl);if(c===null&&(pu(gl.set(-.5,.5,0),no,l,eo,s,a),cp.set(0,1),c=t.ray.intersectTriangle(fu,du,gl,!1,pl),c===null))return;const u=t.ray.origin.distanceTo(pl);u<t.near||u>t.far||e.push({distance:u,point:pl.clone(),uv:cr.getInterpolation(pl,fu,gl,du,Gv,cp,kv,new pt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function pu(i,t,e,n,s,a){io.subVectors(i,e).addScalar(.5).multiply(n),s!==void 0?(ml.x=a*io.x-s*io.y,ml.y=s*io.x+a*io.y):ml.copy(io),i.copy(t),i.x+=ml.x,i.y+=ml.y,i.applyMatrix4(Hx)}const mu=new B,Wv=new B;class Gx extends De{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,s=e.length;n<s;n++){const a=e[n];this.addLevel(a.object.clone(),a.distance,a.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const s=this.levels;let a;for(a=0;a<s.length&&!(e<s[a].distance);a++);return s.splice(a,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const s=e.splice(n,1);return this.remove(s[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,s;for(n=1,s=e.length;n<s;n++){let a=e[n].distance;if(e[n].object.visible&&(a-=a*e[n].hysteresis),t<a)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){mu.setFromMatrixPosition(this.matrixWorld);const s=t.ray.origin.distanceTo(mu);this.getObjectForDistance(s).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){mu.setFromMatrixPosition(t.matrixWorld),Wv.setFromMatrixPosition(this.matrixWorld);const n=mu.distanceTo(Wv)/t.zoom;e[0].object.visible=!0;let s,a;for(s=1,a=e.length;s<a;s++){let l=e[s].distance;if(e[s].object.visible&&(l-=l*e[s].hysteresis),n>=l)e[s-1].object.visible=!1,e[s].object.visible=!0;else break}for(this._currentLevel=s-1;s<a;s++)e[s].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let s=0,a=n.length;s<a;s++){const l=n[s];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Xv=new B,qv=new Re,Yv=new Re,eT=new B,Zv=new re,gu=new B,up=new wn,jv=new re,hp=new Do;class kx extends fn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=sm,this.bindMatrix=new re,this.bindMatrixInverse=new re,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Fn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,gu),this.boundingBox.expandByPoint(gu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new wn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,gu),this.boundingSphere.expandByPoint(gu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,s=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),up.copy(this.boundingSphere),up.applyMatrix4(s),t.ray.intersectsSphere(up)!==!1&&(jv.copy(s).invert(),hp.copy(t.ray).applyMatrix4(jv),!(this.boundingBox!==null&&hp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,hp)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Re,e=this.geometry.attributes.skinWeight;for(let n=0,s=e.count;n<s;n++){t.fromBufferAttribute(e,n);const a=1/t.manhattanLength();a!==1/0?t.multiplyScalar(a):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===sm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===vx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,s=this.geometry;qv.fromBufferAttribute(s.attributes.skinIndex,t),Yv.fromBufferAttribute(s.attributes.skinWeight,t),Xv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let a=0;a<4;a++){const l=Yv.getComponent(a);if(l!==0){const c=qv.getComponent(a);Zv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(eT.copy(Xv).applyMatrix4(Zv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Gm extends De{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ls extends rn{constructor(t=null,e=1,n=1,s,a,l,c,u,f=An,d=An,m,g){super(null,l,c,u,f,d,s,a,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Kv=new re,nT=new re;class tf{constructor(t=[],e=[]){this.uuid=_i(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new re)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new re;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,s=this.boneTexture;for(let a=0,l=t.length;a<l;a++){const c=t[a]?t[a].matrixWorld:nT;Kv.multiplyMatrices(c,e[a]),Kv.toArray(n,a*16)}s!==null&&(s.needsUpdate=!0)}clone(){return new tf(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new ls(e,t,t,Bn,ii);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const s=this.bones[e];if(s.name===t)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,s=t.bones.length;n<s;n++){const a=t.bones[n];let l=e[a];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),l=new Gm),this.bones.push(l),this.boneInverses.push(new re().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let s=0,a=e.length;s<a;s++){const l=e[s];t.bones.push(l.uuid);const c=n[s];t.boneInverses.push(c.toArray())}return t}}class To extends ke{constructor(t,e,n,s=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const so=new re,Jv=new re,vu=[],Qv=new Fn,iT=new re,vl=new fn,_l=new wn;class Wx extends fn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new To(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let s=0;s<n;s++)this.setMatrixAt(s,iT)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Fn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,so),Qv.copy(t.boundingBox).applyMatrix4(so),this.boundingBox.union(Qv)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new wn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,so),_l.copy(t.boundingSphere).applyMatrix4(so),this.boundingSphere.union(_l)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,s=this.morphTexture.source.data.data,a=n.length+1,l=t*a+1;for(let c=0;c<n.length;c++)n[c]=s[l+c]}raycast(t,e){const n=this.matrixWorld,s=this.count;if(vl.geometry=this.geometry,vl.material=this.material,vl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),_l.copy(this.boundingSphere),_l.applyMatrix4(n),t.ray.intersectsSphere(_l)!==!1))for(let a=0;a<s;a++){this.getMatrixAt(a,so),Jv.multiplyMatrices(n,so),vl.matrixWorld=Jv,vl.raycast(t,vu);for(let l=0,c=vu.length;l<c;l++){const u=vu[l];u.instanceId=a,u.object=this,e.push(u)}vu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new To(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,s=n.length+1;this.morphTexture===null&&(this.morphTexture=new ls(new Float32Array(s*this.count),s,this.count,Wh,ii));const a=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,u=s*t;a[u]=c,a.set(n,u+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const fp=new B,sT=new B,rT=new pe;class or{constructor(t=new B(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=fp.subVectors(n,e).cross(sT.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(fp),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/s;return a<0||a>1?null:e.copy(t.start).addScaledVector(n,a)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||rT.getNormalMatrix(t),s=this.coplanarPoint(fp).applyMatrix4(t),a=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Gr=new wn,aT=new pt(.5,.5),_u=new B;class Uo{constructor(t=new or,e=new or,n=new or,s=new or,a=new or,l=new or){this.planes=[t,e,n,s,a,l]}set(t,e,n,s,a,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(s),c[4].copy(a),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Ui){const n=this.planes,s=t.elements,a=s[0],l=s[1],c=s[2],u=s[3],f=s[4],d=s[5],m=s[6],g=s[7],v=s[8],x=s[9],M=s[10],S=s[11],_=s[12],E=s[13],A=s[14],T=s[15];if(n[0].setComponents(u-a,g-f,S-v,T-_).normalize(),n[1].setComponents(u+a,g+f,S+v,T+_).normalize(),n[2].setComponents(u+l,g+d,S+x,T+E).normalize(),n[3].setComponents(u-l,g-d,S-x,T-E).normalize(),n[4].setComponents(u-c,g-m,S-M,T-A).normalize(),e===Ui)n[5].setComponents(u+c,g+m,S+M,T+A).normalize();else if(e===ql)n[5].setComponents(c,m,M,A).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Gr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Gr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Gr)}intersectsSprite(t){Gr.center.set(0,0,0);const e=aT.distanceTo(t.center);return Gr.radius=.7071067811865476+e,Gr.applyMatrix4(t.matrixWorld),this.intersectsSphere(Gr)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let a=0;a<6;a++)if(e[a].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(_u.x=s.normal.x>0?t.max.x:t.min.x,_u.y=s.normal.y>0?t.max.y:t.min.y,_u.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(_u)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ns=new re,is=new Uo;class ef{constructor(){this.coordinateSystem=Ui}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(ns.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(ns.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(ns.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(ns.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const s=e.cameras[n];if(ns.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),is.setFromProjectionMatrix(ns,this.coordinateSystem),is.containsPoint(t))return!0}return!1}clone(){return new ef}}function dp(i,t){return i-t}function oT(i,t){return i.z-t.z}function lT(i,t){return t.z-i.z}class cT{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,s){const a=this.pool,l=this.list;this.index>=a.length&&a.push({start:-1,count:-1,z:-1,index:-1});const c=a[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=s}reset(){this.list.length=0,this.index=0}}const ti=new re,uT=new Ot(1,1,1),$v=new Uo,hT=new ef,yu=new Fn,kr=new wn,yl=new B,t_=new B,fT=new B,pp=new cT,On=new fn,xu=[];function dT(i,t,e=0){const n=t.itemSize;if(i.isInterleavedBufferAttribute||i.array.constructor!==t.array.constructor){const s=i.count;for(let a=0;a<s;a++)for(let l=0;l<n;l++)t.setComponent(a+e,l,i.getComponent(a,l))}else t.array.set(i.array,e*n);t.needsUpdate=!0}function Wr(i,t){if(i.constructor!==t.constructor){const e=Math.min(i.length,t.length);for(let n=0;n<e;n++)t[n]=i[n]}else{const e=Math.min(i.length,t.length);t.set(new i.constructor(i.buffer,0,e))}}class Xx extends fn{constructor(t,e,n=e*2,s){super(new ve,s),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new ls(e,t,t,Bn,ii);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new ls(e,t,t,ic,Os);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new ls(e,t,t,Bn,ii);n.colorSpace=Te.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const a in t.attributes){const l=t.getAttribute(a),{array:c,itemSize:u,normalized:f}=l,d=new c.constructor(n*u),m=new ke(d,u,f);e.setAttribute(a,m)}if(t.getIndex()!==null){const a=n>65535?new Uint32Array(s):new Uint16Array(s);e.setIndex(new ke(a,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const s=t.getAttribute(n),a=e.getAttribute(n);if(s.itemSize!==a.itemSize||s.normalized!==a.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,s=e.length;n<s;n++){if(e[n].active===!1)continue;const a=e[n].geometryIndex;this.getMatrixAt(n,ti),this.getBoundingBoxAt(a,yu).applyMatrix4(ti),t.union(yu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wn);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,s=e.length;n<s;n++){if(e[n].active===!1)continue;const a=e[n].geometryIndex;this.getMatrixAt(n,ti),this.getBoundingSphereAt(a,kr).applyMatrix4(ti),t.union(kr)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let s=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(dp),s=this._availableInstanceIds.shift(),this._instanceInfo[s]=n):(s=this._instanceInfo.length,this._instanceInfo.push(n));const a=this._matricesTexture;ti.identity().toArray(a.image.data,s*16),a.needsUpdate=!0;const l=this._colorsTexture;return l&&(uT.toArray(l.image.data,s*4),l.needsUpdate=!0),this._visibilityChanged=!0,s}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const s={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},a=this._geometryInfo;s.vertexStart=this._nextVertexStart,s.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(s.indexStart=this._nextIndexStart,s.reservedIndexCount=n===-1?l.count:n),s.indexStart!==-1&&s.indexStart+s.reservedIndexCount>this._maxIndexCount||s.vertexStart+s.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(dp),u=this._availableGeometryIds.shift(),a[u]=s):(u=this._geometryCount,this._geometryCount++,a.push(s)),this.setGeometryAt(u,t),this._nextIndexStart=s.indexStart+s.reservedIndexCount,this._nextVertexStart=s.vertexStart+s.reservedVertexCount,u}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,s=n.getIndex()!==null,a=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(s&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const d in n.attributes){const m=e.getAttribute(d),g=n.getAttribute(d);dT(m,g,u);const v=m.itemSize;for(let x=m.count,M=f;x<M;x++){const S=u+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(u*v,f*v)}if(s){const d=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)a.setX(d+g,u+l.getX(g));for(let g=l.count,v=m;g<v;g++)a.setX(d+g,u);a.needsUpdate=!0,a.addUpdateRange(d,c.reservedIndexCount)}return c.start=s?c.indexStart:c.vertexStart,c.count=s?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let s=0,a=n.length;s<a;s++)n[s].active&&n[s].geometryIndex===t&&this.deleteInstance(s);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,s=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),a=this.geometry;for(let l=0,c=n.length;l<c;l++){const u=s[l],f=n[u];if(f.active!==!1){if(a.index!==null){if(f.indexStart!==e){const{indexStart:d,vertexStart:m,reservedIndexCount:g}=f,v=a.index,x=v.array,M=t-m;for(let S=d;S<d+g;S++)x[S]=x[S]+M;v.array.copyWithin(e,d,d+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:d,reservedVertexCount:m}=f,g=a.attributes;for(const v in g){const x=g[v],{array:M,itemSize:S}=x;M.copyWithin(t*S,d*S,(d+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=a.index?f.indexStart:f.vertexStart,this._nextIndexStart=a.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,s=this._geometryInfo[t];if(s.boundingBox===null){const a=new Fn,l=n.index,c=n.attributes.position;for(let u=s.start,f=s.start+s.count;u<f;u++){let d=u;l&&(d=l.getX(d)),a.expandByPoint(yl.fromBufferAttribute(c,d))}s.boundingBox=a}return e.copy(s.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,s=this._geometryInfo[t];if(s.boundingSphere===null){const a=new wn;this.getBoundingBoxAt(t,yu),yu.getCenter(a.center);const l=n.index,c=n.attributes.position;let u=0;for(let f=s.start,d=s.start+s.count;f<d;f++){let m=f;l&&(m=l.getX(m)),yl.fromBufferAttribute(c,m),u=Math.max(u,a.center.distanceToSquared(yl))}a.radius=Math.sqrt(u),s.boundingSphere=a}return e.copy(s.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,s=this._matricesTexture.image.data;return e.toArray(s,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(dp);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const s=new Int32Array(t),a=new Int32Array(t);Wr(this._multiDrawCounts,s),Wr(this._multiDrawStarts,a),this._multiDrawCounts=s,this._multiDrawStarts=a,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Wr(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Wr(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),Wr(u.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const a=this.geometry;a.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ve,this._initializeGeometry(a));const l=this.geometry;a.index&&Wr(a.index.array,l.index.array);for(const c in a.attributes)Wr(a.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,s=this._geometryInfo,a=this.matrixWorld,l=this.geometry;On.material=this.material,On.geometry.index=l.index,On.geometry.attributes=l.attributes,On.geometry.boundingBox===null&&(On.geometry.boundingBox=new Fn),On.geometry.boundingSphere===null&&(On.geometry.boundingSphere=new wn);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,d=s[f];On.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(c,On.matrixWorld).premultiply(a),this.getBoundingBoxAt(f,On.geometry.boundingBox),this.getBoundingSphereAt(f,On.geometry.boundingSphere),On.raycast(t,xu);for(let m=0,g=xu.length;m<g;m++){const v=xu[m];v.object=this,v.batchId=c,e.push(v)}xu.length=0}On.material=null,On.geometry.index=null,On.geometry.attributes={},On.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,s,a){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=s.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._instanceInfo,f=this._multiDrawStarts,d=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,M=n.isArrayCamera?hT:$v;g&&!n.isArrayCamera&&(ti.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),$v.setFromProjectionMatrix(ti,t.coordinateSystem));let S=0;if(this.sortObjects){ti.copy(this.matrixWorld).invert(),yl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ti),t_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ti);for(let A=0,T=u.length;A<T;A++)if(u[A].visible&&u[A].active){const U=u[A].geometryIndex;this.getMatrixAt(A,ti),this.getBoundingSphereAt(U,kr).applyMatrix4(ti);let R=!1;if(g&&(R=!M.intersectsSphere(kr,n)),!R){const P=m[U],I=fT.subVectors(kr.center,yl).dot(t_);pp.push(P.start,P.count,I,A)}}const _=pp.list,E=this.customSort;E===null?_.sort(a.transparent?lT:oT):E.call(this,_,n);for(let A=0,T=_.length;A<T;A++){const U=_[A];f[S]=U.start*c,d[S]=U.count,x[S]=U.index,S++}pp.reset()}else for(let _=0,E=u.length;_<E;_++)if(u[_].visible&&u[_].active){const A=u[_].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(_,ti),this.getBoundingSphereAt(A,kr).applyMatrix4(ti),T=!M.intersectsSphere(kr,n)),!T){const U=m[A];f[S]=U.start*c,d[S]=U.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,s,a,l){this.onBeforeRender(t,null,s,a,l)}}class jn extends Hn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ot(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Dh=new B,Uh=new B,e_=new re,xl=new Do,Su=new wn,mp=new B,n_=new B;class mr extends De{constructor(t=new ve,e=new jn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let s=1,a=e.count;s<a;s++)Dh.fromBufferAttribute(e,s-1),Uh.fromBufferAttribute(e,s),n[s]=n[s-1],n[s]+=Dh.distanceTo(Uh);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,a=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Su.copy(n.boundingSphere),Su.applyMatrix4(s),Su.radius+=a,t.ray.intersectsSphere(Su)===!1)return;e_.copy(s).invert(),xl.copy(t.ray).applyMatrix4(e_);const c=a/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=this.isLineSegments?2:1,d=n.index,g=n.attributes.position;if(d!==null){const v=Math.max(0,l.start),x=Math.min(d.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=d.getX(M),E=d.getX(M+1),A=Mu(this,t,xl,u,_,E,M);A&&e.push(A)}if(this.isLineLoop){const M=d.getX(x-1),S=d.getX(v),_=Mu(this,t,xl,u,M,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=Mu(this,t,xl,u,M,M+1,M);_&&e.push(_)}if(this.isLineLoop){const M=Mu(this,t,xl,u,x-1,v,x-1);M&&e.push(M)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=s.length;a<l;a++){const c=s[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}}function Mu(i,t,e,n,s,a,l){const c=i.geometry.attributes.position;if(Dh.fromBufferAttribute(c,s),Uh.fromBufferAttribute(c,a),e.distanceSqToSegment(Dh,Uh,mp,n_)>n)return;mp.applyMatrix4(i.matrixWorld);const f=t.ray.origin.distanceTo(mp);if(!(f<t.near||f>t.far))return{distance:f,point:n_.clone().applyMatrix4(i.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:i}}const i_=new B,s_=new B;class hs extends mr{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let s=0,a=e.count;s<a;s+=2)i_.fromBufferAttribute(e,s),s_.fromBufferAttribute(e,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+i_.distanceTo(s_);t.setAttribute("lineDistance",new qt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class qx extends mr{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class km extends Hn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ot(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const r_=new re,om=new Do,bu=new wn,Eu=new B;class Yx extends De{constructor(t=new ve,e=new km){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,a=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),bu.copy(n.boundingSphere),bu.applyMatrix4(s),bu.radius+=a,t.ray.intersectsSphere(bu)===!1)return;r_.copy(s).invert(),om.copy(t.ray).applyMatrix4(r_);const c=a/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,M=v;x<M;x++){const S=f.getX(x);Eu.fromBufferAttribute(m,S),a_(Eu,S,u,s,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,M=v;x<M;x++)Eu.fromBufferAttribute(m,x),a_(Eu,x,u,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=s.length;a<l;a++){const c=s[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}}function a_(i,t,e,n,s,a,l){const c=om.distanceSqToPoint(i);if(c<e){const u=new B;om.closestPointToPoint(i,u),u.applyMatrix4(n);const f=s.ray.origin.distanceTo(u);if(f<s.near||f>s.far)return;a.push({distance:f,distanceToRay:Math.sqrt(c),point:u,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class Zx extends rn{constructor(t,e,n,s,a=pn,l=pn,c,u,f){super(t,e,n,s,a,l,c,u,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const d=this;function m(){d.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class pT extends Zx{constructor(t,e,n,s,a,l,c,u){super({},t,e,n,s,a,l,c,u),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class mT extends rn{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=An,this.minFilter=An,this.generateMipmaps=!1,this.needsUpdate=!0}}class nf extends rn{constructor(t,e,n,s,a,l,c,u,f,d,m,g){super(null,l,c,u,f,d,s,a,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class gT extends nf{constructor(t,e,n,s,a,l){super(t,e,n,a,l),this.isCompressedArrayTexture=!0,this.image.depth=s,this.wrapR=Di,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class vT extends nf{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Is),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class _T extends rn{constructor(t,e,n,s,a,l,c,u,f){super(t,e,n,s,a,l,c,u,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Wm extends rn{constructor(t,e,n=Os,s,a,l,c=An,u=An,f,d=xo,m=1){if(d!==xo&&d!==So)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,s,a,l,c,u,d,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new hr(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class sf extends ve{constructor(t=1,e=1,n=4,s=8,a=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:s,heightSegments:a},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),s=Math.max(3,Math.floor(s)),a=Math.max(1,Math.floor(a));const l=[],c=[],u=[],f=[],d=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+a,M=s+1,S=new B,_=new B;for(let E=0;E<=x;E++){let A=0,T=0,U=0,R=0;if(E<=n){const C=E/n,w=C*Math.PI/2;T=-d-t*Math.cos(w),U=t*Math.sin(w),R=-t*Math.cos(w),A=C*m}else if(E<=n+a){const C=(E-n)/a;T=-d+C*e,U=t,R=0,A=m+C*g}else{const C=(E-n-a)/n,w=C*Math.PI/2;T=d+t*Math.sin(w),U=t*Math.cos(w),R=t*Math.sin(w),A=m+g+C*m}const P=Math.max(0,Math.min(1,A/v));let I=0;E===0?I=.5/s:E===x&&(I=-.5/s);for(let C=0;C<=s;C++){const w=C/s,z=w*Math.PI*2,Z=Math.sin(z),k=Math.cos(z);_.x=-U*k,_.y=T,_.z=U*Z,c.push(_.x,_.y,_.z),S.set(-U*k,R,U*Z),S.normalize(),u.push(S.x,S.y,S.z),f.push(w+I,P)}if(E>0){const C=(E-1)*M;for(let w=0;w<s;w++){const z=C+w,Z=C+w+1,k=E*M+w,W=E*M+w+1;l.push(z,Z,k),l.push(Z,W,k)}}}this.setIndex(l),this.setAttribute("position",new qt(c,3)),this.setAttribute("normal",new qt(u,3)),this.setAttribute("uv",new qt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new sf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class rf extends ve{constructor(t=1,e=32,n=0,s=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:s},e=Math.max(3,e);const a=[],l=[],c=[],u=[],f=new B,d=new pt;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*s;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),d.x=(l[g]/t+1)/2,d.y=(l[g+1]/t+1)/2,u.push(d.x,d.y)}for(let m=1;m<=e;m++)a.push(m,m+1,0);this.setIndex(a),this.setAttribute("position",new qt(l,3)),this.setAttribute("normal",new qt(c,3)),this.setAttribute("uv",new qt(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rf(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class rc extends ve{constructor(t=1,e=1,n=1,s=32,a=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:s,heightSegments:a,openEnded:l,thetaStart:c,thetaLength:u};const f=this;s=Math.floor(s),a=Math.floor(a);const d=[],m=[],g=[],v=[];let x=0;const M=[],S=n/2;let _=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(d),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function E(){const T=new B,U=new B;let R=0;const P=(e-t)/n;for(let I=0;I<=a;I++){const C=[],w=I/a,z=w*(e-t)+t;for(let Z=0;Z<=s;Z++){const k=Z/s,W=k*u+c,rt=Math.sin(W),H=Math.cos(W);U.x=z*rt,U.y=-w*n+S,U.z=z*H,m.push(U.x,U.y,U.z),T.set(rt,P,H).normalize(),g.push(T.x,T.y,T.z),v.push(k,1-w),C.push(x++)}M.push(C)}for(let I=0;I<s;I++)for(let C=0;C<a;C++){const w=M[C][I],z=M[C+1][I],Z=M[C+1][I+1],k=M[C][I+1];(t>0||C!==0)&&(d.push(w,z,k),R+=3),(e>0||C!==a-1)&&(d.push(z,Z,k),R+=3)}f.addGroup(_,R,0),_+=R}function A(T){const U=x,R=new pt,P=new B;let I=0;const C=T===!0?t:e,w=T===!0?1:-1;for(let Z=1;Z<=s;Z++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const z=x;for(let Z=0;Z<=s;Z++){const W=Z/s*u+c,rt=Math.cos(W),H=Math.sin(W);P.x=C*H,P.y=S*w,P.z=C*rt,m.push(P.x,P.y,P.z),g.push(0,w,0),R.x=rt*.5+.5,R.y=H*.5*w+.5,v.push(R.x,R.y),x++}for(let Z=0;Z<s;Z++){const k=U+Z,W=z+Z;T===!0?d.push(W,W+1,k):d.push(W+1,W,k),I+=3}f.addGroup(_,I,T===!0?1:2),_+=I}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ac extends rc{constructor(t=1,e=1,n=32,s=1,a=!1,l=0,c=Math.PI*2){super(0,t,e,n,s,a,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:s,openEnded:a,thetaStart:l,thetaLength:c}}static fromJSON(t){return new ac(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class _r extends ve{constructor(t=[],e=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:s};const a=[],l=[];c(s),f(n),d(),this.setAttribute("position",new qt(a,3)),this.setAttribute("normal",new qt(a.slice(),3)),this.setAttribute("uv",new qt(l,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new B,T=new B,U=new B;for(let R=0;R<e.length;R+=3)v(e[R+0],A),v(e[R+1],T),v(e[R+2],U),u(A,T,U,E)}function u(E,A,T,U){const R=U+1,P=[];for(let I=0;I<=R;I++){P[I]=[];const C=E.clone().lerp(T,I/R),w=A.clone().lerp(T,I/R),z=R-I;for(let Z=0;Z<=z;Z++)Z===0&&I===R?P[I][Z]=C:P[I][Z]=C.clone().lerp(w,Z/z)}for(let I=0;I<R;I++)for(let C=0;C<2*(R-I)-1;C++){const w=Math.floor(C/2);C%2===0?(g(P[I][w+1]),g(P[I+1][w]),g(P[I][w])):(g(P[I][w+1]),g(P[I+1][w+1]),g(P[I+1][w]))}}function f(E){const A=new B;for(let T=0;T<a.length;T+=3)A.x=a[T+0],A.y=a[T+1],A.z=a[T+2],A.normalize().multiplyScalar(E),a[T+0]=A.x,a[T+1]=A.y,a[T+2]=A.z}function d(){const E=new B;for(let A=0;A<a.length;A+=3){E.x=a[A+0],E.y=a[A+1],E.z=a[A+2];const T=S(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;l.push(T,1-U)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],U=l[E+4],R=Math.max(A,T,U),P=Math.min(A,T,U);R>.9&&P<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function g(E){a.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new B,A=new B,T=new B,U=new B,R=new pt,P=new pt,I=new pt;for(let C=0,w=0;C<a.length;C+=9,w+=6){E.set(a[C+0],a[C+1],a[C+2]),A.set(a[C+3],a[C+4],a[C+5]),T.set(a[C+6],a[C+7],a[C+8]),R.set(l[w+0],l[w+1]),P.set(l[w+2],l[w+3]),I.set(l[w+4],l[w+5]),U.copy(E).add(A).add(T).divideScalar(3);const z=S(U);M(R,w+0,E,z),M(P,w+2,A,z),M(I,w+4,T,z)}}function M(E,A,T,U){U<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=U/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new _r(t.vertices,t.indices,t.radius,t.details)}}class af extends _r{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=1/n,a=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-s,-n,0,-s,n,0,s,-n,0,s,n,-s,-n,0,-s,n,0,s,-n,0,s,n,0,-n,0,-s,n,0,-s,-n,0,s,n,0,s],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(a,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new af(t.radius,t.detail)}}const Tu=new B,Au=new B,gp=new B,wu=new cr;class jx extends ve{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const s=Math.pow(10,4),a=Math.cos(aa*e),l=t.getIndex(),c=t.getAttribute("position"),u=l?l.count:c.count,f=[0,0,0],d=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<u;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:M,b:S,c:_}=wu;if(M.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),wu.getNormal(gp),m[0]=`${Math.round(M.x*s)},${Math.round(M.y*s)},${Math.round(M.z*s)}`,m[1]=`${Math.round(S.x*s)},${Math.round(S.y*s)},${Math.round(S.z*s)}`,m[2]=`${Math.round(_.x*s)},${Math.round(_.y*s)},${Math.round(_.z*s)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],U=m[A],R=wu[d[E]],P=wu[d[A]],I=`${T}_${U}`,C=`${U}_${T}`;C in g&&g[C]?(gp.dot(g[C].normal)<=a&&(v.push(R.x,R.y,R.z),v.push(P.x,P.y,P.z)),g[C]=null):I in g||(g[I]={index0:f[E],index1:f[A],normal:gp.clone()})}}for(const x in g)if(g[x]){const{index0:M,index1:S}=g[x];Tu.fromBufferAttribute(c,M),Au.fromBufferAttribute(c,S),v.push(Tu.x,Tu.y,Tu.z),v.push(Au.x,Au.y,Au.z)}this.setAttribute("position",new qt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Zi{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,s=this.getPoint(0),a=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),a+=n.distanceTo(s),e.push(a),s=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let s=0;const a=n.length;let l;e?l=e:l=t*n[a-1];let c=0,u=a-1,f;for(;c<=u;)if(s=Math.floor(c+(u-c)/2),f=n[s]-l,f<0)c=s+1;else if(f>0)u=s-1;else{u=s;break}if(s=u,n[s]===l)return s/(a-1);const d=n[s],g=n[s+1]-d,v=(l-d)/g;return(s+v)/(a-1)}getTangent(t,e){let s=t-1e-4,a=t+1e-4;s<0&&(s=0),a>1&&(a=1);const l=this.getPoint(s),c=this.getPoint(a),u=e||(l.isVector2?new pt:new B);return u.copy(c).sub(l).normalize(),u}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new B,s=[],a=[],l=[],c=new B,u=new re;for(let v=0;v<=t;v++){const x=v/t;s[v]=this.getTangentAt(x,new B)}a[0]=new B,l[0]=new B;let f=Number.MAX_VALUE;const d=Math.abs(s[0].x),m=Math.abs(s[0].y),g=Math.abs(s[0].z);d<=f&&(f=d,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(s[0],n).normalize(),a[0].crossVectors(s[0],c),l[0].crossVectors(s[0],a[0]);for(let v=1;v<=t;v++){if(a[v]=a[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(s[v-1],s[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(de(s[v-1].dot(s[v]),-1,1));a[v].applyMatrix4(u.makeRotationAxis(c,x))}l[v].crossVectors(s[v],a[v])}if(e===!0){let v=Math.acos(de(a[0].dot(a[t]),-1,1));v/=t,s[0].dot(c.crossVectors(a[0],a[t]))>0&&(v=-v);for(let x=1;x<=t;x++)a[x].applyMatrix4(u.makeRotationAxis(s[x],v*x)),l[x].crossVectors(s[x],a[x])}return{tangents:s,normals:a,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class of extends Zi{constructor(t=0,e=0,n=1,s=1,a=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=s,this.aStartAngle=a,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(t,e=new pt){const n=e,s=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const l=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=s;for(;a>s;)a-=s;a<Number.EPSILON&&(l?a=0:a=s),this.aClockwise===!0&&!l&&(a===s?a=-s:a=a-s);const c=this.aStartAngle+t*a;let u=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=u-this.aX,v=f-this.aY;u=g*d-v*m+this.aX,f=g*m+v*d+this.aY}return n.set(u,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Kx extends of{constructor(t,e,n,s,a,l){super(t,e,n,n,s,a,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Xm(){let i=0,t=0,e=0,n=0;function s(a,l,c,u){i=a,t=c,e=-3*a+3*l-2*c-u,n=2*a-2*l+c+u}return{initCatmullRom:function(a,l,c,u,f){s(l,c,f*(c-a),f*(u-l))},initNonuniformCatmullRom:function(a,l,c,u,f,d,m){let g=(l-a)/f-(c-a)/(f+d)+(c-l)/d,v=(c-l)/d-(u-l)/(d+m)+(u-c)/m;g*=d,v*=d,s(l,c,g,v)},calc:function(a){const l=a*a,c=l*a;return i+t*a+e*l+n*c}}}const Cu=new B,vp=new Xm,_p=new Xm,yp=new Xm;class Jx extends Zi{constructor(t=[],e=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=s}getPoint(t,e=new B){const n=e,s=this.points,a=s.length,l=(a-(this.closed?0:1))*t;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/a)+1)*a:u===0&&c===a-1&&(c=a-2,u=1);let f,d;this.closed||c>0?f=s[(c-1)%a]:(Cu.subVectors(s[0],s[1]).add(s[0]),f=Cu);const m=s[c%a],g=s[(c+1)%a];if(this.closed||c+2<a?d=s[(c+2)%a]:(Cu.subVectors(s[a-1],s[a-2]).add(s[a-1]),d=Cu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),M=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(d),v);M<1e-4&&(M=1),x<1e-4&&(x=M),S<1e-4&&(S=M),vp.initNonuniformCatmullRom(f.x,m.x,g.x,d.x,x,M,S),_p.initNonuniformCatmullRom(f.y,m.y,g.y,d.y,x,M,S),yp.initNonuniformCatmullRom(f.z,m.z,g.z,d.z,x,M,S)}else this.curveType==="catmullrom"&&(vp.initCatmullRom(f.x,m.x,g.x,d.x,this.tension),_p.initCatmullRom(f.y,m.y,g.y,d.y,this.tension),yp.initCatmullRom(f.z,m.z,g.z,d.z,this.tension));return n.set(vp.calc(u),_p.calc(u),yp.calc(u)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new B().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function o_(i,t,e,n,s){const a=(n-t)*.5,l=(s-e)*.5,c=i*i,u=i*c;return(2*e-2*n+a+l)*u+(-3*e+3*n-2*a-l)*c+a*i+e}function yT(i,t){const e=1-i;return e*e*t}function xT(i,t){return 2*(1-i)*i*t}function ST(i,t){return i*i*t}function Ll(i,t,e,n){return yT(i,t)+xT(i,e)+ST(i,n)}function MT(i,t){const e=1-i;return e*e*e*t}function bT(i,t){const e=1-i;return 3*e*e*i*t}function ET(i,t){return 3*(1-i)*i*i*t}function TT(i,t){return i*i*i*t}function Pl(i,t,e,n,s){return MT(i,t)+bT(i,e)+ET(i,n)+TT(i,s)}class qm extends Zi{constructor(t=new pt,e=new pt,n=new pt,s=new pt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new pt){const n=e,s=this.v0,a=this.v1,l=this.v2,c=this.v3;return n.set(Pl(t,s.x,a.x,l.x,c.x),Pl(t,s.y,a.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Qx extends Zi{constructor(t=new B,e=new B,n=new B,s=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new B){const n=e,s=this.v0,a=this.v1,l=this.v2,c=this.v3;return n.set(Pl(t,s.x,a.x,l.x,c.x),Pl(t,s.y,a.y,l.y,c.y),Pl(t,s.z,a.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Ym extends Zi{constructor(t=new pt,e=new pt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new pt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new pt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class $x extends Zi{constructor(t=new B,e=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new B){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new B){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Zm extends Zi{constructor(t=new pt,e=new pt,n=new pt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new pt){const n=e,s=this.v0,a=this.v1,l=this.v2;return n.set(Ll(t,s.x,a.x,l.x),Ll(t,s.y,a.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class jm extends Zi{constructor(t=new B,e=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new B){const n=e,s=this.v0,a=this.v1,l=this.v2;return n.set(Ll(t,s.x,a.x,l.x),Ll(t,s.y,a.y,l.y),Ll(t,s.z,a.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Km extends Zi{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new pt){const n=e,s=this.points,a=(s.length-1)*t,l=Math.floor(a),c=a-l,u=s[l===0?l:l-1],f=s[l],d=s[l>s.length-2?s.length-1:l+1],m=s[l>s.length-3?s.length-1:l+2];return n.set(o_(c,u.x,f.x,d.x,m.x),o_(c,u.y,f.y,d.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new pt().fromArray(s))}return this}}var Nh=Object.freeze({__proto__:null,ArcCurve:Kx,CatmullRomCurve3:Jx,CubicBezierCurve:qm,CubicBezierCurve3:Qx,EllipseCurve:of,LineCurve:Ym,LineCurve3:$x,QuadraticBezierCurve:Zm,QuadraticBezierCurve3:jm,SplineCurve:Km});class tS extends Zi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Nh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),s=this.getCurveLengths();let a=0;for(;a<s.length;){if(s[a]>=n){const l=s[a]-n,c=this.curves[a],u=c.getLength(),f=u===0?0:1-l/u;return c.getPointAt(f,e)}a++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,s=this.curves.length;n<s;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let s=0,a=this.curves;s<a.length;s++){const l=a[s],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,u=l.getPoints(c);for(let f=0;f<u.length;f++){const d=u[f];n&&n.equals(d)||(e.push(d),n=d)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(s.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const s=this.curves[e];t.curves.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(new Nh[s.type]().fromJSON(s))}return this}}class Lh extends tS{constructor(t){super(),this.type="Path",this.currentPoint=new pt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Ym(this.currentPoint.clone(),new pt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,s){const a=new Zm(this.currentPoint.clone(),new pt(t,e),new pt(n,s));return this.curves.push(a),this.currentPoint.set(n,s),this}bezierCurveTo(t,e,n,s,a,l){const c=new qm(this.currentPoint.clone(),new pt(t,e),new pt(n,s),new pt(a,l));return this.curves.push(c),this.currentPoint.set(a,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Km(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,s,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(t+c,e+u,n,s,a,l),this}absarc(t,e,n,s,a,l){return this.absellipse(t,e,n,n,s,a,l),this}ellipse(t,e,n,s,a,l,c,u){const f=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(t+f,e+d,n,s,a,l,c,u),this}absellipse(t,e,n,s,a,l,c,u){const f=new of(t,e,n,s,a,l,c,u);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const d=f.getPoint(1);return this.currentPoint.copy(d),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class oa extends Lh{constructor(t){super(t),this.uuid=_i(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,s=this.holes.length;n<s;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const s=this.holes[e];t.holes.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(new Lh().fromJSON(s))}return this}}function AT(i,t,e=2){const n=t&&t.length,s=n?t[0]*e:i.length;let a=eS(i,0,s,e,!0);const l=[];if(!a||a.next===a.prev)return l;let c,u,f;if(n&&(a=UT(i,t,a,e)),i.length>80*e){c=1/0,u=1/0;let d=-1/0,m=-1/0;for(let g=e;g<s;g+=e){const v=i[g],x=i[g+1];v<c&&(c=v),x<u&&(u=x),v>d&&(d=v),x>m&&(m=x)}f=Math.max(d-c,m-u),f=f!==0?32767/f:0}return Zl(a,l,e,c,u,f,0),l}function eS(i,t,e,n,s){let a;if(s===GT(i,t,e,n)>0)for(let l=t;l<e;l+=n)a=l_(l/n|0,i[l],i[l+1],a);else for(let l=e-n;l>=t;l-=n)a=l_(l/n|0,i[l],i[l+1],a);return a&&Ao(a,a.next)&&(Kl(a),a=a.next),a}function ua(i,t){if(!i)return i;t||(t=i);let e=i,n;do if(n=!1,!e.steiner&&(Ao(e,e.next)||$e(e.prev,e,e.next)===0)){if(Kl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Zl(i,t,e,n,s,a,l){if(!i)return;!l&&a&&OT(i,n,s,a);let c=i;for(;i.prev!==i.next;){const u=i.prev,f=i.next;if(a?CT(i,n,s,a):wT(i)){t.push(u.i,i.i,f.i),Kl(i),i=f.next,c=f.next;continue}if(i=f,i===c){l?l===1?(i=RT(ua(i),t),Zl(i,t,e,n,s,a,2)):l===2&&DT(i,t,e,n,s,a):Zl(ua(i),t,e,n,s,a,1);break}}}function wT(i){const t=i.prev,e=i,n=i.next;if($e(t,e,n)>=0)return!1;const s=t.x,a=e.x,l=n.x,c=t.y,u=e.y,f=n.y,d=Math.min(s,a,l),m=Math.min(c,u,f),g=Math.max(s,a,l),v=Math.max(c,u,f);let x=n.next;for(;x!==t;){if(x.x>=d&&x.x<=g&&x.y>=m&&x.y<=v&&bl(s,c,a,u,l,f,x.x,x.y)&&$e(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function CT(i,t,e,n){const s=i.prev,a=i,l=i.next;if($e(s,a,l)>=0)return!1;const c=s.x,u=a.x,f=l.x,d=s.y,m=a.y,g=l.y,v=Math.min(c,u,f),x=Math.min(d,m,g),M=Math.max(c,u,f),S=Math.max(d,m,g),_=lm(v,x,t,e,n),E=lm(M,S,t,e,n);let A=i.prevZ,T=i.nextZ;for(;A&&A.z>=_&&T&&T.z<=E;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==s&&A!==l&&bl(c,d,u,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==s&&T!==l&&bl(c,d,u,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==s&&A!==l&&bl(c,d,u,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==s&&T!==l&&bl(c,d,u,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function RT(i,t){let e=i;do{const n=e.prev,s=e.next.next;!Ao(n,s)&&iS(n,e,e.next,s)&&jl(n,s)&&jl(s,n)&&(t.push(n.i,e.i,s.i),Kl(e),Kl(e.next),e=i=s),e=e.next}while(e!==i);return ua(e)}function DT(i,t,e,n,s,a){let l=i;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&FT(l,c)){let u=sS(l,c);l=ua(l,l.next),u=ua(u,u.next),Zl(l,t,e,n,s,a,0),Zl(u,t,e,n,s,a,0);return}c=c.next}l=l.next}while(l!==i)}function UT(i,t,e,n){const s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a]*n,u=a<l-1?t[a+1]*n:i.length,f=eS(i,c,u,n,!1);f===f.next&&(f.steiner=!0),s.push(BT(f))}s.sort(NT);for(let a=0;a<s.length;a++)e=LT(s[a],e);return e}function NT(i,t){let e=i.x-t.x;if(e===0&&(e=i.y-t.y,e===0)){const n=(i.next.y-i.y)/(i.next.x-i.x),s=(t.next.y-t.y)/(t.next.x-t.x);e=n-s}return e}function LT(i,t){const e=PT(i,t);if(!e)return t;const n=sS(e,i);return ua(n,n.next),ua(e,e.next)}function PT(i,t){let e=t;const n=i.x,s=i.y;let a=-1/0,l;if(Ao(i,e))return e;do{if(Ao(i,e.next))return e.next;if(s<=e.y&&s>=e.next.y&&e.next.y!==e.y){const m=e.x+(s-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>a&&(a=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,u=l.x,f=l.y;let d=1/0;e=l;do{if(n>=e.x&&e.x>=u&&n!==e.x&&nS(s<f?n:a,s,u,f,s<f?a:n,s,e.x,e.y)){const m=Math.abs(s-e.y)/(n-e.x);jl(e,i)&&(m<d||m===d&&(e.x>l.x||e.x===l.x&&IT(l,e)))&&(l=e,d=m)}e=e.next}while(e!==c);return l}function IT(i,t){return $e(i.prev,i,t.prev)<0&&$e(t.next,i,i.next)<0}function OT(i,t,e,n){let s=i;do s.z===0&&(s.z=lm(s.x,s.y,t,e,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==i);s.prevZ.nextZ=null,s.prevZ=null,zT(s)}function zT(i){let t,e=1;do{let n=i,s;i=null;let a=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let u=e;for(;c>0||u>0&&l;)c!==0&&(u===0||!l||n.z<=l.z)?(s=n,n=n.nextZ,c--):(s=l,l=l.nextZ,u--),a?a.nextZ=s:i=s,s.prevZ=a,a=s;n=l}a.nextZ=null,e*=2}while(t>1);return i}function lm(i,t,e,n,s){return i=(i-e)*s|0,t=(t-n)*s|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,i|t<<1}function BT(i){let t=i,e=i;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==i);return e}function nS(i,t,e,n,s,a,l,c){return(s-l)*(t-c)>=(i-l)*(a-c)&&(i-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(a-c)>=(s-l)*(n-c)}function bl(i,t,e,n,s,a,l,c){return!(i===l&&t===c)&&nS(i,t,e,n,s,a,l,c)}function FT(i,t){return i.next.i!==t.i&&i.prev.i!==t.i&&!HT(i,t)&&(jl(i,t)&&jl(t,i)&&VT(i,t)&&($e(i.prev,i,t.prev)||$e(i,t.prev,t))||Ao(i,t)&&$e(i.prev,i,i.next)>0&&$e(t.prev,t,t.next)>0)}function $e(i,t,e){return(t.y-i.y)*(e.x-t.x)-(t.x-i.x)*(e.y-t.y)}function Ao(i,t){return i.x===t.x&&i.y===t.y}function iS(i,t,e,n){const s=Du($e(i,t,e)),a=Du($e(i,t,n)),l=Du($e(e,n,i)),c=Du($e(e,n,t));return!!(s!==a&&l!==c||s===0&&Ru(i,e,t)||a===0&&Ru(i,n,t)||l===0&&Ru(e,i,n)||c===0&&Ru(e,t,n))}function Ru(i,t,e){return t.x<=Math.max(i.x,e.x)&&t.x>=Math.min(i.x,e.x)&&t.y<=Math.max(i.y,e.y)&&t.y>=Math.min(i.y,e.y)}function Du(i){return i>0?1:i<0?-1:0}function HT(i,t){let e=i;do{if(e.i!==i.i&&e.next.i!==i.i&&e.i!==t.i&&e.next.i!==t.i&&iS(e,e.next,i,t))return!0;e=e.next}while(e!==i);return!1}function jl(i,t){return $e(i.prev,i,i.next)<0?$e(i,t,i.next)>=0&&$e(i,i.prev,t)>=0:$e(i,t,i.prev)<0||$e(i,i.next,t)<0}function VT(i,t){let e=i,n=!1;const s=(i.x+t.x)/2,a=(i.y+t.y)/2;do e.y>a!=e.next.y>a&&e.next.y!==e.y&&s<(e.next.x-e.x)*(a-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==i);return n}function sS(i,t){const e=cm(i.i,i.x,i.y),n=cm(t.i,t.x,t.y),s=i.next,a=t.prev;return i.next=t,t.prev=i,e.next=s,s.prev=e,n.next=e,e.prev=n,a.next=n,n.prev=a,n}function l_(i,t,e,n){const s=cm(i,t,e);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function Kl(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function cm(i,t,e){return{i,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function GT(i,t,e,n){let s=0;for(let a=t,l=e-n;a<e;a+=n)s+=(i[l]-i[a])*(i[a+1]+i[l+1]),l=a;return s}class kT{static triangulate(t,e,n=2){return AT(t,e,n)}}class Xi{static area(t){const e=t.length;let n=0;for(let s=e-1,a=0;a<e;s=a++)n+=t[s].x*t[a].y-t[a].x*t[s].y;return n*.5}static isClockWise(t){return Xi.area(t)<0}static triangulateShape(t,e){const n=[],s=[],a=[];c_(t),u_(n,t);let l=t.length;e.forEach(c_);for(let u=0;u<e.length;u++)s.push(l),l+=e[u].length,u_(n,e[u]);const c=kT.triangulate(n,s);for(let u=0;u<c.length;u+=3)a.push(c.slice(u,u+3));return a}}function c_(i){const t=i.length;t>2&&i[t-1].equals(i[0])&&i.pop()}function u_(i,t){for(let e=0;e<t.length;e++)i.push(t[e].x),i.push(t[e].y)}class lf extends ve{constructor(t=new oa([new pt(.5,.5),new pt(-.5,.5),new pt(-.5,-.5),new pt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,s=[],a=[];for(let c=0,u=t.length;c<u;c++){const f=t[c];l(f)}this.setAttribute("position",new qt(s,3)),this.setAttribute("uv",new qt(a,2)),this.computeVertexNormals();function l(c){const u=[],f=e.curveSegments!==void 0?e.curveSegments:12,d=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,M=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:WT;let A,T=!1,U,R,P,I;_&&(A=_.getSpacedPoints(d),T=!0,g=!1,U=_.computeFrenetFrames(d,!1),R=new B,P=new B,I=new B),g||(S=0,v=0,x=0,M=0);const C=c.extractPoints(f);let w=C.shape;const z=C.holes;if(!Xi.isClockWise(w)){w=w.reverse();for(let O=0,Tt=z.length;O<Tt;O++){const _t=z[O];Xi.isClockWise(_t)&&(z[O]=_t.reverse())}}function k(O){const _t=10000000000000001e-36;let bt=O[0];for(let ut=1;ut<=O.length;ut++){const zt=ut%O.length,vt=O[zt],It=vt.x-bt.x,ue=vt.y-bt.y,F=It*It+ue*ue,D=Math.max(Math.abs(vt.x),Math.abs(vt.y),Math.abs(bt.x),Math.abs(bt.y)),Q=_t*D*D;if(F<=Q){O.splice(zt,1),ut--;continue}bt=vt}}k(w),z.forEach(k);const W=z.length,rt=w;for(let O=0;O<W;O++){const Tt=z[O];w=w.concat(Tt)}function H(O,Tt,_t){return Tt||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().addScaledVector(Tt,_t)}const Y=w.length;function G(O,Tt,_t){let bt,ut,zt;const vt=O.x-Tt.x,It=O.y-Tt.y,ue=_t.x-O.x,F=_t.y-O.y,D=vt*vt+It*It,Q=vt*F-It*ue;if(Math.abs(Q)>Number.EPSILON){const at=Math.sqrt(D),dt=Math.sqrt(ue*ue+F*F),ot=Tt.x-It/at,Zt=Tt.y+vt/at,Ct=_t.x-F/dt,Gt=_t.y+ue/dt,Yt=((Ct-ot)*F-(Gt-Zt)*ue)/(vt*F-It*ue);bt=ot+vt*Yt-O.x,ut=Zt+It*Yt-O.y;const ft=bt*bt+ut*ut;if(ft<=2)return new pt(bt,ut);zt=Math.sqrt(ft/2)}else{let at=!1;vt>Number.EPSILON?ue>Number.EPSILON&&(at=!0):vt<-Number.EPSILON?ue<-Number.EPSILON&&(at=!0):Math.sign(It)===Math.sign(F)&&(at=!0),at?(bt=-It,ut=vt,zt=Math.sqrt(D)):(bt=vt,ut=It,zt=Math.sqrt(D/2))}return new pt(bt/zt,ut/zt)}const st=[];for(let O=0,Tt=rt.length,_t=Tt-1,bt=O+1;O<Tt;O++,_t++,bt++)_t===Tt&&(_t=0),bt===Tt&&(bt=0),st[O]=G(rt[O],rt[_t],rt[bt]);const lt=[];let mt,wt=st.concat();for(let O=0,Tt=W;O<Tt;O++){const _t=z[O];mt=[];for(let bt=0,ut=_t.length,zt=ut-1,vt=bt+1;bt<ut;bt++,zt++,vt++)zt===ut&&(zt=0),vt===ut&&(vt=0),mt[bt]=G(_t[bt],_t[zt],_t[vt]);lt.push(mt),wt=wt.concat(mt)}let jt;if(S===0)jt=Xi.triangulateShape(rt,z);else{const O=[],Tt=[];for(let _t=0;_t<S;_t++){const bt=_t/S,ut=v*Math.cos(bt*Math.PI/2),zt=x*Math.sin(bt*Math.PI/2)+M;for(let vt=0,It=rt.length;vt<It;vt++){const ue=H(rt[vt],st[vt],zt);fe(ue.x,ue.y,-ut),bt===0&&O.push(ue)}for(let vt=0,It=W;vt<It;vt++){const ue=z[vt];mt=lt[vt];const F=[];for(let D=0,Q=ue.length;D<Q;D++){const at=H(ue[D],mt[D],zt);fe(at.x,at.y,-ut),bt===0&&F.push(at)}bt===0&&Tt.push(F)}}jt=Xi.triangulateShape(O,Tt)}const $=jt.length,gt=x+M;for(let O=0;O<Y;O++){const Tt=g?H(w[O],wt[O],gt):w[O];T?(P.copy(U.normals[0]).multiplyScalar(Tt.x),R.copy(U.binormals[0]).multiplyScalar(Tt.y),I.copy(A[0]).add(P).add(R),fe(I.x,I.y,I.z)):fe(Tt.x,Tt.y,0)}for(let O=1;O<=d;O++)for(let Tt=0;Tt<Y;Tt++){const _t=g?H(w[Tt],wt[Tt],gt):w[Tt];T?(P.copy(U.normals[O]).multiplyScalar(_t.x),R.copy(U.binormals[O]).multiplyScalar(_t.y),I.copy(A[O]).add(P).add(R),fe(I.x,I.y,I.z)):fe(_t.x,_t.y,m/d*O)}for(let O=S-1;O>=0;O--){const Tt=O/S,_t=v*Math.cos(Tt*Math.PI/2),bt=x*Math.sin(Tt*Math.PI/2)+M;for(let ut=0,zt=rt.length;ut<zt;ut++){const vt=H(rt[ut],st[ut],bt);fe(vt.x,vt.y,m+_t)}for(let ut=0,zt=z.length;ut<zt;ut++){const vt=z[ut];mt=lt[ut];for(let It=0,ue=vt.length;It<ue;It++){const F=H(vt[It],mt[It],bt);T?fe(F.x,F.y+A[d-1].y,A[d-1].x+_t):fe(F.x,F.y,m+_t)}}}Wt(),Dt();function Wt(){const O=s.length/3;if(g){let Tt=0,_t=Y*Tt;for(let bt=0;bt<$;bt++){const ut=jt[bt];Jt(ut[2]+_t,ut[1]+_t,ut[0]+_t)}Tt=d+S*2,_t=Y*Tt;for(let bt=0;bt<$;bt++){const ut=jt[bt];Jt(ut[0]+_t,ut[1]+_t,ut[2]+_t)}}else{for(let Tt=0;Tt<$;Tt++){const _t=jt[Tt];Jt(_t[2],_t[1],_t[0])}for(let Tt=0;Tt<$;Tt++){const _t=jt[Tt];Jt(_t[0]+Y*d,_t[1]+Y*d,_t[2]+Y*d)}}n.addGroup(O,s.length/3-O,0)}function Dt(){const O=s.length/3;let Tt=0;Vt(rt,Tt),Tt+=rt.length;for(let _t=0,bt=z.length;_t<bt;_t++){const ut=z[_t];Vt(ut,Tt),Tt+=ut.length}n.addGroup(O,s.length/3-O,1)}function Vt(O,Tt){let _t=O.length;for(;--_t>=0;){const bt=_t;let ut=_t-1;ut<0&&(ut=O.length-1);for(let zt=0,vt=d+S*2;zt<vt;zt++){const It=Y*zt,ue=Y*(zt+1),F=Tt+bt+It,D=Tt+ut+It,Q=Tt+ut+ue,at=Tt+bt+ue;Pe(F,D,Q,at)}}}function fe(O,Tt,_t){u.push(O),u.push(Tt),u.push(_t)}function Jt(O,Tt,_t){ye(O),ye(Tt),ye(_t);const bt=s.length/3,ut=E.generateTopUV(n,s,bt-3,bt-2,bt-1);le(ut[0]),le(ut[1]),le(ut[2])}function Pe(O,Tt,_t,bt){ye(O),ye(Tt),ye(bt),ye(Tt),ye(_t),ye(bt);const ut=s.length/3,zt=E.generateSideWallUV(n,s,ut-6,ut-3,ut-2,ut-1);le(zt[0]),le(zt[1]),le(zt[3]),le(zt[1]),le(zt[2]),le(zt[3])}function ye(O){s.push(u[O*3+0]),s.push(u[O*3+1]),s.push(u[O*3+2])}function le(O){a.push(O.x),a.push(O.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return XT(e,n,t)}static fromJSON(t,e){const n=[];for(let a=0,l=t.shapes.length;a<l;a++){const c=e[t.shapes[a]];n.push(c)}const s=t.options.extrudePath;return s!==void 0&&(t.options.extrudePath=new Nh[s.type]().fromJSON(s)),new lf(n,t.options)}}const WT={generateTopUV:function(i,t,e,n,s){const a=t[e*3],l=t[e*3+1],c=t[n*3],u=t[n*3+1],f=t[s*3],d=t[s*3+1];return[new pt(a,l),new pt(c,u),new pt(f,d)]},generateSideWallUV:function(i,t,e,n,s,a){const l=t[e*3],c=t[e*3+1],u=t[e*3+2],f=t[n*3],d=t[n*3+1],m=t[n*3+2],g=t[s*3],v=t[s*3+1],x=t[s*3+2],M=t[a*3],S=t[a*3+1],_=t[a*3+2];return Math.abs(c-d)<Math.abs(l-f)?[new pt(l,1-u),new pt(f,1-m),new pt(g,1-x),new pt(M,1-_)]:[new pt(c,1-u),new pt(d,1-m),new pt(v,1-x),new pt(S,1-_)]}};function XT(i,t,e){if(e.shapes=[],Array.isArray(i))for(let n=0,s=i.length;n<s;n++){const a=i[n];e.shapes.push(a.uuid)}else e.shapes.push(i.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class cf extends _r{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],a=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(s,a,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new cf(t.radius,t.detail)}}class uf extends ve{constructor(t=[new pt(0,-.5),new pt(.5,0),new pt(0,.5)],e=12,n=0,s=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:s},e=Math.floor(e),s=de(s,0,Math.PI*2);const a=[],l=[],c=[],u=[],f=[],d=1/e,m=new B,g=new pt,v=new B,x=new B,M=new B;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,M.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case t.length-1:u.push(M.x,M.y,M.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=M.x,v.y+=M.y,v.z+=M.z,v.normalize(),u.push(v.x,v.y,v.z),M.copy(x)}for(let E=0;E<=e;E++){const A=n+E*d*s,T=Math.sin(A),U=Math.cos(A);for(let R=0;R<=t.length-1;R++){m.x=t[R].x*T,m.y=t[R].y,m.z=t[R].x*U,l.push(m.x,m.y,m.z),g.x=E/e,g.y=R/(t.length-1),c.push(g.x,g.y);const P=u[3*R+0]*T,I=u[3*R+1],C=u[3*R+0]*U;f.push(P,I,C)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,U=T,R=T+t.length,P=T+t.length+1,I=T+1;a.push(U,R,I),a.push(P,I,R)}this.setIndex(a),this.setAttribute("position",new qt(l,3)),this.setAttribute("uv",new qt(c,2)),this.setAttribute("normal",new qt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new uf(t.points,t.segments,t.phiStart,t.phiLength)}}class oc extends _r{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,s,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new oc(t.radius,t.detail)}}class No extends ve{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const a=t/2,l=e/2,c=Math.floor(n),u=Math.floor(s),f=c+1,d=u+1,m=t/c,g=e/u,v=[],x=[],M=[],S=[];for(let _=0;_<d;_++){const E=_*g-l;for(let A=0;A<f;A++){const T=A*m-a;x.push(T,-E,0),M.push(0,0,1),S.push(A/c),S.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const A=E+f*_,T=E+f*(_+1),U=E+1+f*(_+1),R=E+1+f*_;v.push(A,T,R),v.push(T,U,R)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(M,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new No(t.width,t.height,t.widthSegments,t.heightSegments)}}class hf extends ve{constructor(t=.5,e=1,n=32,s=1,a=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:s,thetaStart:a,thetaLength:l},n=Math.max(3,n),s=Math.max(1,s);const c=[],u=[],f=[],d=[];let m=t;const g=(e-t)/s,v=new B,x=new pt;for(let M=0;M<=s;M++){for(let S=0;S<=n;S++){const _=a+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),u.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,d.push(x.x,x.y)}m+=g}for(let M=0;M<s;M++){const S=M*(n+1);for(let _=0;_<n;_++){const E=_+S,A=E,T=E+n+1,U=E+n+2,R=E+1;c.push(A,T,R),c.push(T,U,R)}}this.setIndex(c),this.setAttribute("position",new qt(u,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class ff extends ve{constructor(t=new oa([new pt(0,.5),new pt(-.5,-.5),new pt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],s=[],a=[],l=[];let c=0,u=0;if(Array.isArray(t)===!1)f(t);else for(let d=0;d<t.length;d++)f(t[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new qt(s,3)),this.setAttribute("normal",new qt(a,3)),this.setAttribute("uv",new qt(l,2));function f(d){const m=s.length/3,g=d.extractPoints(e);let v=g.shape;const x=g.holes;Xi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];Xi.isClockWise(E)===!0&&(x[S]=E.reverse())}const M=Xi.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];s.push(E.x,E.y,0),a.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=M.length;S<_;S++){const E=M[S],A=E[0]+m,T=E[1]+m,U=E[2]+m;n.push(A,T,U),u+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return qT(e,t)}static fromJSON(t,e){const n=[];for(let s=0,a=t.shapes.length;s<a;s++){const l=e[t.shapes[s]];n.push(l)}return new ff(n,t.curveSegments)}}function qT(i,t){if(t.shapes=[],Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const s=i[e];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t}class lc extends ve{constructor(t=1,e=32,n=16,s=0,a=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:a,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let f=0;const d=[],m=new B,g=new B,v=[],x=[],M=[],S=[];for(let _=0;_<=n;_++){const E=[],A=_/n;let T=0;_===0&&l===0?T=.5/e:_===n&&u===Math.PI&&(T=-.5/e);for(let U=0;U<=e;U++){const R=U/e;m.x=-t*Math.cos(s+R*a)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(s+R*a)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),M.push(g.x,g.y,g.z),S.push(R+T,1-A),E.push(f++)}d.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const A=d[_][E+1],T=d[_][E],U=d[_+1][E],R=d[_+1][E+1];(_!==0||l>0)&&v.push(A,T,R),(_!==n-1||u<Math.PI)&&v.push(T,U,R)}this.setIndex(v),this.setAttribute("position",new qt(x,3)),this.setAttribute("normal",new qt(M,3)),this.setAttribute("uv",new qt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class df extends _r{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],s=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,s,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new df(t.radius,t.detail)}}class pf extends ve{constructor(t=1,e=.4,n=12,s=48,a=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:s,arc:a},n=Math.floor(n),s=Math.floor(s);const l=[],c=[],u=[],f=[],d=new B,m=new B,g=new B;for(let v=0;v<=n;v++)for(let x=0;x<=s;x++){const M=x/s*a,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(M),m.y=(t+e*Math.cos(S))*Math.sin(M),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),d.x=t*Math.cos(M),d.y=t*Math.sin(M),g.subVectors(m,d).normalize(),u.push(g.x,g.y,g.z),f.push(x/s),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=s;x++){const M=(s+1)*v+x-1,S=(s+1)*(v-1)+x-1,_=(s+1)*(v-1)+x,E=(s+1)*v+x;l.push(M,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new qt(c,3)),this.setAttribute("normal",new qt(u,3)),this.setAttribute("uv",new qt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class mf extends ve{constructor(t=1,e=.4,n=64,s=8,a=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:s,p:a,q:l},n=Math.floor(n),s=Math.floor(s);const c=[],u=[],f=[],d=[],m=new B,g=new B,v=new B,x=new B,M=new B,S=new B,_=new B;for(let A=0;A<=n;++A){const T=A/n*a*Math.PI*2;E(T,a,l,t,v),E(T+.01,a,l,t,x),S.subVectors(x,v),_.addVectors(x,v),M.crossVectors(S,_),_.crossVectors(M,S),M.normalize(),_.normalize();for(let U=0;U<=s;++U){const R=U/s*Math.PI*2,P=-e*Math.cos(R),I=e*Math.sin(R);m.x=v.x+(P*_.x+I*M.x),m.y=v.y+(P*_.y+I*M.y),m.z=v.z+(P*_.z+I*M.z),u.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),d.push(A/n),d.push(U/s)}}for(let A=1;A<=n;A++)for(let T=1;T<=s;T++){const U=(s+1)*(A-1)+(T-1),R=(s+1)*A+(T-1),P=(s+1)*A+T,I=(s+1)*(A-1)+T;c.push(U,R,I),c.push(R,P,I)}this.setIndex(c),this.setAttribute("position",new qt(u,3)),this.setAttribute("normal",new qt(f,3)),this.setAttribute("uv",new qt(d,2));function E(A,T,U,R,P){const I=Math.cos(A),C=Math.sin(A),w=U/T*A,z=Math.cos(w);P.x=R*(2+z)*.5*I,P.y=R*(2+z)*C*.5,P.z=R*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class gf extends ve{constructor(t=new jm(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),e=64,n=1,s=8,a=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:s,closed:a};const l=t.computeFrenetFrames(e,a);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new B,u=new B,f=new pt;let d=new B;const m=[],g=[],v=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new qt(m,3)),this.setAttribute("normal",new qt(g,3)),this.setAttribute("uv",new qt(v,2));function M(){for(let A=0;A<e;A++)S(A);S(a===!1?e:0),E(),_()}function S(A){d=t.getPointAt(A/e,d);const T=l.normals[A],U=l.binormals[A];for(let R=0;R<=s;R++){const P=R/s*Math.PI*2,I=Math.sin(P),C=-Math.cos(P);u.x=C*T.x+I*U.x,u.y=C*T.y+I*U.y,u.z=C*T.z+I*U.z,u.normalize(),g.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=e;A++)for(let T=1;T<=s;T++){const U=(s+1)*(A-1)+(T-1),R=(s+1)*A+(T-1),P=(s+1)*A+T,I=(s+1)*(A-1)+T;x.push(U,R,I),x.push(R,P,I)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=s;T++)f.x=A/e,f.y=T/s,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new gf(new Nh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class rS extends ve{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,s=new B,a=new B;if(t.index!==null){const l=t.attributes.position,c=t.index;let u=t.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,d=u.length;f<d;++f){const m=u[f],g=m.start,v=m.count;for(let x=g,M=g+v;x<M;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);s.fromBufferAttribute(l,_),a.fromBufferAttribute(l,E),h_(s,a,n)===!0&&(e.push(s.x,s.y,s.z),e.push(a.x,a.y,a.z))}}}else{const l=t.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let f=0;f<3;f++){const d=3*c+f,m=3*c+(f+1)%3;s.fromBufferAttribute(l,d),a.fromBufferAttribute(l,m),h_(s,a,n)===!0&&(e.push(s.x,s.y,s.z),e.push(a.x,a.y,a.z))}}this.setAttribute("position",new qt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function h_(i,t,e){const n=`${i.x},${i.y},${i.z}-${t.x},${t.y},${t.z}`,s=`${t.x},${t.y},${t.z}-${i.x},${i.y},${i.z}`;return e.has(n)===!0||e.has(s)===!0?!1:(e.add(n),e.add(s),!0)}var f_=Object.freeze({__proto__:null,BoxGeometry:fa,CapsuleGeometry:sf,CircleGeometry:rf,ConeGeometry:ac,CylinderGeometry:rc,DodecahedronGeometry:af,EdgesGeometry:jx,ExtrudeGeometry:lf,IcosahedronGeometry:cf,LatheGeometry:uf,OctahedronGeometry:oc,PlaneGeometry:No,PolyhedronGeometry:_r,RingGeometry:hf,ShapeGeometry:ff,SphereGeometry:lc,TetrahedronGeometry:df,TorusGeometry:pf,TorusKnotGeometry:mf,TubeGeometry:gf,WireframeGeometry:rS});class aS extends Hn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ot(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class oS extends Yi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Jm extends Hn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ot(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new qi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class lS extends Jm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return de(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ot(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ot(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ot(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class cS extends Hn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ot(16777215),this.specular=new Ot(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new qi,this.combine=nc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class uS extends Hn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ot(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class hS extends Hn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class fS extends Hn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ot(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ot(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new qi,this.combine=nc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Qm extends Hn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Sx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class $m extends Hn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class dS extends Hn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ot(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=gr,this.normalScale=new pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class pS extends jn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function sa(i,t){return!i||i.constructor===t?i:typeof t.BYTES_PER_ELEMENT=="number"?new t(i):Array.prototype.slice.call(i)}function mS(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function gS(i){function t(s,a){return i[s]-i[a]}const e=i.length,n=new Array(e);for(let s=0;s!==e;++s)n[s]=s;return n.sort(t),n}function um(i,t,e){const n=i.length,s=new i.constructor(n);for(let a=0,l=0;l!==n;++a){const c=e[a]*t;for(let u=0;u!==t;++u)s[l++]=i[c+u]}return s}function tg(i,t,e,n){let s=1,a=i[0];for(;a!==void 0&&a[n]===void 0;)a=i[s++];if(a===void 0)return;let l=a[n];if(l!==void 0)if(Array.isArray(l))do l=a[n],l!==void 0&&(t.push(a.time),e.push(...l)),a=i[s++];while(a!==void 0);else if(l.toArray!==void 0)do l=a[n],l!==void 0&&(t.push(a.time),l.toArray(e,e.length)),a=i[s++];while(a!==void 0);else do l=a[n],l!==void 0&&(t.push(a.time),e.push(l)),a=i[s++];while(a!==void 0)}function YT(i,t,e,n,s=30){const a=i.clone();a.name=t;const l=[];for(let u=0;u<a.tracks.length;++u){const f=a.tracks[u],d=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*s;if(!(x<e||x>=n)){m.push(f.times[v]);for(let M=0;M<d;++M)g.push(f.values[v*d+M])}}m.length!==0&&(f.times=sa(m,f.times.constructor),f.values=sa(g,f.values.constructor),l.push(f))}a.tracks=l;let c=1/0;for(let u=0;u<a.tracks.length;++u)c>a.tracks[u].times[0]&&(c=a.tracks[u].times[0]);for(let u=0;u<a.tracks.length;++u)a.tracks[u].shift(-1*c);return a.resetDuration(),a}function ZT(i,t=0,e=i,n=30){n<=0&&(n=30);const s=e.tracks.length,a=t/n;for(let l=0;l<s;++l){const c=e.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const f=i.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(f===void 0)continue;let d=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let M;if(a<=c.times[0]){const _=d,E=m-d;M=c.values.slice(_,E)}else if(a>=c.times[x]){const _=x*m+d,E=_+m-d;M=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=d,A=m-d;_.evaluate(a),M=_.resultBuffer.slice(E,A)}u==="quaternion"&&new si().fromArray(M).normalize().conjugate().toArray(M);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(u==="quaternion")si.multiplyQuaternionsFlat(f.values,E,M,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=M[T]}}}return i.blendMode=Pm,i}class jT{static convertArray(t,e){return sa(t,e)}static isTypedArray(t){return mS(t)}static getKeyframeOrder(t){return gS(t)}static sortedArray(t,e,n){return um(t,e,n)}static flattenJSON(t,e,n,s){tg(t,e,n,s)}static subclip(t,e,n,s,a=30){return YT(t,e,n,s,a)}static makeClipAdditive(t,e=0,n=t,s=30){return ZT(t,e,n,s)}}class cc{constructor(t,e,n,s){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,s=e[n],a=e[n-1];t:{e:{let l;n:{i:if(!(t<s)){for(let c=n+2;;){if(s===void 0){if(t<a)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(a=s,s=e[++n],t<s)break e}l=e.length;break n}if(!(t>=a)){const c=e[1];t<c&&(n=2,a=c);for(let u=n-2;;){if(a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(s=a,a=e[--n-1],t>=a)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(s=e[n],a=e[n-1],a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,a,s)}return this.interpolate_(n,a,t,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,s=this.valueSize,a=t*s;for(let l=0;l!==s;++l)e[l]=n[a+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class vS extends cc{constructor(t,e,n,s){super(t,e,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:na,endingEnd:na}}intervalChanged_(t,e,n){const s=this.parameterPositions;let a=t-2,l=t+1,c=s[a],u=s[l];if(c===void 0)switch(this.getSettings_().endingStart){case ia:a=t,c=2*e-n;break;case kl:a=s.length-2,c=e+s[a]-s[a+1];break;default:a=t,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case ia:l=t,u=2*n-e;break;case kl:l=1,u=n+s[1]-s[0];break;default:l=t-1,u=e}const f=(n-e)*.5,d=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(u-n),this._offsetPrev=a*d,this._offsetNext=l*d}interpolate_(t,e,n,s){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=t*c,f=u-c,d=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(s-e),M=x*x,S=M*x,_=-g*S+2*g*M-g*x,E=(1+g)*S+(-1.5-2*g)*M+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*M+.5*x,T=v*S-v*M;for(let U=0;U!==c;++U)a[U]=_*l[d+U]+E*l[f+U]+A*l[u+U]+T*l[m+U];return a}}class eg extends cc{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=t*c,f=u-c,d=(n-e)/(s-e),m=1-d;for(let g=0;g!==c;++g)a[g]=l[f+g]*m+l[u+g]*d;return a}}class _S extends cc{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t){return this.copySampleValue_(t-1)}}class Li{constructor(t,e,n,s){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=sa(e,this.TimeBufferType),this.values=sa(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:sa(t.times,Array),values:sa(t.values,Array)};const s=t.getInterpolation();s!==t.DefaultInterpolation&&(n.interpolation=s)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new _S(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new eg(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new vS(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Gl:e=this.InterpolantFactoryMethodDiscrete;break;case Rh:e=this.InterpolantFactoryMethodLinear;break;case ku:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Gl;case this.InterpolantFactoryMethodLinear:return Rh;case this.InterpolantFactoryMethodSmooth:return ku}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]*=t}return this}trim(t,e){const n=this.times,s=n.length;let a=0,l=s-1;for(;a!==s&&n[a]<t;)++a;for(;l!==-1&&n[l]>e;)--l;if(++l,a!==0||l!==s){a>=l&&(l=Math.max(l,1),a=l-1);const c=this.getValueSize();this.times=n.slice(a,l),this.values=this.values.slice(a*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,s=this.values,a=n.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==a;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),t=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),t=!1;break}l=u}if(s!==void 0&&mS(s))for(let c=0,u=s.length;c!==u;++c){const f=s[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),s=this.getInterpolation()===ku,a=t.length-1;let l=1;for(let c=1;c<a;++c){let u=!1;const f=t[c],d=t[c+1];if(f!==d&&(c!==1||f!==t[0]))if(s)u=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const M=e[m+x];if(M!==e[g+x]||M!==e[v+x]){u=!0;break}}}if(u){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(a>0){t[l]=t[a];for(let c=a*n,u=l*n,f=0;f!==n;++f)e[u+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,s=new n(this.name,t,e);return s.createInterpolant=this.createInterpolant,s}}Li.prototype.ValueTypeName="";Li.prototype.TimeBufferType=Float32Array;Li.prototype.ValueBufferType=Float32Array;Li.prototype.DefaultInterpolation=Rh;class da extends Li{constructor(t,e,n){super(t,e,n)}}da.prototype.ValueTypeName="bool";da.prototype.ValueBufferType=Array;da.prototype.DefaultInterpolation=Gl;da.prototype.InterpolantFactoryMethodLinear=void 0;da.prototype.InterpolantFactoryMethodSmooth=void 0;class ng extends Li{constructor(t,e,n,s){super(t,e,n,s)}}ng.prototype.ValueTypeName="color";class Jl extends Li{constructor(t,e,n,s){super(t,e,n,s)}}Jl.prototype.ValueTypeName="number";class yS extends cc{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-e)/(s-e);let f=t*c;for(let d=f+c;f!==d;f+=4)si.slerpFlat(a,0,l,f-c,l,f,u);return a}}class uc extends Li{constructor(t,e,n,s){super(t,e,n,s)}InterpolantFactoryMethodLinear(t){return new yS(this.times,this.values,this.getValueSize(),t)}}uc.prototype.ValueTypeName="quaternion";uc.prototype.InterpolantFactoryMethodSmooth=void 0;class pa extends Li{constructor(t,e,n){super(t,e,n)}}pa.prototype.ValueTypeName="string";pa.prototype.ValueBufferType=Array;pa.prototype.DefaultInterpolation=Gl;pa.prototype.InterpolantFactoryMethodLinear=void 0;pa.prototype.InterpolantFactoryMethodSmooth=void 0;class Ql extends Li{constructor(t,e,n,s){super(t,e,n,s)}}Ql.prototype.ValueTypeName="vector";class $l{constructor(t="",e=-1,n=[],s=Yh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=s,this.uuid=_i(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,s=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(JT(n[l]).scale(s));const a=new this(t.name,t.duration,e,t.blendMode);return a.uuid=t.uuid,a}static toJSON(t){const e=[],n=t.tracks,s={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let a=0,l=n.length;a!==l;++a)e.push(Li.toJSON(n[a]));return s}static CreateFromMorphTargetSequence(t,e,n,s){const a=e.length,l=[];for(let c=0;c<a;c++){let u=[],f=[];u.push((c+a-1)%a,c,(c+1)%a),f.push(0,1,0);const d=gS(u);u=um(u,1,d),f=um(f,1,d),!s&&u[0]===0&&(u.push(a),f.push(f[0])),l.push(new Jl(".morphTargetInfluences["+e[c].name+"]",u,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const s=t;n=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<n.length;s++)if(n[s].name===e)return n[s];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const s={},a=/^([\w-]*?)([\d]+)$/;for(let c=0,u=t.length;c<u;c++){const f=t[c],d=f.name.match(a);if(d&&d.length>1){const m=d[1];let g=s[m];g||(s[m]=g=[]),g.push(f)}}const l=[];for(const c in s)l.push(this.CreateFromMorphTargetSequence(c,s[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,M){if(v.length!==0){const S=[],_=[];tg(v,S,_,x),S.length!==0&&M.push(new m(g,S,_))}},s=[],a=t.name||"default",l=t.fps||30,c=t.blendMode;let u=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let M=0;M<g[x].morphTargets.length;M++)v[g[x].morphTargets[M]]=-1;for(const M in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),_.push(A.morphTarget===M?1:0)}s.push(new Jl(".morphTargetInfluence["+M+"]",S,_))}u=v.length*l}else{const v=".bones["+e[m].name+"]";n(Ql,v+".position",g,"pos",s),n(uc,v+".quaternion",g,"rot",s),n(Ql,v+".scale",g,"scl",s)}}return s.length===0?null:new this(a,u,s,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,s=t.length;n!==s;++n){const a=this.tracks[n];e=Math.max(e,a.times[a.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function KT(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Jl;case"vector":case"vector2":case"vector3":case"vector4":return Ql;case"color":return ng;case"quaternion":return uc;case"bool":case"boolean":return da;case"string":return pa}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function JT(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=KT(i.type);if(i.times===void 0){const e=[],n=[];tg(i.keys,e,n,"value"),i.times=e,i.values=n}return t.parse!==void 0?t.parse(i):new t(i.name,i.times,i.values,i.interpolation)}const as={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class ig{constructor(t,e,n){const s=this;let a=!1,l=0,c=0,u;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(d){c++,a===!1&&s.onStart!==void 0&&s.onStart(d,l,c),a=!0},this.itemEnd=function(d){l++,s.onProgress!==void 0&&s.onProgress(d,l,c),l===c&&(a=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(d){s.onError!==void 0&&s.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,m){return f.push(d,m),this},this.removeHandler=function(d){const m=f.indexOf(d);return m!==-1&&f.splice(m,2),this},this.getHandler=function(d){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(d))return x}return null}}}const xS=new ig;class ri{constructor(t){this.manager=t!==void 0?t:xS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(s,a){n.load(t,s,e,a)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ri.DEFAULT_MATERIAL_NAME="__DEFAULT";const Cs={};class QT extends Error{constructor(t,e){super(t),this.response=e}}class zs extends ri{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=as.get(`file:${t}`);if(a!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(a),this.manager.itemEnd(t)},0),a;if(Cs[t]!==void 0){Cs[t].push({onLoad:e,onProgress:n,onError:s});return}Cs[t]=[],Cs[t].push({onLoad:e,onProgress:n,onError:s});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const d=Cs[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let M=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{M+=T.byteLength;const U=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:v});for(let R=0,P=d.length;R<P;R++){const I=d[R];I.onProgress&&I.onProgress(U)}_.enqueue(T),E()}},A=>{_.error(A)})}}});return new Response(S)}else throw new QT(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(u){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{as.add(`file:${t}`,f);const d=Cs[t];delete Cs[t];for(let m=0,g=d.length;m<g;m++){const v=d[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const d=Cs[t];if(d===void 0)throw this.manager.itemError(t),f;delete Cs[t];for(let m=0,g=d.length;m<g;m++){const v=d[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class $T extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=new zs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(a.parse(JSON.parse(c)))}catch(u){s?s(u):console.error(u),a.manager.itemError(t)}},n,s)}parse(t){const e=[];for(let n=0;n<t.length;n++){const s=$l.parse(t[n]);e.push(s)}return e}}class tA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=[],c=new nf,u=new zs(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(a.withCredentials);let f=0;function d(m){u.load(t[m],function(g){const v=a.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=pn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,s)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)d(m);else u.load(t,function(m){const g=a.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let M=0;M<g.mipmapCount;M++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+M]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=pn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,s);return c}}const ro=new WeakMap;class tc extends ri{constructor(t){super(t)}load(t,e,n,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,l=as.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)a.manager.itemStart(t),setTimeout(function(){e&&e(l),a.manager.itemEnd(t)},0);else{let m=ro.get(l);m===void 0&&(m=[],ro.set(l,m)),m.push({onLoad:e,onError:s})}return l}const c=Yl("img");function u(){d(),e&&e(this);const m=ro.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}ro.delete(this),a.manager.itemEnd(t)}function f(m){d(),s&&s(m),as.remove(`image:${t}`);const g=ro.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}ro.delete(this),a.manager.itemError(t),a.manager.itemEnd(t)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),as.add(`image:${t}`,c),a.manager.itemStart(t),c.src=t,c}}class eA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=new sc;a.colorSpace=zn;const l=new tc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(f){l.load(t[f],function(d){a.images[f]=d,c++,c===6&&(a.needsUpdate=!0,e&&e(a))},void 0,s)}for(let f=0;f<t.length;++f)u(f);return a}}class nA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=new ls,c=new zs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(a.withCredentials),c.load(t,function(u){let f;try{f=a.parse(u)}catch(d){if(s!==void 0)s(d);else{console.error(d);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Di,l.wrapT=f.wrapT!==void 0?f.wrapT:Di,l.magFilter=f.magFilter!==void 0?f.magFilter:pn,l.minFilter=f.minFilter!==void 0?f.minFilter:pn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=rs),f.mipmapCount===1&&(l.minFilter=pn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,s),l}}class iA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=new rn,l=new tc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){a.image=c,a.needsUpdate=!0,e!==void 0&&e(a)},n,s),a}}class yr extends De{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ot(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class SS extends yr{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ot(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const xp=new re,d_=new B,p_=new B;class sg{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pt(512,512),this.mapType=Ni,this.map=null,this.mapPass=null,this.matrix=new re,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Uo,this._frameExtents=new pt(1,1),this._viewportCount=1,this._viewports=[new Re(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;d_.setFromMatrixPosition(t.matrixWorld),e.position.copy(d_),p_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(p_),e.updateMatrixWorld(),xp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(xp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class sA extends sg{constructor(){super(new Sn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Mo*2*t.angle*this.focus,s=this.mapSize.width/this.mapSize.height*this.aspect,a=t.distance||e.far;(n!==e.fov||s!==e.aspect||a!==e.far)&&(e.fov=n,e.aspect=s,e.far=a,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class MS extends yr{constructor(t,e,n=0,s=Math.PI/3,a=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.distance=n,this.angle=s,this.penumbra=a,this.decay=l,this.map=null,this.shadow=new sA}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const m_=new re,Sl=new B,Sp=new B;class rA extends sg{constructor(){super(new Sn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new pt(4,2),this._viewportCount=6,this._viewports=[new Re(2,1,1,1),new Re(0,1,1,1),new Re(3,1,1,1),new Re(1,1,1,1),new Re(3,0,1,1),new Re(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,a=t.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),Sl.setFromMatrixPosition(t.matrixWorld),n.position.copy(Sl),Sp.copy(n.position),Sp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Sp),n.updateMatrixWorld(),s.makeTranslation(-Sl.x,-Sl.y,-Sl.z),m_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(m_)}}class bS extends yr{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new rA}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class hc extends Kh{constructor(t=-1,e=1,n=1,s=-1,a=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=a,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,a,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=a,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let a=n-t,l=n+t,c=s+e,u=s-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=f*this.view.offsetX,l=a+f*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(a,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class aA extends sg{constructor(){super(new hc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ES extends yr{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.shadow=new aA}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class TS extends yr{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class AS extends yr{constructor(t,e,n=10,s=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=s}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class wS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new B)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,s=t.y,a=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*s),e.addScaledVector(l[2],.488603*a),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*s)),e.addScaledVector(l[5],1.092548*(s*a)),e.addScaledVector(l[6],.315392*(3*a*a-1)),e.addScaledVector(l[7],1.092548*(n*a)),e.addScaledVector(l[8],.546274*(n*n-s*s)),e}getIrradianceAt(t,e){const n=t.x,s=t.y,a=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*s),e.addScaledVector(l[2],2*.511664*a),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*s),e.addScaledVector(l[5],2*.429043*s*a),e.addScaledVector(l[6],.743125*a*a-.247708),e.addScaledVector(l[7],2*.429043*n*a),e.addScaledVector(l[8],.429043*(n*n-s*s)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].fromArray(t,e+s*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let s=0;s<9;s++)n[s].toArray(t,e+s*3);return t}static getBasisAt(t,e){const n=t.x,s=t.y,a=t.z;e[0]=.282095,e[1]=.488603*s,e[2]=.488603*a,e[3]=.488603*n,e[4]=1.092548*n*s,e[5]=1.092548*s*a,e[6]=.315392*(3*a*a-1),e[7]=1.092548*n*a,e[8]=.546274*(n*n-s*s)}}class CS extends yr{constructor(t=new wS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class vf extends ri{constructor(t){super(t),this.textures={}}load(t,e,n,s){const a=this,l=new zs(a.manager);l.setPath(a.path),l.setRequestHeader(a.requestHeader),l.setWithCredentials(a.withCredentials),l.load(t,function(c){try{e(a.parse(JSON.parse(c)))}catch(u){s?s(u):console.error(u),a.manager.itemError(t)}},n,s)}parse(t){const e=this.textures;function n(a){return e[a]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",a),e[a]}const s=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(s.uuid=t.uuid),t.name!==void 0&&(s.name=t.name),t.color!==void 0&&s.color!==void 0&&s.color.setHex(t.color),t.roughness!==void 0&&(s.roughness=t.roughness),t.metalness!==void 0&&(s.metalness=t.metalness),t.sheen!==void 0&&(s.sheen=t.sheen),t.sheenColor!==void 0&&(s.sheenColor=new Ot().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(s.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&s.emissive!==void 0&&s.emissive.setHex(t.emissive),t.specular!==void 0&&s.specular!==void 0&&s.specular.setHex(t.specular),t.specularIntensity!==void 0&&(s.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&s.specularColor!==void 0&&s.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(s.shininess=t.shininess),t.clearcoat!==void 0&&(s.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(s.dispersion=t.dispersion),t.iridescence!==void 0&&(s.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(s.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(s.transmission=t.transmission),t.thickness!==void 0&&(s.thickness=t.thickness),t.attenuationDistance!==void 0&&(s.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&s.attenuationColor!==void 0&&s.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(s.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(s.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(s.fog=t.fog),t.flatShading!==void 0&&(s.flatShading=t.flatShading),t.blending!==void 0&&(s.blending=t.blending),t.combine!==void 0&&(s.combine=t.combine),t.side!==void 0&&(s.side=t.side),t.shadowSide!==void 0&&(s.shadowSide=t.shadowSide),t.opacity!==void 0&&(s.opacity=t.opacity),t.transparent!==void 0&&(s.transparent=t.transparent),t.alphaTest!==void 0&&(s.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(s.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(s.depthFunc=t.depthFunc),t.depthTest!==void 0&&(s.depthTest=t.depthTest),t.depthWrite!==void 0&&(s.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(s.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(s.blendSrc=t.blendSrc),t.blendDst!==void 0&&(s.blendDst=t.blendDst),t.blendEquation!==void 0&&(s.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(s.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(s.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(s.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&s.blendColor!==void 0&&s.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(s.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(s.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(s.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(s.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(s.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(s.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(s.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(s.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(s.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(s.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(s.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(s.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(s.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(s.rotation=t.rotation),t.linewidth!==void 0&&(s.linewidth=t.linewidth),t.dashSize!==void 0&&(s.dashSize=t.dashSize),t.gapSize!==void 0&&(s.gapSize=t.gapSize),t.scale!==void 0&&(s.scale=t.scale),t.polygonOffset!==void 0&&(s.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(s.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(s.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(s.dithering=t.dithering),t.alphaToCoverage!==void 0&&(s.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(s.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(s.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(s.visible=t.visible),t.toneMapped!==void 0&&(s.toneMapped=t.toneMapped),t.userData!==void 0&&(s.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?s.vertexColors=t.vertexColors>0:s.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const a in t.uniforms){const l=t.uniforms[a];switch(s.uniforms[a]={},l.type){case"t":s.uniforms[a].value=n(l.value);break;case"c":s.uniforms[a].value=new Ot().setHex(l.value);break;case"v2":s.uniforms[a].value=new pt().fromArray(l.value);break;case"v3":s.uniforms[a].value=new B().fromArray(l.value);break;case"v4":s.uniforms[a].value=new Re().fromArray(l.value);break;case"m3":s.uniforms[a].value=new pe().fromArray(l.value);break;case"m4":s.uniforms[a].value=new re().fromArray(l.value);break;default:s.uniforms[a].value=l.value}}if(t.defines!==void 0&&(s.defines=t.defines),t.vertexShader!==void 0&&(s.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(s.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(s.glslVersion=t.glslVersion),t.extensions!==void 0)for(const a in t.extensions)s.extensions[a]=t.extensions[a];if(t.lights!==void 0&&(s.lights=t.lights),t.clipping!==void 0&&(s.clipping=t.clipping),t.size!==void 0&&(s.size=t.size),t.sizeAttenuation!==void 0&&(s.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(s.map=n(t.map)),t.matcap!==void 0&&(s.matcap=n(t.matcap)),t.alphaMap!==void 0&&(s.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(s.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(s.bumpScale=t.bumpScale),t.normalMap!==void 0&&(s.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(s.normalMapType=t.normalMapType),t.normalScale!==void 0){let a=t.normalScale;Array.isArray(a)===!1&&(a=[a,a]),s.normalScale=new pt().fromArray(a)}return t.displacementMap!==void 0&&(s.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(s.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(s.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(s.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(s.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(s.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(s.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(s.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(s.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(s.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(s.envMap=n(t.envMap)),t.envMapRotation!==void 0&&s.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(s.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(s.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(s.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(s.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(s.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(s.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(s.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(s.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(s.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(s.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(s.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(s.clearcoatNormalScale=new pt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(s.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(s.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(s.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(s.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(s.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(s.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(s.sheenRoughnessMap=n(t.sheenRoughnessMap)),s}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return vf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:aS,SpriteMaterial:Vm,RawShaderMaterial:oS,ShaderMaterial:Yi,PointsMaterial:km,MeshPhysicalMaterial:lS,MeshStandardMaterial:Jm,MeshPhongMaterial:cS,MeshToonMaterial:uS,MeshNormalMaterial:hS,MeshLambertMaterial:fS,MeshDepthMaterial:Qm,MeshDistanceMaterial:$m,MeshBasicMaterial:vr,MeshMatcapMaterial:dS,LineDashedMaterial:pS,LineBasicMaterial:jn,Material:Hn};return new e[t]}}class hm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class RS extends ve{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class DS extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=new zs(a.manager);l.setPath(a.path),l.setRequestHeader(a.requestHeader),l.setWithCredentials(a.withCredentials),l.load(t,function(c){try{e(a.parse(JSON.parse(c)))}catch(u){s?s(u):console.error(u),a.manager.itemError(t)}},n,s)}parse(t){const e={},n={};function s(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=a(v,S.buffer),E=fo(S.type,_),A=new $h(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function a(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new RS:new ve,c=t.data.index;if(c!==void 0){const v=fo(c.type,c.array);l.setIndex(new ke(v,1))}const u=t.data.attributes;for(const v in u){const x=u[v];let M;if(x.isInterleavedBufferAttribute){const S=s(t.data,x.data);M=new ca(S,x.itemSize,x.offset,x.normalized)}else{const S=fo(x.type,x.array),_=x.isInstancedBufferAttribute?To:ke;M=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),l.setAttribute(v,M)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],M=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=s(t.data,E.data);A=new ca(T,E.itemSize,E.offset,E.normalized)}else{const T=fo(E.type,E.array);A=new ke(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),M.push(A)}l.morphAttributes[v]=M}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const M=m[v];l.addGroup(M.start,M.count,M.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new wn().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class oA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=this.path===""?hm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new zs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(u){let f=null;try{f=JSON.parse(u)}catch(m){s!==void 0&&s(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const d=f.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){s!==void 0&&s(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}a.parse(f,e)},n,s)}async loadAsync(t,e){const n=this,s=this.path===""?hm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new zs(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials);const l=await a.loadAsync(t,e),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),s=this.parseShapes(t.shapes),a=this.parseGeometries(t.geometries,s),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),u=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,a,u,c,n),d=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,d),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,n),a=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,a),c=this.parseMaterials(t.materials,l),u=this.parseObject(t.object,s,c,l,e),f=this.parseSkeletons(t.skeletons,u);return this.bindSkeletons(u,f),this.bindLightTargets(u),u}parseShapes(t){const e={};if(t!==void 0)for(let n=0,s=t.length;n<s;n++){const a=new oa().fromJSON(t[n]);e[a.uuid]=a}return e}parseSkeletons(t,e){const n={},s={};if(e.traverse(function(a){a.isBone&&(s[a.uuid]=a)}),t!==void 0)for(let a=0,l=t.length;a<l;a++){const c=new tf().fromJSON(t[a],s);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const s=new DS;for(let a=0,l=t.length;a<l;a++){let c;const u=t[a];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=s.parse(u);break;default:u.type in f_?c=f_[u.type].fromJSON(u,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(t,e){const n={},s={};if(t!==void 0){const a=new vf;a.setTextures(e);for(let l=0,c=t.length;l<c;l++){const u=t[l];n[u.uuid]===void 0&&(n[u.uuid]=a.parse(u)),s[u.uuid]=n[u.uuid]}}return s}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const s=t[n],a=$l.parse(s);e[a.uuid]=a}return e}parseImages(t,e){const n=this,s={};let a;function l(u){return n.manager.itemStart(u),a.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const f=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(d)}else return u.data?{data:fo(u.type,u.data),width:u.width,height:u.height}:null}if(t!==void 0&&t.length>0){const u=new ig(e);a=new tc(u),a.setCrossOrigin(this.crossOrigin);for(let f=0,d=t.length;f<d;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new ls(_.data,_.width,_.height)))}s[m.uuid]=new hr(v)}else{const v=c(m.url);s[m.uuid]=new hr(v)}}}return s}async parseImagesAsync(t){const e=this,n={};let s;async function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await s.loadAsync(u)}else return l.data?{data:fo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){s=new tc(this.manager),s.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const u=t[l],f=u.url;if(Array.isArray(f)){const d=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await a(v);x!==null&&(x instanceof HTMLImageElement?d.push(x):d.push(new ls(x.data,x.width,x.height)))}n[u.uuid]=new hr(d)}else{const d=await a(u.url);n[u.uuid]=new hr(d)}}}return n}parseTextures(t,e){function n(a,l){return typeof a=="number"?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),l[a])}const s={};if(t!==void 0)for(let a=0,l=t.length;a<l;a++){const c=t[a];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=e[c.image],f=u.data;let d;Array.isArray(f)?(d=new sc,f.length===6&&(d.needsUpdate=!0)):(f&&f.data?d=new ls:d=new rn,f&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,lA)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],g_),d.wrapT=n(c.wrap[1],g_)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,v_)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,v_)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),s[c.uuid]=d}return s}parseObject(t,e,n,s,a){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function u(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return s[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),s[g]}let d,m;switch(t.type){case"Scene":l=new Hm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Ot(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new Qh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new Jh(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new Sn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new hc(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new TS(t.color,t.intensity);break;case"DirectionalLight":l=new ES(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new bS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new AS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new MS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new SS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new CS().fromJSON(t);break;case"SkinnedMesh":d=c(t.geometry),m=u(t.material),l=new kx(d,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":d=c(t.geometry),m=u(t.material),l=new fn(d,m);break;case"InstancedMesh":d=c(t.geometry),m=u(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new Wx(d,m,g),l.instanceMatrix=new To(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new To(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":d=c(t.geometry),m=u(t.material),l=new Xx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=d,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(M=>{let S=null,_=null;return M.boundingBox!==void 0&&(S=new Fn().fromJSON(M.boundingBox)),M.boundingSphere!==void 0&&(_=new wn().fromJSON(M.boundingSphere)),{...M,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new wn().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new Fn().fromJSON(t.boundingBox));break;case"LOD":l=new Gx;break;case"Line":l=new mr(c(t.geometry),u(t.material));break;case"LineLoop":l=new qx(c(t.geometry),u(t.material));break;case"LineSegments":l=new hs(c(t.geometry),u(t.material));break;case"PointCloud":case"Points":l=new Yx(c(t.geometry),u(t.material));break;case"Sprite":l=new Vx(u(t.material));break;case"Group":l=new po;break;case"Bone":l=new Gm;break;default:l=new De}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,s,a))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(a[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],M=l.getObjectByProperty("uuid",x.object);M!==void 0&&l.addLevel(M,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const s=e[n.skeleton];s===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(s,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,s=t.getObjectByProperty("uuid",n);s!==void 0?e.target=s:e.target=new De}})}}const lA={UVMapping:Hh,CubeReflectionMapping:Is,CubeRefractionMapping:dr,EquirectangularReflectionMapping:Bl,EquirectangularRefractionMapping:Fl,CubeUVReflectionMapping:Co},g_={RepeatWrapping:Hl,ClampToEdgeWrapping:Di,MirroredRepeatWrapping:Vl},v_={NearestFilter:An,NearestMipmapNearestFilter:Am,NearestMipmapLinearFilter:ho,LinearFilter:pn,LinearMipmapNearestFilter:Al,LinearMipmapLinearFilter:rs},Mp=new WeakMap;class cA extends ri{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,l=as.get(`image-bitmap:${t}`);if(l!==void 0){if(a.manager.itemStart(t),l.then){l.then(f=>{if(Mp.has(l)===!0)s&&s(Mp.get(l)),a.manager.itemError(t),a.manager.itemEnd(t);else return e&&e(f),a.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),a.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(f){return as.add(`image-bitmap:${t}`,f),e&&e(f),a.manager.itemEnd(t),f}).catch(function(f){s&&s(f),Mp.set(u,f),as.remove(`image-bitmap:${t}`),a.manager.itemError(t),a.manager.itemEnd(t)});as.add(`image-bitmap:${t}`,u),a.manager.itemStart(t)}}let Uu;class rg{static getContext(){return Uu===void 0&&(Uu=new(window.AudioContext||window.webkitAudioContext)),Uu}static setContext(t){Uu=t}}class uA extends ri{constructor(t){super(t)}load(t,e,n,s){const a=this,l=new zs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(u){try{const f=u.slice(0);rg.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,s);function c(u){s?s(u):console.error(u),a.manager.itemError(t)}}}const __=new re,y_=new re,Xr=new re;class hA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Sn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Sn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Xr.copy(t.projectionMatrix);const s=e.eyeSep/2,a=s*e.near/e.focus,l=e.near*Math.tan(aa*e.fov*.5)/e.zoom;let c,u;y_.elements[12]=-s,__.elements[12]=s,c=-l*e.aspect+a,u=l*e.aspect+a,Xr.elements[0]=2*e.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Xr),c=-l*e.aspect-a,u=l*e.aspect-a,Xr.elements[0]=2*e.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Xr)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(y_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(__)}}class US extends Sn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class ag{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const qr=new B,bp=new si,fA=new B,Yr=new B,Zr=new B;class dA extends De{constructor(){super(),this.type="AudioListener",this.context=rg.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ag}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(qr,bp,fA),Yr.set(0,0,-1).applyQuaternion(bp),Zr.set(0,1,0).applyQuaternion(bp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(qr.x,n),e.positionY.linearRampToValueAtTime(qr.y,n),e.positionZ.linearRampToValueAtTime(qr.z,n),e.forwardX.linearRampToValueAtTime(Yr.x,n),e.forwardY.linearRampToValueAtTime(Yr.y,n),e.forwardZ.linearRampToValueAtTime(Yr.z,n),e.upX.linearRampToValueAtTime(Zr.x,n),e.upY.linearRampToValueAtTime(Zr.y,n),e.upZ.linearRampToValueAtTime(Zr.z,n)}else e.setPosition(qr.x,qr.y,qr.z),e.setOrientation(Yr.x,Yr.y,Yr.z,Zr.x,Zr.y,Zr.z)}}class NS extends De{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const jr=new B,x_=new si,pA=new B,Kr=new B;class mA extends NS{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(jr,x_,pA),Kr.set(0,0,1).applyQuaternion(x_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(jr.x,n),e.positionY.linearRampToValueAtTime(jr.y,n),e.positionZ.linearRampToValueAtTime(jr.z,n),e.orientationX.linearRampToValueAtTime(Kr.x,n),e.orientationY.linearRampToValueAtTime(Kr.y,n),e.orientationZ.linearRampToValueAtTime(Kr.z,n)}else e.setPosition(jr.x,jr.y,jr.z),e.setOrientation(Kr.x,Kr.y,Kr.z)}}class gA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class LS{constructor(t,e,n){this.binding=t,this.valueSize=n;let s,a,l;switch(e){case"quaternion":s=this._slerp,a=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":s=this._select,a=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:s=this._lerp,a=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=s,this._mixBufferRegionAdditive=a,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,s=this.valueSize,a=t*s+s;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==s;++c)n[a+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,a,0,c,s)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,s=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,s,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,s=t*e+e,a=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const u=e*this._origIndex;this._mixBufferRegion(n,s,u,1-a,e)}l>0&&this._mixBufferRegionAdditive(n,s,this._addIndex*e,1,e);for(let u=e,f=e+e;u!==f;++u)if(n[u]!==n[u+e]){c.setValue(n,s);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,s=n*this._origIndex;t.getValue(e,s);for(let a=n,l=s;a!==l;++a)e[a]=e[s+a%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,s,a){if(s>=.5)for(let l=0;l!==a;++l)t[e+l]=t[n+l]}_slerp(t,e,n,s){si.slerpFlat(t,e,t,e,t,n,s)}_slerpAdditive(t,e,n,s,a){const l=this._workIndex*a;si.multiplyQuaternionsFlat(t,l,t,e,t,n),si.slerpFlat(t,e,t,e,t,l,s)}_lerp(t,e,n,s,a){const l=1-s;for(let c=0;c!==a;++c){const u=e+c;t[u]=t[u]*l+t[n+c]*s}}_lerpAdditive(t,e,n,s,a){for(let l=0;l!==a;++l){const c=e+l;t[c]=t[c]+t[n+l]*s}}}const og="\\[\\]\\.:\\/",vA=new RegExp("["+og+"]","g"),lg="[^"+og+"]",_A="[^"+og.replace("\\.","")+"]",yA=/((?:WC+[\/:])*)/.source.replace("WC",lg),xA=/(WCOD+)?/.source.replace("WCOD",_A),SA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",lg),MA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",lg),bA=new RegExp("^"+yA+xA+SA+MA+"$"),EA=["material","materials","bones","map"];class TA{constructor(t,e,n){const s=n||Ce.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,s)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,a=n.length;s!==a;++s)n[s].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ce{constructor(t,e,n){this.path=e,this.parsedPath=n||Ce.parseTrackName(e),this.node=Ce.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ce.Composite(t,e,n):new Ce(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(vA,"")}static parseTrackName(t){const e=bA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){const a=n.nodeName.substring(s+1);EA.indexOf(a)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=a)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(a){for(let l=0;l<a.length;l++){const c=a[l];if(c.name===e||c.uuid===e)return c;const u=n(c.children);if(u)return u}return null},s=n(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)t[e++]=n[s]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,s=e.propertyName;let a=e.propertyIndex;if(t||(t=Ce.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let d=0;d<t.length;d++)if(t[d].name===f){f=d;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[s];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+s+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(a!==void 0){if(s==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[a]!==void 0&&(a=t.morphTargetDictionary[a])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=a}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=s;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ce.Composite=TA;Ce.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ce.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ce.prototype.GetterByBindingType=[Ce.prototype._getValue_direct,Ce.prototype._getValue_array,Ce.prototype._getValue_arrayElement,Ce.prototype._getValue_toArray];Ce.prototype.SetterByBindingTypeAndVersioning=[[Ce.prototype._setValue_direct,Ce.prototype._setValue_direct_setNeedsUpdate,Ce.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ce.prototype._setValue_array,Ce.prototype._setValue_array_setNeedsUpdate,Ce.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ce.prototype._setValue_arrayElement,Ce.prototype._setValue_arrayElement_setNeedsUpdate,Ce.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ce.prototype._setValue_fromArray,Ce.prototype._setValue_fromArray_setNeedsUpdate,Ce.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=_i(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,s=arguments.length;n!==s;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,s=this._parsedPaths,a=this._bindings,l=a.length;let c,u=t.length,f=this.nCachedObjects_;for(let d=0,m=arguments.length;d!==m;++d){const g=arguments[d],v=g.uuid;let x=e[v];if(x===void 0){x=u++,e[v]=x,t.push(g);for(let M=0,S=l;M!==S;++M)a[M].push(new Ce(g,n[M],s[M]))}else if(x<f){c=t[x];const M=--f,S=t[M];e[S.uuid]=x,t[x]=S,e[v]=M,t[M]=g;for(let _=0,E=l;_!==E;++_){const A=a[_],T=A[M];let U=A[x];A[x]=T,U===void 0&&(U=new Ce(g,n[_],s[_])),A[M]=U}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,s=n.length;let a=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],f=u.uuid,d=e[f];if(d!==void 0&&d>=a){const m=a++,g=t[m];e[g.uuid]=d,t[d]=g,e[f]=m,t[m]=u;for(let v=0,x=s;v!==x;++v){const M=n[v],S=M[m],_=M[d];M[d]=S,M[m]=_}}}this.nCachedObjects_=a}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,s=n.length;let a=this.nCachedObjects_,l=t.length;for(let c=0,u=arguments.length;c!==u;++c){const f=arguments[c],d=f.uuid,m=e[d];if(m!==void 0)if(delete e[d],m<a){const g=--a,v=t[g],x=--l,M=t[x];e[v.uuid]=m,t[m]=v,e[M.uuid]=g,t[g]=M,t.pop();for(let S=0,_=s;S!==_;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,M=s;x!==M;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=a}subscribe_(t,e){const n=this._bindingsIndicesByPath;let s=n[t];const a=this._bindings;if(s!==void 0)return a[s];const l=this._paths,c=this._parsedPaths,u=this._objects,f=u.length,d=this.nCachedObjects_,m=new Array(f);s=a.length,n[t]=s,l.push(t),c.push(e),a.push(m);for(let g=d,v=u.length;g!==v;++g){const x=u[g];m[g]=new Ce(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const s=this._paths,a=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],f=t[c];e[f]=n,l[n]=u,l.pop(),a[n]=a[c],a.pop(),s[n]=s[c],s.pop()}}}class PS{constructor(t,e,n=null,s=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=s;const a=e.tracks,l=a.length,c=new Array(l),u={endingStart:na,endingEnd:na};for(let f=0;f!==l;++f){const d=a[f].createInterpolant(null);c[f]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=yx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const s=this._clip.duration,a=t._clip.duration,l=a/s,c=s/a;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const s=this._mixer,a=s.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=s._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,f=c.sampleValues;return u[0]=a,u[1]=a+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,s){if(!this.enabled){this._updateWeight(t);return}const a=this._startTime;if(a!==null){const u=(t-a)*n;u<0||n===0?e=0:(this._startTime=null,e=n*u)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const u=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Pm:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(l),f[d].accumulateAdditive(c);break;case Yh:default:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(l),f[d].accumulate(s,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const s=n.evaluate(t)[0];e*=s,t>n.parameterPositions[1]&&(this.stopFading(),s===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const s=n.evaluate(t)[0];e*=s,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let s=this.time+t,a=this._loopCount;const l=n===xx;if(t===0)return a===-1?s:l&&(a&1)===1?e-s:s;if(n===_x){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(s>=e)s=e;else if(s<0)s=0;else{this.time=s;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(a===-1&&(t>=0?(a=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),s>=e||s<0){const c=Math.floor(s/e);s-=e*c,a+=Math.abs(c);const u=this.repetitions-a;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,s=t>0?e:0,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(u===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=a,this.time=s,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=s;if(l&&(a&1)===1)return e-s}return s}_setEndings(t,e,n){const s=this._interpolantSettings;n?(s.endingStart=ia,s.endingEnd=ia):(t?s.endingStart=this.zeroSlopeAtStart?ia:na:s.endingStart=kl,e?s.endingEnd=this.zeroSlopeAtEnd?ia:na:s.endingEnd=kl)}_scheduleFading(t,e,n){const s=this._mixer,a=s.time;let l=this._weightInterpolant;l===null&&(l=s._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=a,u[0]=e,c[1]=a+t,u[1]=n,this}}const wA=new Float32Array(1);class CA extends us{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,s=t._clip.tracks,a=s.length,l=t._propertyBindings,c=t._interpolants,u=n.uuid,f=this._bindingsByRootAndName;let d=f[u];d===void 0&&(d={},f[u]=d);for(let m=0;m!==a;++m){const g=s[m],v=g.name;let x=d[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,u,v));continue}const M=e&&e._propertyBindings[m].binding.parsedPath;x=new LS(Ce.create(n,v,M),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,u,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,s=t._clip.uuid,a=this._actionsByClip[s];this._bindAction(t,a&&a.knownActions[0]),this._addInactiveAction(t,s,n)}const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const a=e[n];a.useCount++===0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const a=e[n];--a.useCount===0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const s=this._actions,a=this._actionsByClip;let l=a[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,a[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=s.length,s.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],s=t._cacheIndex;n._cacheIndex=s,e[s]=n,e.pop(),t._cacheIndex=null;const a=t._clip.uuid,l=this._actionsByClip,c=l[a],u=c.knownActions,f=u[u.length-1],d=t._byClipCacheIndex;f._byClipCacheIndex=d,u[d]=f,u.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],u.length===0&&delete l[a],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,s=e.length;n!==s;++n){const a=e[n];--a.referenceCount===0&&this._removeInactiveBinding(a)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,s=this._nActiveActions++,a=e[s];t._cacheIndex=s,e[s]=t,a._cacheIndex=n,e[n]=a}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,s=--this._nActiveActions,a=e[s];t._cacheIndex=s,e[s]=t,a._cacheIndex=n,e[n]=a}_addInactiveBinding(t,e,n){const s=this._bindingsByRootAndName,a=this._bindings;let l=s[e];l===void 0&&(l={},s[e]=l),l[n]=t,t._cacheIndex=a.length,a.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,s=n.rootNode.uuid,a=n.path,l=this._bindingsByRootAndName,c=l[s],u=e[e.length-1],f=t._cacheIndex;u._cacheIndex=f,e[f]=u,e.pop(),delete c[a],Object.keys(c).length===0&&delete l[s]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,s=this._nActiveBindings++,a=e[s];t._cacheIndex=s,e[s]=t,a._cacheIndex=n,e[n]=a}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,s=--this._nActiveBindings,a=e[s];t._cacheIndex=s,e[s]=t,a._cacheIndex=n,e[n]=a}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new eg(new Float32Array(2),new Float32Array(2),1,wA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,s=--this._nActiveControlInterpolants,a=e[s];t.__cacheIndex=s,e[s]=t,a.__cacheIndex=n,e[n]=a}clipAction(t,e,n){const s=e||this._root,a=s.uuid;let l=typeof t=="string"?$l.findByName(s,t):t;const c=l!==null?l.uuid:t,u=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Yh),u!==void 0){const m=u.actionByRoot[a];if(m!==void 0&&m.blendMode===n)return m;f=u.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const d=new PS(this,l,e,n);return this._bindAction(d,f),this._addInactiveAction(d,c,a),d}existingAction(t,e){const n=e||this._root,s=n.uuid,a=typeof t=="string"?$l.findByName(n,t):t,l=a?a.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[s]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,s=this.time+=t,a=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(s,t,a,l);const c=this._bindings,u=this._nActiveBindings;for(let f=0;f!==u;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,s=this._actionsByClip,a=s[n];if(a!==void 0){const l=a.knownActions;for(let c=0,u=l.length;c!==u;++c){const f=l[c];this._deactivateAction(f);const d=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=d,e[d]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete s[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[e];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const s=this._bindingsByRootAndName,a=s[e];if(a!==void 0)for(const l in a){const c=a[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class RA extends zm{constructor(t=1,e=1,n=1,s={}){super(t,e,s),this.isRenderTarget3D=!0,this.depth=n,this.texture=new jh(null,t,e,n),this._setTextureOptions(s),this.texture.isRenderTargetTexture=!0}}class cg{constructor(t){this.value=t}clone(){return new cg(this.value.clone===void 0?this.value:this.value.clone())}}let DA=0;class UA extends us{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:DA++}),this.name="",this.usage=Xl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,s=e.length;n<s;n++){const a=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<a.length;l++)this.uniforms.push(a[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class NA extends $h{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class LA{constructor(t,e,n,s,a,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=s,this.count=a,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const S_=new re;class IS{constructor(t,e,n=0,s=1/0){this.ray=new Do(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new bo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return S_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(S_),this}intersectObject(t,e=!0,n=[]){return fm(t,this,n,e),n.sort(M_),n}intersectObjects(t,e=!0,n=[]){for(let s=0,a=t.length;s<a;s++)fm(t[s],this,n,e);return n.sort(M_),n}}function M_(i,t){return i.distance-t.distance}function fm(i,t,e,n){let s=!0;if(i.layers.test(t.layers)&&i.raycast(t,e)===!1&&(s=!1),s===!0&&n===!0){const a=i.children;for(let l=0,c=a.length;l<c;l++)fm(a[l],t,e,!0)}}class PA{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=de(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(de(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class IA{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class ug{constructor(t,e,n,s){ug.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,s)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,s){const a=this.elements;return a[0]=t,a[2]=e,a[1]=n,a[3]=s,this}}const b_=new pt;class OA{constructor(t=new pt(1/0,1/0),e=new pt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=b_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,b_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const E_=new B,Nu=new B;class zA{constructor(t=new B,e=new B){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){E_.subVectors(t,this.start),Nu.subVectors(this.end,this.start);const n=Nu.dot(Nu);let a=Nu.dot(E_)/n;return e&&(a=de(a,0,1)),a}closestPointToPoint(t,e,n){const s=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(s).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const T_=new B;class BA extends De{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new ve,s=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const f=l/u*Math.PI*2,d=c/u*Math.PI*2;s.push(Math.cos(f),Math.sin(f),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new qt(s,3));const a=new jn({fog:!1,toneMapped:!1});this.cone=new hs(n,a),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),T_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(T_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ar=new B,Lu=new re,Ep=new re;class FA extends hs{constructor(t){const e=OS(t),n=new ve,s=[],a=[],l=new Ot(0,0,1),c=new Ot(0,1,0);for(let f=0;f<e.length;f++){const d=e[f];d.parent&&d.parent.isBone&&(s.push(0,0,0),s.push(0,0,0),a.push(l.r,l.g,l.b),a.push(c.r,c.g,c.b))}n.setAttribute("position",new qt(s,3)),n.setAttribute("color",new qt(a,3));const u=new jn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,s=n.getAttribute("position");Ep.copy(this.root.matrixWorld).invert();for(let a=0,l=0;a<e.length;a++){const c=e[a];c.parent&&c.parent.isBone&&(Lu.multiplyMatrices(Ep,c.matrixWorld),ar.setFromMatrixPosition(Lu),s.setXYZ(l,ar.x,ar.y,ar.z),Lu.multiplyMatrices(Ep,c.parent.matrixWorld),ar.setFromMatrixPosition(Lu),s.setXYZ(l+1,ar.x,ar.y,ar.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function OS(i){const t=[];i.isBone===!0&&t.push(i);for(let e=0;e<i.children.length;e++)t.push(...OS(i.children[e]));return t}class HA extends fn{constructor(t,e,n){const s=new lc(e,4,2),a=new vr({wireframe:!0,fog:!1,toneMapped:!1});super(s,a),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const VA=new B,A_=new Ot,w_=new Ot;class GA extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const s=new oc(e);s.rotateY(Math.PI*.5),this.material=new vr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const a=s.getAttribute("position"),l=new Float32Array(a.count*3);s.setAttribute("color",new ke(l,3)),this.add(new fn(s,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");A_.copy(this.light.color),w_.copy(this.light.groundColor);for(let n=0,s=e.count;n<s;n++){const a=n<s/2?A_:w_;e.setXYZ(n,a.r,a.g,a.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(VA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class kA extends hs{constructor(t=10,e=10,n=4473924,s=8947848){n=new Ot(n),s=new Ot(s);const a=e/2,l=t/e,c=t/2,u=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){u.push(-c,0,x,c,0,x),u.push(x,0,-c,x,0,c);const M=g===a?n:s;M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3}const d=new ve;d.setAttribute("position",new qt(u,3)),d.setAttribute("color",new qt(f,3));const m=new jn({vertexColors:!0,toneMapped:!1});super(d,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class WA extends hs{constructor(t=10,e=16,n=8,s=64,a=4473924,l=8947848){a=new Ot(a),l=new Ot(l);const c=[],u=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const M=m&1?a:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const g=m&1?a:l,v=t-t/n*m;for(let x=0;x<s;x++){let M=x/s*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v;c.push(S,0,_),u.push(g.r,g.g,g.b),M=(x+1)/s*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v,c.push(S,0,_),u.push(g.r,g.g,g.b)}}const f=new ve;f.setAttribute("position",new qt(c,3)),f.setAttribute("color",new qt(u,3));const d=new jn({vertexColors:!0,toneMapped:!1});super(f,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const C_=new B,Pu=new B,R_=new B;class XA extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let s=new ve;s.setAttribute("position",new qt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const a=new jn({fog:!1,toneMapped:!1});this.lightPlane=new mr(s,a),this.add(this.lightPlane),s=new ve,s.setAttribute("position",new qt([0,0,0,0,0,1],3)),this.targetLine=new mr(s,a),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),C_.setFromMatrixPosition(this.light.matrixWorld),Pu.setFromMatrixPosition(this.light.target.matrixWorld),R_.subVectors(Pu,C_),this.lightPlane.lookAt(Pu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Pu),this.targetLine.scale.z=R_.length()}}const Iu=new B,sn=new Kh;class qA extends hs{constructor(t){const e=new ve,n=new jn({color:16777215,vertexColors:!0,toneMapped:!1}),s=[],a=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){u(x),u(M)}function u(x){s.push(0,0,0),a.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(s.length/3-1)}e.setAttribute("position",new qt(s,3)),e.setAttribute("color",new qt(a,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Ot(16755200),d=new Ot(16711680),m=new Ot(43775),g=new Ot(16777215),v=new Ot(3355443);this.setColors(f,d,m,g,v)}setColors(t,e,n,s,a){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,s.r,s.g,s.b),c.setXYZ(39,s.r,s.g,s.b),c.setXYZ(40,a.r,a.g,a.b),c.setXYZ(41,a.r,a.g,a.b),c.setXYZ(42,a.r,a.g,a.b),c.setXYZ(43,a.r,a.g,a.b),c.setXYZ(44,a.r,a.g,a.b),c.setXYZ(45,a.r,a.g,a.b),c.setXYZ(46,a.r,a.g,a.b),c.setXYZ(47,a.r,a.g,a.b),c.setXYZ(48,a.r,a.g,a.b),c.setXYZ(49,a.r,a.g,a.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,s=1;sn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const a=this.camera.coordinateSystem===Ui?-1:0;an("c",e,t,sn,0,0,a),an("t",e,t,sn,0,0,1),an("n1",e,t,sn,-1,-1,a),an("n2",e,t,sn,n,-1,a),an("n3",e,t,sn,-1,s,a),an("n4",e,t,sn,n,s,a),an("f1",e,t,sn,-1,-1,1),an("f2",e,t,sn,n,-1,1),an("f3",e,t,sn,-1,s,1),an("f4",e,t,sn,n,s,1),an("u1",e,t,sn,n*.7,s*1.1,a),an("u2",e,t,sn,-1*.7,s*1.1,a),an("u3",e,t,sn,0,s*2,a),an("cf1",e,t,sn,-1,0,1),an("cf2",e,t,sn,n,0,1),an("cf3",e,t,sn,0,-1,1),an("cf4",e,t,sn,0,s,1),an("cn1",e,t,sn,-1,0,a),an("cn2",e,t,sn,n,0,a),an("cn3",e,t,sn,0,-1,a),an("cn4",e,t,sn,0,s,a),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function an(i,t,e,n,s,a,l){Iu.set(s,a,l).unproject(n);const c=t[i];if(c!==void 0){const u=e.getAttribute("position");for(let f=0,d=c.length;f<d;f++)u.setXYZ(c[f],Iu.x,Iu.y,Iu.z)}}const Ou=new Fn;class YA extends hs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),s=new Float32Array(8*3),a=new ve;a.setIndex(new ke(n,1)),a.setAttribute("position",new ke(s,3)),super(a,new jn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Ou.setFromObject(this.object),Ou.isEmpty())return;const t=Ou.min,e=Ou.max,n=this.geometry.attributes.position,s=n.array;s[0]=e.x,s[1]=e.y,s[2]=e.z,s[3]=t.x,s[4]=e.y,s[5]=e.z,s[6]=t.x,s[7]=t.y,s[8]=e.z,s[9]=e.x,s[10]=t.y,s[11]=e.z,s[12]=e.x,s[13]=e.y,s[14]=t.z,s[15]=t.x,s[16]=e.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=e.x,s[22]=t.y,s[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ZA extends hs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),s=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],a=new ve;a.setIndex(new ke(n,1)),a.setAttribute("position",new qt(s,3)),super(a,new jn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class jA extends mr{constructor(t,e=1,n=16776960){const s=n,a=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new ve;l.setAttribute("position",new qt(a,3)),l.computeBoundingSphere(),super(l,new jn({color:s,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ve;u.setAttribute("position",new qt(c,3)),u.computeBoundingSphere(),this.add(new fn(u,new vr({color:s,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const D_=new B;let zu,Tp;class KA extends De{constructor(t=new B(0,0,1),e=new B(0,0,0),n=1,s=16776960,a=n*.2,l=a*.2){super(),this.type="ArrowHelper",zu===void 0&&(zu=new ve,zu.setAttribute("position",new qt([0,0,0,0,1,0],3)),Tp=new ac(.5,1,5,1),Tp.translate(0,-.5,0)),this.position.copy(e),this.line=new mr(zu,new jn({color:s,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new fn(Tp,new vr({color:s,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,a,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{D_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(D_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class JA extends hs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],s=new ve;s.setAttribute("position",new qt(e,3)),s.setAttribute("color",new qt(n,3));const a=new jn({vertexColors:!0,toneMapped:!1});super(s,a),this.type="AxesHelper"}setColors(t,e,n){const s=new Ot,a=this.geometry.attributes.color.array;return s.set(t),s.toArray(a,0),s.toArray(a,3),s.set(e),s.toArray(a,6),s.toArray(a,9),s.set(n),s.toArray(a,12),s.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class QA{constructor(){this.type="ShapePath",this.color=new Ot,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Lh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,s){return this.currentPath.quadraticCurveTo(t,e,n,s),this}bezierCurveTo(t,e,n,s,a,l){return this.currentPath.bezierCurveTo(t,e,n,s,a,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let A=0,T=_.length;A<T;A++){const U=_[A],R=new oa;R.curves=U.curves,E.push(R)}return E}function n(_,E){const A=E.length;let T=!1;for(let U=A-1,R=0;R<A;U=R++){let P=E[U],I=E[R],C=I.x-P.x,w=I.y-P.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(P=E[R],C=-C,I=E[U],w=-w),_.y<P.y||_.y>I.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const z=w*(_.x-P.x)-C*(_.y-P.y);if(z===0)return!0;if(z<0)continue;T=!T}}else{if(_.y!==P.y)continue;if(I.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=I.x)return!0}}return T}const s=Xi.isClockWise,a=this.subPaths;if(a.length===0)return[];let l,c,u;const f=[];if(a.length===1)return c=a[0],u=new oa,u.curves=c.curves,f.push(u),f;let d=!s(a[0].getPoints());d=t?!d:d;const m=[],g=[];let v=[],x=0,M;g[x]=void 0,v[x]=[];for(let _=0,E=a.length;_<E;_++)c=a[_],M=c.getPoints(),l=s(M),l=t?!l:l,l?(!d&&g[x]&&x++,g[x]={s:new oa,p:M},g[x].s.curves=c.curves,d&&x++,v[x]=[]):v[x].push({h:c,p:M[0]});if(!g[0])return e(a);if(g.length>1){let _=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const U=v[A];for(let R=0;R<U.length;R++){const P=U[R];let I=!0;for(let C=0;C<g.length;C++)n(P.p,g[C].p)&&(A!==C&&E++,I?(I=!1,m[C].push(P)):_=!0);I&&m[A].push(P)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){u=g[_].s,f.push(u),S=v[_];for(let A=0,T=S.length;A<T;A++)u.holes.push(S[A].h)}return f}}class $A extends us{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function t2(i,t){const e=i.image&&i.image.width?i.image.width/i.image.height:1;return e>t?(i.repeat.x=1,i.repeat.y=e/t,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2):(i.repeat.x=t/e,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0),i}function e2(i,t){const e=i.image&&i.image.width?i.image.width/i.image.height:1;return e>t?(i.repeat.x=t/e,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0):(i.repeat.x=1,i.repeat.y=e/t,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2),i}function n2(i){return i.repeat.x=1,i.repeat.y=1,i.offset.x=0,i.offset.y=0,i}function dm(i,t,e,n){const s=i2(n);switch(e){case Dm:return i*t;case Wh:return i*t/s.components*s.byteLength;case ic:return i*t/s.components*s.byteLength;case Nm:return i*t*2/s.components*s.byteLength;case Xh:return i*t*2/s.components*s.byteLength;case Um:return i*t*3/s.components*s.byteLength;case Bn:return i*t*4/s.components*s.byteLength;case qh:return i*t*4/s.components*s.byteLength;case wl:case Cl:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*8;case Rl:case Dl:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case sh:case ah:return Math.max(i,16)*Math.max(t,8)/4;case ih:case rh:return Math.max(i,8)*Math.max(t,8)/2;case oh:case lh:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*8;case ch:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case uh:return Math.floor((i+3)/4)*Math.floor((t+3)/4)*16;case hh:return Math.floor((i+4)/5)*Math.floor((t+3)/4)*16;case fh:return Math.floor((i+4)/5)*Math.floor((t+4)/5)*16;case dh:return Math.floor((i+5)/6)*Math.floor((t+4)/5)*16;case ph:return Math.floor((i+5)/6)*Math.floor((t+5)/6)*16;case mh:return Math.floor((i+7)/8)*Math.floor((t+4)/5)*16;case gh:return Math.floor((i+7)/8)*Math.floor((t+5)/6)*16;case vh:return Math.floor((i+7)/8)*Math.floor((t+7)/8)*16;case _h:return Math.floor((i+9)/10)*Math.floor((t+4)/5)*16;case yh:return Math.floor((i+9)/10)*Math.floor((t+5)/6)*16;case xh:return Math.floor((i+9)/10)*Math.floor((t+7)/8)*16;case Sh:return Math.floor((i+9)/10)*Math.floor((t+9)/10)*16;case Mh:return Math.floor((i+11)/12)*Math.floor((t+9)/10)*16;case bh:return Math.floor((i+11)/12)*Math.floor((t+11)/12)*16;case Ul:case Eh:case Th:return Math.ceil(i/4)*Math.ceil(t/4)*16;case Lm:case Ah:return Math.ceil(i/4)*Math.ceil(t/4)*8;case wh:case Ch:return Math.ceil(i/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function i2(i){switch(i){case Ni:case wm:return{byteLength:1,components:1};case _o:case Cm:case Ro:return{byteLength:2,components:1};case Gh:case kh:return{byteLength:2,components:4};case Os:case Vh:case ii:return{byteLength:4,components:1};case Rm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}class s2{static contain(t,e){return t2(t,e)}static cover(t,e){return e2(t,e)}static fill(t){return n2(t)}static getByteLength(t,e,n,s){return dm(t,e,n,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function zS(){let i=null,t=!1,e=null,n=null;function s(a,l){e(a,l),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(a){e=a},setContext:function(a){i=a}}}function r2(i){const t=new WeakMap;function e(c,u){const f=c.array,d=c.usage,m=f.byteLength,g=i.createBuffer();i.bindBuffer(u,g),i.bufferData(u,f,d),c.onUploadCallback();let v;if(f instanceof Float32Array)v=i.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=i.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=i.HALF_FLOAT:v=i.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=i.SHORT;else if(f instanceof Uint32Array)v=i.UNSIGNED_INT;else if(f instanceof Int32Array)v=i.INT;else if(f instanceof Int8Array)v=i.BYTE;else if(f instanceof Uint8Array)v=i.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,u,f){const d=u.array,m=u.updateRanges;if(i.bindBuffer(f,c),m.length===0)i.bufferSubData(f,0,d);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],M=m[v];M.start<=x.start+x.count+1?x.count=Math.max(x.count,M.start+M.count-x.start):(++g,m[g]=M)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const M=m[v];i.bufferSubData(f,M.start*d.BYTES_PER_ELEMENT,d,M.start,M.count)}u.clearUpdateRanges()}u.onUploadCallback()}function s(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=t.get(c);u&&(i.deleteBuffer(u.buffer),t.delete(c))}function l(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const d=t.get(c);(!d||d.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,u));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,u),f.version=c.version}}return{get:s,remove:a,update:l}}var a2=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,o2=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,l2=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,c2=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,u2=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,h2=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,f2=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,d2=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,p2=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,m2=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,g2=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,v2=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,_2=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,y2=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,x2=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,S2=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,M2=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,b2=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,E2=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,T2=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,A2=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,w2=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,C2=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,R2=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,D2=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,U2=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,N2=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,L2=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,P2=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,I2=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,O2="gl_FragColor = linearToOutputTexel( gl_FragColor );",z2=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,B2=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,F2=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,H2=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,V2=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,G2=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,k2=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,W2=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,X2=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,q2=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Y2=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Z2=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,j2=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,K2=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,J2=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Q2=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,$2=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,tw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,ew=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,nw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,iw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,sw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,rw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,aw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,ow=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,lw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,cw=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,uw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,hw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,fw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,dw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,pw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,mw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,vw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,_w=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,yw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,xw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Sw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Mw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,bw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Ew=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Tw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Aw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,ww=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Cw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Rw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Dw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Uw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Nw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Lw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Pw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Iw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Ow=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,zw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Bw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Fw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Hw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Vw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Gw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,kw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Ww=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Xw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Yw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Zw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,jw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Kw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Jw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$w=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,tC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,eC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,nC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,iC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,sC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const rC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,aC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,oC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,lC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,dC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,pC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,mC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,gC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,_C=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,xC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,EC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,TC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,AC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,wC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,CC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,RC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,DC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,UC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,NC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,PC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,IC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,OC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,zC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,BC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_e={alphahash_fragment:a2,alphahash_pars_fragment:o2,alphamap_fragment:l2,alphamap_pars_fragment:c2,alphatest_fragment:u2,alphatest_pars_fragment:h2,aomap_fragment:f2,aomap_pars_fragment:d2,batching_pars_vertex:p2,batching_vertex:m2,begin_vertex:g2,beginnormal_vertex:v2,bsdfs:_2,iridescence_fragment:y2,bumpmap_pars_fragment:x2,clipping_planes_fragment:S2,clipping_planes_pars_fragment:M2,clipping_planes_pars_vertex:b2,clipping_planes_vertex:E2,color_fragment:T2,color_pars_fragment:A2,color_pars_vertex:w2,color_vertex:C2,common:R2,cube_uv_reflection_fragment:D2,defaultnormal_vertex:U2,displacementmap_pars_vertex:N2,displacementmap_vertex:L2,emissivemap_fragment:P2,emissivemap_pars_fragment:I2,colorspace_fragment:O2,colorspace_pars_fragment:z2,envmap_fragment:B2,envmap_common_pars_fragment:F2,envmap_pars_fragment:H2,envmap_pars_vertex:V2,envmap_physical_pars_fragment:Q2,envmap_vertex:G2,fog_vertex:k2,fog_pars_vertex:W2,fog_fragment:X2,fog_pars_fragment:q2,gradientmap_pars_fragment:Y2,lightmap_pars_fragment:Z2,lights_lambert_fragment:j2,lights_lambert_pars_fragment:K2,lights_pars_begin:J2,lights_toon_fragment:$2,lights_toon_pars_fragment:tw,lights_phong_fragment:ew,lights_phong_pars_fragment:nw,lights_physical_fragment:iw,lights_physical_pars_fragment:sw,lights_fragment_begin:rw,lights_fragment_maps:aw,lights_fragment_end:ow,logdepthbuf_fragment:lw,logdepthbuf_pars_fragment:cw,logdepthbuf_pars_vertex:uw,logdepthbuf_vertex:hw,map_fragment:fw,map_pars_fragment:dw,map_particle_fragment:pw,map_particle_pars_fragment:mw,metalnessmap_fragment:gw,metalnessmap_pars_fragment:vw,morphinstance_vertex:_w,morphcolor_vertex:yw,morphnormal_vertex:xw,morphtarget_pars_vertex:Sw,morphtarget_vertex:Mw,normal_fragment_begin:bw,normal_fragment_maps:Ew,normal_pars_fragment:Tw,normal_pars_vertex:Aw,normal_vertex:ww,normalmap_pars_fragment:Cw,clearcoat_normal_fragment_begin:Rw,clearcoat_normal_fragment_maps:Dw,clearcoat_pars_fragment:Uw,iridescence_pars_fragment:Nw,opaque_fragment:Lw,packing:Pw,premultiplied_alpha_fragment:Iw,project_vertex:Ow,dithering_fragment:zw,dithering_pars_fragment:Bw,roughnessmap_fragment:Fw,roughnessmap_pars_fragment:Hw,shadowmap_pars_fragment:Vw,shadowmap_pars_vertex:Gw,shadowmap_vertex:kw,shadowmask_pars_fragment:Ww,skinbase_vertex:Xw,skinning_pars_vertex:qw,skinning_vertex:Yw,skinnormal_vertex:Zw,specularmap_fragment:jw,specularmap_pars_fragment:Kw,tonemapping_fragment:Jw,tonemapping_pars_fragment:Qw,transmission_fragment:$w,transmission_pars_fragment:tC,uv_pars_fragment:eC,uv_pars_vertex:nC,uv_vertex:iC,worldpos_vertex:sC,background_vert:rC,background_frag:aC,backgroundCube_vert:oC,backgroundCube_frag:lC,cube_vert:cC,cube_frag:uC,depth_vert:hC,depth_frag:fC,distanceRGBA_vert:dC,distanceRGBA_frag:pC,equirect_vert:mC,equirect_frag:gC,linedashed_vert:vC,linedashed_frag:_C,meshbasic_vert:yC,meshbasic_frag:xC,meshlambert_vert:SC,meshlambert_frag:MC,meshmatcap_vert:bC,meshmatcap_frag:EC,meshnormal_vert:TC,meshnormal_frag:AC,meshphong_vert:wC,meshphong_frag:CC,meshphysical_vert:RC,meshphysical_frag:DC,meshtoon_vert:UC,meshtoon_frag:NC,points_vert:LC,points_frag:PC,shadow_vert:IC,shadow_frag:OC,sprite_vert:zC,sprite_frag:BC},Ut={common:{diffuse:{value:new Ot(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pe},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pe}},envmap:{envMap:{value:null},envMapRotation:{value:new pe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pe},normalScale:{value:new pt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ot(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ot(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0},uvTransform:{value:new pe}},sprite:{diffuse:{value:new Ot(16777215)},opacity:{value:1},center:{value:new pt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pe},alphaMap:{value:null},alphaMapTransform:{value:new pe},alphaTest:{value:0}}},Wi={basic:{uniforms:qn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.fog]),vertexShader:_e.meshbasic_vert,fragmentShader:_e.meshbasic_frag},lambert:{uniforms:qn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,Ut.lights,{emissive:{value:new Ot(0)}}]),vertexShader:_e.meshlambert_vert,fragmentShader:_e.meshlambert_frag},phong:{uniforms:qn([Ut.common,Ut.specularmap,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,Ut.lights,{emissive:{value:new Ot(0)},specular:{value:new Ot(1118481)},shininess:{value:30}}]),vertexShader:_e.meshphong_vert,fragmentShader:_e.meshphong_frag},standard:{uniforms:qn([Ut.common,Ut.envmap,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.roughnessmap,Ut.metalnessmap,Ut.fog,Ut.lights,{emissive:{value:new Ot(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_e.meshphysical_vert,fragmentShader:_e.meshphysical_frag},toon:{uniforms:qn([Ut.common,Ut.aomap,Ut.lightmap,Ut.emissivemap,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.gradientmap,Ut.fog,Ut.lights,{emissive:{value:new Ot(0)}}]),vertexShader:_e.meshtoon_vert,fragmentShader:_e.meshtoon_frag},matcap:{uniforms:qn([Ut.common,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,Ut.fog,{matcap:{value:null}}]),vertexShader:_e.meshmatcap_vert,fragmentShader:_e.meshmatcap_frag},points:{uniforms:qn([Ut.points,Ut.fog]),vertexShader:_e.points_vert,fragmentShader:_e.points_frag},dashed:{uniforms:qn([Ut.common,Ut.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_e.linedashed_vert,fragmentShader:_e.linedashed_frag},depth:{uniforms:qn([Ut.common,Ut.displacementmap]),vertexShader:_e.depth_vert,fragmentShader:_e.depth_frag},normal:{uniforms:qn([Ut.common,Ut.bumpmap,Ut.normalmap,Ut.displacementmap,{opacity:{value:1}}]),vertexShader:_e.meshnormal_vert,fragmentShader:_e.meshnormal_frag},sprite:{uniforms:qn([Ut.sprite,Ut.fog]),vertexShader:_e.sprite_vert,fragmentShader:_e.sprite_frag},background:{uniforms:{uvTransform:{value:new pe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:_e.background_vert,fragmentShader:_e.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new pe}},vertexShader:_e.backgroundCube_vert,fragmentShader:_e.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_e.cube_vert,fragmentShader:_e.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_e.equirect_vert,fragmentShader:_e.equirect_frag},distanceRGBA:{uniforms:qn([Ut.common,Ut.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_e.distanceRGBA_vert,fragmentShader:_e.distanceRGBA_frag},shadow:{uniforms:qn([Ut.lights,Ut.fog,{color:{value:new Ot(0)},opacity:{value:1}}]),vertexShader:_e.shadow_vert,fragmentShader:_e.shadow_frag}};Wi.physical={uniforms:qn([Wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pe},clearcoatNormalScale:{value:new pt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pe},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pe},sheen:{value:0},sheenColor:{value:new Ot(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pe},transmissionSamplerSize:{value:new pt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pe},attenuationDistance:{value:0},attenuationColor:{value:new Ot(0)},specularColor:{value:new Ot(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pe},anisotropyVector:{value:new pt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pe}}]),vertexShader:_e.meshphysical_vert,fragmentShader:_e.meshphysical_frag};const Bu={r:0,b:0,g:0},Jr=new qi,FC=new re;function HC(i,t,e,n,s,a,l){const c=new Ot(0);let u=a===!0?0:1,f,d,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function M(A){let T=!1;const U=x(A);U===null?_(c,u):U&&U.isColor&&(_(U,1),T=!0);const R=i.xr.getEnvironmentBlendMode();R==="additive"?n.buffers.color.setClear(0,0,0,1,l):R==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(i.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function S(A,T){const U=x(T);U&&(U.isCubeTexture||U.mapping===Co)?(d===void 0&&(d=new fn(new fa(1,1,1),new Yi({name:"BackgroundCubeMaterial",uniforms:Eo(Wi.backgroundCube.uniforms),vertexShader:Wi.backgroundCube.vertexShader,fragmentShader:Wi.backgroundCube.fragmentShader,side:Zn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(R,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(d)),Jr.copy(T.backgroundRotation),Jr.x*=-1,Jr.y*=-1,Jr.z*=-1,U.isCubeTexture&&U.isRenderTargetTexture===!1&&(Jr.y*=-1,Jr.z*=-1),d.material.uniforms.envMap.value=U,d.material.uniforms.flipEnvMap.value=U.isCubeTexture&&U.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(FC.makeRotationFromEuler(Jr)),d.material.toneMapped=Te.getTransfer(U.colorSpace)!==He,(m!==U||g!==U.version||v!==i.toneMapping)&&(d.material.needsUpdate=!0,m=U,g=U.version,v=i.toneMapping),d.layers.enableAll(),A.unshift(d,d.geometry,d.material,0,0,null)):U&&U.isTexture&&(f===void 0&&(f=new fn(new No(2,2),new Yi({name:"BackgroundMaterial",uniforms:Eo(Wi.background.uniforms),vertexShader:Wi.background.vertexShader,fragmentShader:Wi.background.fragmentShader,side:Ps,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(f)),f.material.uniforms.t2D.value=U,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Te.getTransfer(U.colorSpace)!==He,U.matrixAutoUpdate===!0&&U.updateMatrix(),f.material.uniforms.uvTransform.value.copy(U.matrix),(m!==U||g!==U.version||v!==i.toneMapping)&&(f.material.needsUpdate=!0,m=U,g=U.version,v=i.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function _(A,T){A.getRGB(Bu,Ox(i)),n.buffers.color.setClear(Bu.r,Bu.g,Bu.b,T,l)}function E(){d!==void 0&&(d.geometry.dispose(),d.material.dispose(),d=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),u=T,_(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(A){u=A,_(c,u)},render:M,addToRenderList:S,dispose:E}}function VC(i,t){const e=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},s=g(null);let a=s,l=!1;function c(w,z,Z,k,W){let rt=!1;const H=m(k,Z,z);a!==H&&(a=H,f(a.object)),rt=v(w,k,Z,W),rt&&x(w,k,Z,W),W!==null&&t.update(W,i.ELEMENT_ARRAY_BUFFER),(rt||l)&&(l=!1,T(w,z,Z,k),W!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.get(W).buffer))}function u(){return i.createVertexArray()}function f(w){return i.bindVertexArray(w)}function d(w){return i.deleteVertexArray(w)}function m(w,z,Z){const k=Z.wireframe===!0;let W=n[w.id];W===void 0&&(W={},n[w.id]=W);let rt=W[z.id];rt===void 0&&(rt={},W[z.id]=rt);let H=rt[k];return H===void 0&&(H=g(u()),rt[k]=H),H}function g(w){const z=[],Z=[],k=[];for(let W=0;W<e;W++)z[W]=0,Z[W]=0,k[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:Z,attributeDivisors:k,object:w,attributes:{},index:null}}function v(w,z,Z,k){const W=a.attributes,rt=z.attributes;let H=0;const Y=Z.getAttributes();for(const G in Y)if(Y[G].location>=0){const lt=W[G];let mt=rt[G];if(mt===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(mt=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(mt=w.instanceColor)),lt===void 0||lt.attribute!==mt||mt&&lt.data!==mt.data)return!0;H++}return a.attributesNum!==H||a.index!==k}function x(w,z,Z,k){const W={},rt=z.attributes;let H=0;const Y=Z.getAttributes();for(const G in Y)if(Y[G].location>=0){let lt=rt[G];lt===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(lt=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(lt=w.instanceColor));const mt={};mt.attribute=lt,lt&&lt.data&&(mt.data=lt.data),W[G]=mt,H++}a.attributes=W,a.attributesNum=H,a.index=k}function M(){const w=a.newAttributes;for(let z=0,Z=w.length;z<Z;z++)w[z]=0}function S(w){_(w,0)}function _(w,z){const Z=a.newAttributes,k=a.enabledAttributes,W=a.attributeDivisors;Z[w]=1,k[w]===0&&(i.enableVertexAttribArray(w),k[w]=1),W[w]!==z&&(i.vertexAttribDivisor(w,z),W[w]=z)}function E(){const w=a.newAttributes,z=a.enabledAttributes;for(let Z=0,k=z.length;Z<k;Z++)z[Z]!==w[Z]&&(i.disableVertexAttribArray(Z),z[Z]=0)}function A(w,z,Z,k,W,rt,H){H===!0?i.vertexAttribIPointer(w,z,Z,W,rt):i.vertexAttribPointer(w,z,Z,k,W,rt)}function T(w,z,Z,k){M();const W=k.attributes,rt=Z.getAttributes(),H=z.defaultAttributeValues;for(const Y in rt){const G=rt[Y];if(G.location>=0){let st=W[Y];if(st===void 0&&(Y==="instanceMatrix"&&w.instanceMatrix&&(st=w.instanceMatrix),Y==="instanceColor"&&w.instanceColor&&(st=w.instanceColor)),st!==void 0){const lt=st.normalized,mt=st.itemSize,wt=t.get(st);if(wt===void 0)continue;const jt=wt.buffer,$=wt.type,gt=wt.bytesPerElement,Wt=$===i.INT||$===i.UNSIGNED_INT||st.gpuType===Vh;if(st.isInterleavedBufferAttribute){const Dt=st.data,Vt=Dt.stride,fe=st.offset;if(Dt.isInstancedInterleavedBuffer){for(let Jt=0;Jt<G.locationSize;Jt++)_(G.location+Jt,Dt.meshPerAttribute);w.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=Dt.meshPerAttribute*Dt.count)}else for(let Jt=0;Jt<G.locationSize;Jt++)S(G.location+Jt);i.bindBuffer(i.ARRAY_BUFFER,jt);for(let Jt=0;Jt<G.locationSize;Jt++)A(G.location+Jt,mt/G.locationSize,$,lt,Vt*gt,(fe+mt/G.locationSize*Jt)*gt,Wt)}else{if(st.isInstancedBufferAttribute){for(let Dt=0;Dt<G.locationSize;Dt++)_(G.location+Dt,st.meshPerAttribute);w.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=st.meshPerAttribute*st.count)}else for(let Dt=0;Dt<G.locationSize;Dt++)S(G.location+Dt);i.bindBuffer(i.ARRAY_BUFFER,jt);for(let Dt=0;Dt<G.locationSize;Dt++)A(G.location+Dt,mt/G.locationSize,$,lt,mt*gt,mt/G.locationSize*Dt*gt,Wt)}}else if(H!==void 0){const lt=H[Y];if(lt!==void 0)switch(lt.length){case 2:i.vertexAttrib2fv(G.location,lt);break;case 3:i.vertexAttrib3fv(G.location,lt);break;case 4:i.vertexAttrib4fv(G.location,lt);break;default:i.vertexAttrib1fv(G.location,lt)}}}}E()}function U(){I();for(const w in n){const z=n[w];for(const Z in z){const k=z[Z];for(const W in k)d(k[W].object),delete k[W];delete z[Z]}delete n[w]}}function R(w){if(n[w.id]===void 0)return;const z=n[w.id];for(const Z in z){const k=z[Z];for(const W in k)d(k[W].object),delete k[W];delete z[Z]}delete n[w.id]}function P(w){for(const z in n){const Z=n[z];if(Z[w.id]===void 0)continue;const k=Z[w.id];for(const W in k)d(k[W].object),delete k[W];delete Z[w.id]}}function I(){C(),l=!0,a!==s&&(a=s,f(a.object))}function C(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:c,reset:I,resetDefaultState:C,dispose:U,releaseStatesOfGeometry:R,releaseStatesOfProgram:P,initAttributes:M,enableAttribute:S,disableUnusedAttributes:E}}function GC(i,t,e){let n;function s(f){n=f}function a(f,d){i.drawArrays(n,f,d),e.update(d,n,1)}function l(f,d,m){m!==0&&(i.drawArraysInstanced(n,f,d,m),e.update(d,n,m))}function c(f,d,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,d,0,m);let v=0;for(let x=0;x<m;x++)v+=d[x];e.update(v,n,1)}function u(f,d,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],d[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,d,0,g,0,m);let x=0;for(let M=0;M<m;M++)x+=d[M]*g[M];e.update(x,n,1)}}this.setMode=s,this.render=a,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function kC(i,t,e,n){let s;function a(){if(s!==void 0)return s;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");s=i.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function l(P){return!(P!==Bn&&n.convert(P)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const I=P===Ro&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Ni&&n.convert(P)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ii&&!I)}function u(P){if(P==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const d=u(f);d!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",d,"instead."),f=d);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),x=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=i.getParameter(i.MAX_TEXTURE_SIZE),S=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),E=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),A=i.getParameter(i.MAX_VARYING_VECTORS),T=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),U=x>0,R=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:a,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:M,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:U,maxSamples:R}}function WC(i){const t=this;let e=null,n=0,s=!1,a=!1;const l=new or,c=new pe,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||s;return s=g,n=m.length,v},this.beginShadows=function(){a=!0,d(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(m,g){e=d(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,M=m.clipIntersection,S=m.clipShadows,_=i.get(m);if(!s||x===null||x.length===0||a&&!S)a?d(null):f();else{const E=a?0:n,A=E*4;let T=_.clippingState||null;u.value=T,T=d(x,g,A,v);for(let U=0;U!==A;++U)T[U]=e[U];_.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function f(){u.value!==e&&(u.value=e,u.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function d(m,g,v,x){const M=m!==null?m.length:0;let S=null;if(M!==0){if(S=u.value,x!==!0||S===null){const _=v+M*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==M;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}u.value=S,u.needsUpdate=!0}return t.numPlanes=M,t.numIntersection=0,S}}function XC(i){let t=new WeakMap;function e(l,c){return c===Bl?l.mapping=Is:c===Fl&&(l.mapping=dr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Bl||c===Fl)if(t.has(l)){const u=t.get(l).texture;return e(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const f=new Fx(u.height);return f.fromEquirectangularTexture(i,l),t.set(l,f),l.addEventListener("dispose",s),e(f.texture,l.mapping)}else return null}}return l}function s(l){const c=l.target;c.removeEventListener("dispose",s);const u=t.get(c);u!==void 0&&(t.delete(c),u.dispose())}function a(){t=new WeakMap}return{get:n,dispose:a}}const mo=4,U_=[.125,.215,.35,.446,.526,.582],ea=20,Ap=new hc,N_=new Ot;let wp=null,Cp=0,Rp=0,Dp=!1;const ta=(1+Math.sqrt(5))/2,ao=1/ta,L_=[new B(-ta,ao,0),new B(ta,ao,0),new B(-ao,0,ta),new B(ao,0,ta),new B(0,ta,-ao),new B(0,ta,ao),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)],qC=new B;class pm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100,a={}){const{size:l=256,position:c=qC}=a;wp=this._renderer.getRenderTarget(),Cp=this._renderer.getActiveCubeFace(),Rp=this._renderer.getActiveMipmapLevel(),Dp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(t,n,s,u,c),e>0&&this._blur(u,0,0,e),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=O_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=I_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(wp,Cp,Rp),this._renderer.xr.enabled=Dp,t.scissorTest=!1,Fu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Is||t.mapping===dr?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),wp=this._renderer.getRenderTarget(),Cp=this._renderer.getActiveCubeFace(),Rp=this._renderer.getActiveMipmapLevel(),Dp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:pn,minFilter:pn,generateMipmaps:!1,type:Ro,format:Bn,colorSpace:pr,depthBuffer:!1},s=P_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=P_(t,e,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=YC(a)),this._blurMaterial=ZC(a,t,e)}return s}_compileMaterial(t){const e=new fn(this._lodPlanes[0],t);this._renderer.compile(e,Ap)}_sceneToCubeUV(t,e,n,s,a){const u=new Sn(90,1,e,n),f=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(N_),m.toneMapping=os,m.autoClear=!1;const x=new vr({name:"PMREM.Background",side:Zn,depthWrite:!1,depthTest:!1}),M=new fn(new fa,x);let S=!1;const _=t.background;_?_.isColor&&(x.color.copy(_),t.background=null,S=!0):(x.color.copy(N_),S=!0);for(let E=0;E<6;E++){const A=E%3;A===0?(u.up.set(0,f[E],0),u.position.set(a.x,a.y,a.z),u.lookAt(a.x+d[E],a.y,a.z)):A===1?(u.up.set(0,0,f[E]),u.position.set(a.x,a.y,a.z),u.lookAt(a.x,a.y+d[E],a.z)):(u.up.set(0,f[E],0),u.position.set(a.x,a.y,a.z),u.lookAt(a.x,a.y,a.z+d[E]));const T=this._cubeSize;Fu(s,A*T,E>2?T:0,T,T),m.setRenderTarget(s),S&&m.render(M,u),m.render(t,u)}M.geometry.dispose(),M.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=_}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===Is||t.mapping===dr;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=O_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=I_());const a=s?this._cubemapMaterial:this._equirectMaterial,l=new fn(this._lodPlanes[0],a),c=a.uniforms;c.envMap.value=t;const u=this._cubeSize;Fu(e,0,0,3*u,2*u),n.setRenderTarget(e),n.render(l,Ap)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const s=this._lodPlanes.length;for(let a=1;a<s;a++){const l=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),c=L_[(s-a-1)%L_.length];this._blur(t,a-1,a,l,c)}e.autoClear=n}_blur(t,e,n,s,a){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,s,"latitudinal",a),this._halfBlur(l,t,n,n,s,"longitudinal",a)}_halfBlur(t,e,n,s,a,l,c){const u=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,m=new fn(this._lodPlanes[s],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(a)?Math.PI/(2*v):2*Math.PI/(2*ea-1),M=a/x,S=isFinite(a)?1+Math.floor(d*M):ea;S>ea&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${ea}`);const _=[];let E=0;for(let P=0;P<ea;++P){const I=P/M,C=Math.exp(-I*I/2);_.push(C),P===0?E+=C:P<S&&(E+=2*C)}for(let P=0;P<_.length;P++)_[P]=_[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[s],U=3*T*(s>A-mo?s-A+mo:0),R=4*(this._cubeSize-T);Fu(e,U,R,3*T,2*T),u.setRenderTarget(e),u.render(m,Ap)}}function YC(i){const t=[],e=[],n=[];let s=i;const a=i-mo+1+U_.length;for(let l=0;l<a;l++){const c=Math.pow(2,s);e.push(c);let u=1/c;l>i-mo?u=U_[l-i+mo-1]:l===0&&(u=0),n.push(u);const f=1/(c-2),d=-f,m=1+f,g=[d,d,m,d,m,m,d,d,m,m,d,m],v=6,x=6,M=3,S=2,_=1,E=new Float32Array(M*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let R=0;R<v;R++){const P=R%3*2/3-1,I=R>2?0:-1,C=[P,I,0,P+2/3,I,0,P+2/3,I+1,0,P,I,0,P+2/3,I+1,0,P,I+1,0];E.set(C,M*x*R),A.set(g,S*x*R);const w=[R,R,R,R,R,R];T.set(w,_*x*R)}const U=new ve;U.setAttribute("position",new ke(E,M)),U.setAttribute("uv",new ke(A,S)),U.setAttribute("faceIndex",new ke(T,_)),t.push(U),s>mo&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function P_(i,t,e){const n=new cs(i,t,e);return n.texture.mapping=Co,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Fu(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function ZC(i,t,e){const n=new Float32Array(ea),s=new B(0,1,0);return new Yi({name:"SphericalGaussianBlur",defines:{n:ea,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function I_(){return new Yi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function O_(){return new Yi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function hg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function jC(i){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const u=c.mapping,f=u===Bl||u===Fl,d=u===Is||u===dr;if(f||d){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new pm(i)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||d&&v&&s(v)?(e===null&&(e=new pm(i)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",a),m.texture):null}}}return c}function s(c){let u=0;const f=6;for(let d=0;d<f;d++)c[d]!==void 0&&u++;return u===f}function a(c){const u=c.target;u.removeEventListener("dispose",a);const f=t.get(u);f!==void 0&&(t.delete(u),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function KC(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const s=e(n);return s===null&&go("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function JC(i,t,e,n){const s={},a=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete s[g.id];const v=a.get(g);v&&(t.remove(v),a.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return s[g.id]===!0||(g.addEventListener("dispose",l),s[g.id]=!0,e.memory.geometries++),g}function u(m){const g=m.attributes;for(const v in g)t.update(g[v],i.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let M=0;if(v!==null){const E=v.array;M=v.version;for(let A=0,T=E.length;A<T;A+=3){const U=E[A+0],R=E[A+1],P=E[A+2];g.push(U,R,R,P,P,U)}}else if(x!==void 0){const E=x.array;M=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const U=A+0,R=A+1,P=A+2;g.push(U,R,R,P,P,U)}}else return;const S=new(Ux(g)?Fm:Bm)(g,1);S.version=M;const _=a.get(m);_&&t.remove(_),a.set(m,S)}function d(m){const g=a.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return a.get(m)}return{get:c,update:u,getWireframeAttribute:d}}function QC(i,t,e){let n;function s(g){n=g}let a,l;function c(g){a=g.type,l=g.bytesPerElement}function u(g,v){i.drawElements(n,v,a,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(i.drawElementsInstanced(n,v,a,g*l,x),e.update(v,n,x))}function d(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,a,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,M){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],M[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,a,g,0,M,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*M[E];e.update(_,n,1)}}this.setMode=s,this.setIndex=c,this.render=u,this.renderInstances=f,this.renderMultiDraw=d,this.renderMultiDrawInstances=m}function $C(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,l,c){switch(e.calls++,l){case i.TRIANGLES:e.triangles+=c*(a/3);break;case i.LINES:e.lines+=c*(a/2);break;case i.LINE_STRIP:e.lines+=c*(a-1);break;case i.LINE_LOOP:e.lines+=c*a;break;case i.POINTS:e.points+=c*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function s(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function tR(i,t,e){const n=new WeakMap,s=new Re;function a(l,c,u){const f=l.morphTargetInfluences,d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=d!==void 0?d.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),M===!0&&(A=3);let T=c.attributes.position.count*A,U=1;T>t.maxTextureSize&&(U=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const R=new Float32Array(T*U*4*m),P=new Zh(R,T,U,m);P.type=ii,P.needsUpdate=!0;const I=A*4;for(let w=0;w<m;w++){const z=S[w],Z=_[w],k=E[w],W=T*U*4*w;for(let rt=0;rt<z.count;rt++){const H=rt*I;v===!0&&(s.fromBufferAttribute(z,rt),R[W+H+0]=s.x,R[W+H+1]=s.y,R[W+H+2]=s.z,R[W+H+3]=0),x===!0&&(s.fromBufferAttribute(Z,rt),R[W+H+4]=s.x,R[W+H+5]=s.y,R[W+H+6]=s.z,R[W+H+7]=0),M===!0&&(s.fromBufferAttribute(k,rt),R[W+H+8]=s.x,R[W+H+9]=s.y,R[W+H+10]=s.z,R[W+H+11]=k.itemSize===4?s.w:1)}}g={count:m,texture:P,size:new pt(T,U)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",l.morphTexture,e);else{let v=0;for(let M=0;M<f.length;M++)v+=f[M];const x=c.morphTargetsRelative?1:1-v;u.getUniforms().setValue(i,"morphTargetBaseInfluence",x),u.getUniforms().setValue(i,"morphTargetInfluences",f)}u.getUniforms().setValue(i,"morphTargetsTexture",g.texture,e),u.getUniforms().setValue(i,"morphTargetsTextureSize",g.size)}return{update:a}}function eR(i,t,e,n){let s=new WeakMap;function a(u){const f=n.render.frame,d=u.geometry,m=t.get(u,d);if(s.get(m)!==f&&(t.update(m),s.set(m,f)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),s.get(u)!==f&&(e.update(u.instanceMatrix,i.ARRAY_BUFFER),u.instanceColor!==null&&e.update(u.instanceColor,i.ARRAY_BUFFER),s.set(u,f))),u.isSkinnedMesh){const g=u.skeleton;s.get(g)!==f&&(g.update(),s.set(g,f))}return m}function l(){s=new WeakMap}function c(u){const f=u.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:a,dispose:l}}const BS=new rn,z_=new Wm(1,1),FS=new Zh,HS=new jh,VS=new sc,B_=[],F_=[],H_=new Float32Array(16),V_=new Float32Array(9),G_=new Float32Array(4);function Lo(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let a=B_[s];if(a===void 0&&(a=new Float32Array(s),B_[s]=a),t!==0){n.toArray(a,0);for(let l=1,c=0;l!==t;++l)c+=e,i[l].toArray(a,c)}return a}function mn(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function gn(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function _f(i,t){let e=F_[t];e===void 0&&(e=new Int32Array(t),F_[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function nR(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function iR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;i.uniform2fv(this.addr,t),gn(e,t)}}function sR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(mn(e,t))return;i.uniform3fv(this.addr,t),gn(e,t)}}function rR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;i.uniform4fv(this.addr,t),gn(e,t)}}function aR(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;G_.set(n),i.uniformMatrix2fv(this.addr,!1,G_),gn(e,n)}}function oR(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;V_.set(n),i.uniformMatrix3fv(this.addr,!1,V_),gn(e,n)}}function lR(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(mn(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),gn(e,t)}else{if(mn(e,n))return;H_.set(n),i.uniformMatrix4fv(this.addr,!1,H_),gn(e,n)}}function cR(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function uR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;i.uniform2iv(this.addr,t),gn(e,t)}}function hR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(mn(e,t))return;i.uniform3iv(this.addr,t),gn(e,t)}}function fR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;i.uniform4iv(this.addr,t),gn(e,t)}}function dR(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function pR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(mn(e,t))return;i.uniform2uiv(this.addr,t),gn(e,t)}}function mR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(mn(e,t))return;i.uniform3uiv(this.addr,t),gn(e,t)}}function gR(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(mn(e,t))return;i.uniform4uiv(this.addr,t),gn(e,t)}}function vR(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);let a;this.type===i.SAMPLER_2D_SHADOW?(z_.compareFunction=Im,a=z_):a=BS,e.setTexture2D(t||a,s)}function _R(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||HS,s)}function yR(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||VS,s)}function xR(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||FS,s)}function SR(i){switch(i){case 5126:return nR;case 35664:return iR;case 35665:return sR;case 35666:return rR;case 35674:return aR;case 35675:return oR;case 35676:return lR;case 5124:case 35670:return cR;case 35667:case 35671:return uR;case 35668:case 35672:return hR;case 35669:case 35673:return fR;case 5125:return dR;case 36294:return pR;case 36295:return mR;case 36296:return gR;case 35678:case 36198:case 36298:case 36306:case 35682:return vR;case 35679:case 36299:case 36307:return _R;case 35680:case 36300:case 36308:case 36293:return yR;case 36289:case 36303:case 36311:case 36292:return xR}}function MR(i,t){i.uniform1fv(this.addr,t)}function bR(i,t){const e=Lo(t,this.size,2);i.uniform2fv(this.addr,e)}function ER(i,t){const e=Lo(t,this.size,3);i.uniform3fv(this.addr,e)}function TR(i,t){const e=Lo(t,this.size,4);i.uniform4fv(this.addr,e)}function AR(i,t){const e=Lo(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function wR(i,t){const e=Lo(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function CR(i,t){const e=Lo(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function RR(i,t){i.uniform1iv(this.addr,t)}function DR(i,t){i.uniform2iv(this.addr,t)}function UR(i,t){i.uniform3iv(this.addr,t)}function NR(i,t){i.uniform4iv(this.addr,t)}function LR(i,t){i.uniform1uiv(this.addr,t)}function PR(i,t){i.uniform2uiv(this.addr,t)}function IR(i,t){i.uniform3uiv(this.addr,t)}function OR(i,t){i.uniform4uiv(this.addr,t)}function zR(i,t,e){const n=this.cache,s=t.length,a=_f(e,s);mn(n,a)||(i.uniform1iv(this.addr,a),gn(n,a));for(let l=0;l!==s;++l)e.setTexture2D(t[l]||BS,a[l])}function BR(i,t,e){const n=this.cache,s=t.length,a=_f(e,s);mn(n,a)||(i.uniform1iv(this.addr,a),gn(n,a));for(let l=0;l!==s;++l)e.setTexture3D(t[l]||HS,a[l])}function FR(i,t,e){const n=this.cache,s=t.length,a=_f(e,s);mn(n,a)||(i.uniform1iv(this.addr,a),gn(n,a));for(let l=0;l!==s;++l)e.setTextureCube(t[l]||VS,a[l])}function HR(i,t,e){const n=this.cache,s=t.length,a=_f(e,s);mn(n,a)||(i.uniform1iv(this.addr,a),gn(n,a));for(let l=0;l!==s;++l)e.setTexture2DArray(t[l]||FS,a[l])}function VR(i){switch(i){case 5126:return MR;case 35664:return bR;case 35665:return ER;case 35666:return TR;case 35674:return AR;case 35675:return wR;case 35676:return CR;case 5124:case 35670:return RR;case 35667:case 35671:return DR;case 35668:case 35672:return UR;case 35669:case 35673:return NR;case 5125:return LR;case 36294:return PR;case 36295:return IR;case 36296:return OR;case 35678:case 36198:case 36298:case 36306:case 35682:return zR;case 35679:case 36299:case 36307:return BR;case 35680:case 36300:case 36308:case 36293:return FR;case 36289:case 36303:case 36311:case 36292:return HR}}class GR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=SR(e.type)}}class kR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=VR(e.type)}}class WR{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let a=0,l=s.length;a!==l;++a){const c=s[a];c.setValue(t,e[c.id],n)}}}const Up=/(\w+)(\])?(\[|\.)?/g;function k_(i,t){i.seq.push(t),i.map[t.id]=t}function XR(i,t,e){const n=i.name,s=n.length;for(Up.lastIndex=0;;){const a=Up.exec(n),l=Up.lastIndex;let c=a[1];const u=a[2]==="]",f=a[3];if(u&&(c=c|0),f===void 0||f==="["&&l+2===s){k_(e,f===void 0?new GR(c,i,t):new kR(c,i,t));break}else{let m=e.map[c];m===void 0&&(m=new WR(c),k_(e,m)),e=m}}}class Xu{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const a=t.getActiveUniform(e,s),l=t.getUniformLocation(e,a.name);XR(a,l,this)}}setValue(t,e,n,s){const a=this.map[e];a!==void 0&&a.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let a=0,l=e.length;a!==l;++a){const c=e[a],u=n[c.id];u.needsUpdate!==!1&&c.setValue(t,u.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,a=t.length;s!==a;++s){const l=t[s];l.id in e&&n.push(l)}return n}}function W_(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}const qR=37297;let YR=0;function ZR(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),a=Math.min(t+6,e.length);for(let l=s;l<a;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const X_=new pe;function jR(i){Te._getMatrix(X_,Te.workingColorSpace,i);const t=`mat3( ${X_.elements.map(e=>e.toFixed(4))} )`;switch(Te.getTransfer(i)){case Wl:return[t,"LinearTransferOETF"];case He:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[t,"LinearTransferOETF"]}}function q_(i,t,e){const n=i.getShaderParameter(t,i.COMPILE_STATUS),s=i.getShaderInfoLog(t).trim();if(n&&s==="")return"";const a=/ERROR: 0:(\d+)/.exec(s);if(a){const l=parseInt(a[1]);return e.toUpperCase()+`

`+s+`

`+ZR(i.getShaderSource(t),l)}else return s}function KR(i,t){const e=jR(t);return[`vec4 ${i}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function JR(i,t){let e;switch(t){case hx:e="Linear";break;case fx:e="Reinhard";break;case dx:e="Cineon";break;case Tm:e="ACESFilmic";break;case mx:e="AgX";break;case gx:e="Neutral";break;case px:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Hu=new B;function QR(){Te.getLuminanceCoefficients(Hu);const i=Hu.x.toFixed(4),t=Hu.y.toFixed(4),e=Hu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function $R(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(El).join(`
`)}function t3(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function e3(i,t){const e={},n=i.getProgramParameter(t,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const a=i.getActiveAttrib(t,s),l=a.name;let c=1;a.type===i.FLOAT_MAT2&&(c=2),a.type===i.FLOAT_MAT3&&(c=3),a.type===i.FLOAT_MAT4&&(c=4),e[l]={type:a.type,location:i.getAttribLocation(t,l),locationSize:c}}return e}function El(i){return i!==""}function Y_(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Z_(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const n3=/^[ \t]*#include +<([\w\d./]+)>/gm;function mm(i){return i.replace(n3,s3)}const i3=new Map;function s3(i,t){let e=_e[t];if(e===void 0){const n=i3.get(t);if(n!==void 0)e=_e[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return mm(e)}const r3=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function j_(i){return i.replace(r3,a3)}function a3(i,t,e,n){let s="";for(let a=parseInt(t);a<parseInt(e);a++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return s}function K_(i){let t=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function o3(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Fh?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===Tl?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===ki&&(t="SHADOWMAP_TYPE_VSM"),t}function l3(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Is:case dr:t="ENVMAP_TYPE_CUBE";break;case Co:t="ENVMAP_TYPE_CUBE_UV";break}return t}function c3(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case dr:t="ENVMAP_MODE_REFRACTION";break}return t}function u3(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case nc:t="ENVMAP_BLENDING_MULTIPLY";break;case cx:t="ENVMAP_BLENDING_MIX";break;case ux:t="ENVMAP_BLENDING_ADD";break}return t}function h3(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function f3(i,t,e,n){const s=i.getContext(),a=e.defines;let l=e.vertexShader,c=e.fragmentShader;const u=o3(e),f=l3(e),d=c3(e),m=u3(e),g=h3(e),v=$R(e),x=t3(a),M=s.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(El).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(El).join(`
`),_.length>0&&(_+=`
`)):(S=[K_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+d:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+u:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(El).join(`
`),_=[K_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+d:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+u:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==os?"#define TONE_MAPPING":"",e.toneMapping!==os?_e.tonemapping_pars_fragment:"",e.toneMapping!==os?JR("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",_e.colorspace_pars_fragment,KR("linearToOutputTexel",e.outputColorSpace),QR(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(El).join(`
`)),l=mm(l),l=Y_(l,e),l=Z_(l,e),c=mm(c),c=Y_(c,e),c=Z_(c,e),l=j_(l),c=j_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===am?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===am?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=E+S+l,T=E+_+c,U=W_(s,s.VERTEX_SHADER,A),R=W_(s,s.FRAGMENT_SHADER,T);s.attachShader(M,U),s.attachShader(M,R),e.index0AttributeName!==void 0?s.bindAttribLocation(M,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(M,0,"position"),s.linkProgram(M);function P(z){if(i.debug.checkShaderErrors){const Z=s.getProgramInfoLog(M).trim(),k=s.getShaderInfoLog(U).trim(),W=s.getShaderInfoLog(R).trim();let rt=!0,H=!0;if(s.getProgramParameter(M,s.LINK_STATUS)===!1)if(rt=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,M,U,R);else{const Y=q_(s,U,"vertex"),G=q_(s,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(M,s.VALIDATE_STATUS)+`

Material Name: `+z.name+`
Material Type: `+z.type+`

Program Info Log: `+Z+`
`+Y+`
`+G)}else Z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Z):(k===""||W==="")&&(H=!1);H&&(z.diagnostics={runnable:rt,programLog:Z,vertexShader:{log:k,prefix:S},fragmentShader:{log:W,prefix:_}})}s.deleteShader(U),s.deleteShader(R),I=new Xu(s,M),C=e3(s,M)}let I;this.getUniforms=function(){return I===void 0&&P(this),I};let C;this.getAttributes=function(){return C===void 0&&P(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=s.getProgramParameter(M,qR)),w},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(M),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=YR++,this.cacheKey=t,this.usedTimes=1,this.program=M,this.vertexShader=U,this.fragmentShader=R,this}let d3=0;class p3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),a=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(s)===!1&&(l.add(s),s.usedTimes++),l.has(a)===!1&&(l.add(a),a.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new m3(t),e.set(t,n)),n}}class m3{constructor(t){this.id=d3++,this.code=t,this.usedTimes=0}}function g3(i,t,e,n,s,a,l){const c=new bo,u=new p3,f=new Set,d=[],m=s.logarithmicDepthBuffer,g=s.vertexTextures;let v=s.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,z,Z,k){const W=Z.fog,rt=k.geometry,H=C.isMeshStandardMaterial?Z.environment:null,Y=(C.isMeshStandardMaterial?e:t).get(C.envMap||H),G=Y&&Y.mapping===Co?Y.image.height:null,st=x[C.type];C.precision!==null&&(v=s.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const lt=rt.morphAttributes.position||rt.morphAttributes.normal||rt.morphAttributes.color,mt=lt!==void 0?lt.length:0;let wt=0;rt.morphAttributes.position!==void 0&&(wt=1),rt.morphAttributes.normal!==void 0&&(wt=2),rt.morphAttributes.color!==void 0&&(wt=3);let jt,$,gt,Wt;if(st){const Ae=Wi[st];jt=Ae.vertexShader,$=Ae.fragmentShader}else jt=C.vertexShader,$=C.fragmentShader,u.update(C),gt=u.getVertexShaderID(C),Wt=u.getFragmentShaderID(C);const Dt=i.getRenderTarget(),Vt=i.state.buffers.depth.getReversed(),fe=k.isInstancedMesh===!0,Jt=k.isBatchedMesh===!0,Pe=!!C.map,ye=!!C.matcap,le=!!Y,O=!!C.aoMap,Tt=!!C.lightMap,_t=!!C.bumpMap,bt=!!C.normalMap,ut=!!C.displacementMap,zt=!!C.emissiveMap,vt=!!C.metalnessMap,It=!!C.roughnessMap,ue=C.anisotropy>0,F=C.clearcoat>0,D=C.dispersion>0,Q=C.iridescence>0,at=C.sheen>0,dt=C.transmission>0,ot=ue&&!!C.anisotropyMap,Zt=F&&!!C.clearcoatMap,Ct=F&&!!C.clearcoatNormalMap,Gt=F&&!!C.clearcoatRoughnessMap,Yt=Q&&!!C.iridescenceMap,ft=Q&&!!C.iridescenceThicknessMap,Lt=at&&!!C.sheenColorMap,$t=at&&!!C.sheenRoughnessMap,te=!!C.specularMap,At=!!C.specularColorMap,ie=!!C.specularIntensityMap,X=dt&&!!C.transmissionMap,Nt=dt&&!!C.thicknessMap,yt=!!C.gradientMap,Ht=!!C.alphaMap,St=C.alphaTest>0,ht=!!C.alphaHash,Xt=!!C.extensions;let ae=os;C.toneMapped&&(Dt===null||Dt.isXRRenderTarget===!0)&&(ae=i.toneMapping);const Ie={shaderID:st,shaderType:C.type,shaderName:C.name,vertexShader:jt,fragmentShader:$,defines:C.defines,customVertexShaderID:gt,customFragmentShaderID:Wt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:Jt,batchingColor:Jt&&k._colorsTexture!==null,instancing:fe,instancingColor:fe&&k.instanceColor!==null,instancingMorph:fe&&k.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Dt===null?i.outputColorSpace:Dt.isXRRenderTarget===!0?Dt.texture.colorSpace:pr,alphaToCoverage:!!C.alphaToCoverage,map:Pe,matcap:ye,envMap:le,envMapMode:le&&Y.mapping,envMapCubeUVHeight:G,aoMap:O,lightMap:Tt,bumpMap:_t,normalMap:bt,displacementMap:g&&ut,emissiveMap:zt,normalMapObjectSpace:bt&&C.normalMapType===bx,normalMapTangentSpace:bt&&C.normalMapType===gr,metalnessMap:vt,roughnessMap:It,anisotropy:ue,anisotropyMap:ot,clearcoat:F,clearcoatMap:Zt,clearcoatNormalMap:Ct,clearcoatRoughnessMap:Gt,dispersion:D,iridescence:Q,iridescenceMap:Yt,iridescenceThicknessMap:ft,sheen:at,sheenColorMap:Lt,sheenRoughnessMap:$t,specularMap:te,specularColorMap:At,specularIntensityMap:ie,transmission:dt,transmissionMap:X,thicknessMap:Nt,gradientMap:yt,opaque:C.transparent===!1&&C.blending===ra&&C.alphaToCoverage===!1,alphaMap:Ht,alphaTest:St,alphaHash:ht,combine:C.combine,mapUv:Pe&&M(C.map.channel),aoMapUv:O&&M(C.aoMap.channel),lightMapUv:Tt&&M(C.lightMap.channel),bumpMapUv:_t&&M(C.bumpMap.channel),normalMapUv:bt&&M(C.normalMap.channel),displacementMapUv:ut&&M(C.displacementMap.channel),emissiveMapUv:zt&&M(C.emissiveMap.channel),metalnessMapUv:vt&&M(C.metalnessMap.channel),roughnessMapUv:It&&M(C.roughnessMap.channel),anisotropyMapUv:ot&&M(C.anisotropyMap.channel),clearcoatMapUv:Zt&&M(C.clearcoatMap.channel),clearcoatNormalMapUv:Ct&&M(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Gt&&M(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Yt&&M(C.iridescenceMap.channel),iridescenceThicknessMapUv:ft&&M(C.iridescenceThicknessMap.channel),sheenColorMapUv:Lt&&M(C.sheenColorMap.channel),sheenRoughnessMapUv:$t&&M(C.sheenRoughnessMap.channel),specularMapUv:te&&M(C.specularMap.channel),specularColorMapUv:At&&M(C.specularColorMap.channel),specularIntensityMapUv:ie&&M(C.specularIntensityMap.channel),transmissionMapUv:X&&M(C.transmissionMap.channel),thicknessMapUv:Nt&&M(C.thicknessMap.channel),alphaMapUv:Ht&&M(C.alphaMap.channel),vertexTangents:!!rt.attributes.tangent&&(bt||ue),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!rt.attributes.color&&rt.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!rt.attributes.uv&&(Pe||Ht),fog:!!W,useFog:C.fog===!0,fogExp2:!!W&&W.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Vt,skinning:k.isSkinnedMesh===!0,morphTargets:rt.morphAttributes.position!==void 0,morphNormals:rt.morphAttributes.normal!==void 0,morphColors:rt.morphAttributes.color!==void 0,morphTargetsCount:mt,morphTextureStride:wt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:i.shadowMap.enabled&&z.length>0,shadowMapType:i.shadowMap.type,toneMapping:ae,decodeVideoTexture:Pe&&C.map.isVideoTexture===!0&&Te.getTransfer(C.map.colorSpace)===He,decodeVideoTextureEmissive:zt&&C.emissiveMap.isVideoTexture===!0&&Te.getTransfer(C.emissiveMap.colorSpace)===He,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===ss,flipSided:C.side===Zn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Xt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Xt&&C.extensions.multiDraw===!0||Jt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Ie.vertexUv1s=f.has(1),Ie.vertexUv2s=f.has(2),Ie.vertexUv3s=f.has(3),f.clear(),Ie}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const z in C.defines)w.push(z),w.push(C.defines[z]);return C.isRawShaderMaterial===!1&&(E(w,C),A(w,C),w.push(i.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function A(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const w=x[C.type];let z;if(w){const Z=Wi[w];z=zx.clone(Z.uniforms)}else z=C.uniforms;return z}function U(C,w){let z;for(let Z=0,k=d.length;Z<k;Z++){const W=d[Z];if(W.cacheKey===w){z=W,++z.usedTimes;break}}return z===void 0&&(z=new f3(i,w,C,a),d.push(z)),z}function R(C){if(--C.usedTimes===0){const w=d.indexOf(C);d[w]=d[d.length-1],d.pop(),C.destroy()}}function P(C){u.remove(C)}function I(){u.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:U,releaseProgram:R,releaseShaderCache:P,programs:d,dispose:I}}function v3(){let i=new WeakMap;function t(l){return i.has(l)}function e(l){let c=i.get(l);return c===void 0&&(c={},i.set(l,c)),c}function n(l){i.delete(l)}function s(l,c,u){i.get(l)[c]=u}function a(){i=new WeakMap}return{has:t,get:e,remove:n,update:s,dispose:a}}function _3(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function J_(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function Q_(){const i=[];let t=0;const e=[],n=[],s=[];function a(){t=0,e.length=0,n.length=0,s.length=0}function l(m,g,v,x,M,S){let _=i[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:M,group:S},i[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=M,_.group=S),t++,_}function c(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.push(_):v.transparent===!0?s.push(_):e.push(_)}function u(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.unshift(_):v.transparent===!0?s.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||_3),n.length>1&&n.sort(g||J_),s.length>1&&s.sort(g||J_)}function d(){for(let m=t,g=i.length;m<g;m++){const v=i[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:s,init:a,push:c,unshift:u,finish:d,sort:f}}function y3(){let i=new WeakMap;function t(n,s){const a=i.get(n);let l;return a===void 0?(l=new Q_,i.set(n,[l])):s>=a.length?(l=new Q_,a.push(l)):l=a[s],l}function e(){i=new WeakMap}return{get:t,dispose:e}}function x3(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new B,color:new Ot};break;case"SpotLight":e={position:new B,direction:new B,color:new Ot,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new B,color:new Ot,distance:0,decay:0};break;case"HemisphereLight":e={direction:new B,skyColor:new Ot,groundColor:new Ot};break;case"RectAreaLight":e={color:new Ot,position:new B,halfWidth:new B,halfHeight:new B};break}return i[t.id]=e,e}}}function S3(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let M3=0;function b3(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function E3(i){const t=new x3,e=S3(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new B);const s=new B,a=new re,l=new re;function c(f){let d=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,M=0,S=0,_=0,E=0,A=0,T=0,U=0,R=0,P=0;f.sort(b3);for(let C=0,w=f.length;C<w;C++){const z=f[C],Z=z.color,k=z.intensity,W=z.distance,rt=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)d+=Z.r*k,m+=Z.g*k,g+=Z.b*k;else if(z.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(z.sh.coefficients[H],k);P++}else if(z.isDirectionalLight){const H=t.get(z);if(H.color.copy(z.color).multiplyScalar(z.intensity),z.castShadow){const Y=z.shadow,G=e.get(z);G.shadowIntensity=Y.intensity,G.shadowBias=Y.bias,G.shadowNormalBias=Y.normalBias,G.shadowRadius=Y.radius,G.shadowMapSize=Y.mapSize,n.directionalShadow[v]=G,n.directionalShadowMap[v]=rt,n.directionalShadowMatrix[v]=z.shadow.matrix,E++}n.directional[v]=H,v++}else if(z.isSpotLight){const H=t.get(z);H.position.setFromMatrixPosition(z.matrixWorld),H.color.copy(Z).multiplyScalar(k),H.distance=W,H.coneCos=Math.cos(z.angle),H.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),H.decay=z.decay,n.spot[M]=H;const Y=z.shadow;if(z.map&&(n.spotLightMap[U]=z.map,U++,Y.updateMatrices(z),z.castShadow&&R++),n.spotLightMatrix[M]=Y.matrix,z.castShadow){const G=e.get(z);G.shadowIntensity=Y.intensity,G.shadowBias=Y.bias,G.shadowNormalBias=Y.normalBias,G.shadowRadius=Y.radius,G.shadowMapSize=Y.mapSize,n.spotShadow[M]=G,n.spotShadowMap[M]=rt,T++}M++}else if(z.isRectAreaLight){const H=t.get(z);H.color.copy(Z).multiplyScalar(k),H.halfWidth.set(z.width*.5,0,0),H.halfHeight.set(0,z.height*.5,0),n.rectArea[S]=H,S++}else if(z.isPointLight){const H=t.get(z);if(H.color.copy(z.color).multiplyScalar(z.intensity),H.distance=z.distance,H.decay=z.decay,z.castShadow){const Y=z.shadow,G=e.get(z);G.shadowIntensity=Y.intensity,G.shadowBias=Y.bias,G.shadowNormalBias=Y.normalBias,G.shadowRadius=Y.radius,G.shadowMapSize=Y.mapSize,G.shadowCameraNear=Y.camera.near,G.shadowCameraFar=Y.camera.far,n.pointShadow[x]=G,n.pointShadowMap[x]=rt,n.pointShadowMatrix[x]=z.shadow.matrix,A++}n.point[x]=H,x++}else if(z.isHemisphereLight){const H=t.get(z);H.skyColor.copy(z.color).multiplyScalar(k),H.groundColor.copy(z.groundColor).multiplyScalar(k),n.hemi[_]=H,_++}}S>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ut.LTC_FLOAT_1,n.rectAreaLTC2=Ut.LTC_FLOAT_2):(n.rectAreaLTC1=Ut.LTC_HALF_1,n.rectAreaLTC2=Ut.LTC_HALF_2)),n.ambient[0]=d,n.ambient[1]=m,n.ambient[2]=g;const I=n.hash;(I.directionalLength!==v||I.pointLength!==x||I.spotLength!==M||I.rectAreaLength!==S||I.hemiLength!==_||I.numDirectionalShadows!==E||I.numPointShadows!==A||I.numSpotShadows!==T||I.numSpotMaps!==U||I.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=M,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+U-R,n.spotLightMap.length=U,n.numSpotLightShadowsWithMaps=R,n.numLightProbes=P,I.directionalLength=v,I.pointLength=x,I.spotLength=M,I.rectAreaLength=S,I.hemiLength=_,I.numDirectionalShadows=E,I.numPointShadows=A,I.numSpotShadows=T,I.numSpotMaps=U,I.numLightProbes=P,n.version=M3++)}function u(f,d){let m=0,g=0,v=0,x=0,M=0;const S=d.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),a.copy(A.matrixWorld),a.premultiply(S),l.extractRotation(a),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),M++}}}return{setup:c,setupView:u,state:n}}function $_(i){const t=new E3(i),e=[],n=[];function s(d){f.camera=d,e.length=0,n.length=0}function a(d){e.push(d)}function l(d){n.push(d)}function c(){t.setup(e)}function u(d){t.setupView(e,d)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:s,state:f,setupLights:c,setupLightsView:u,pushLight:a,pushShadow:l}}function T3(i){let t=new WeakMap;function e(s,a=0){const l=t.get(s);let c;return l===void 0?(c=new $_(i),t.set(s,[c])):a>=l.length?(c=new $_(i),l.push(c)):c=l[a],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const A3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,w3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function C3(i,t,e){let n=new Uo;const s=new pt,a=new pt,l=new Re,c=new Qm({depthPacking:Mx}),u=new $m,f={},d=e.maxTextureSize,m={[Ps]:Zn,[Zn]:Ps,[ss]:ss},g=new Yi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pt},radius:{value:4}},vertexShader:A3,fragmentShader:w3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new ve;x.setAttribute("position",new ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new fn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Fh;let _=this.type;this.render=function(R,P,I){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||R.length===0)return;const C=i.getRenderTarget(),w=i.getActiveCubeFace(),z=i.getActiveMipmapLevel(),Z=i.state;Z.setBlending(Ns),Z.buffers.color.setClear(1,1,1,1),Z.buffers.depth.setTest(!0),Z.setScissorTest(!1);const k=_!==ki&&this.type===ki,W=_===ki&&this.type!==ki;for(let rt=0,H=R.length;rt<H;rt++){const Y=R[rt],G=Y.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;s.copy(G.mapSize);const st=G.getFrameExtents();if(s.multiply(st),a.copy(G.mapSize),(s.x>d||s.y>d)&&(s.x>d&&(a.x=Math.floor(d/st.x),s.x=a.x*st.x,G.mapSize.x=a.x),s.y>d&&(a.y=Math.floor(d/st.y),s.y=a.y*st.y,G.mapSize.y=a.y)),G.map===null||k===!0||W===!0){const mt=this.type!==ki?{minFilter:An,magFilter:An}:{};G.map!==null&&G.map.dispose(),G.map=new cs(s.x,s.y,mt),G.map.texture.name=Y.name+".shadowMap",G.camera.updateProjectionMatrix()}i.setRenderTarget(G.map),i.clear();const lt=G.getViewportCount();for(let mt=0;mt<lt;mt++){const wt=G.getViewport(mt);l.set(a.x*wt.x,a.y*wt.y,a.x*wt.z,a.y*wt.w),Z.viewport(l),G.updateMatrices(Y,mt),n=G.getFrustum(),T(P,I,G.camera,Y,this.type)}G.isPointLightShadow!==!0&&this.type===ki&&E(G,I),G.needsUpdate=!1}_=this.type,S.needsUpdate=!1,i.setRenderTarget(C,w,z)};function E(R,P){const I=t.update(M);g.defines.VSM_SAMPLES!==R.blurSamples&&(g.defines.VSM_SAMPLES=R.blurSamples,v.defines.VSM_SAMPLES=R.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new cs(s.x,s.y)),g.uniforms.shadow_pass.value=R.map.texture,g.uniforms.resolution.value=R.mapSize,g.uniforms.radius.value=R.radius,i.setRenderTarget(R.mapPass),i.clear(),i.renderBufferDirect(P,null,I,g,M,null),v.uniforms.shadow_pass.value=R.mapPass.texture,v.uniforms.resolution.value=R.mapSize,v.uniforms.radius.value=R.radius,i.setRenderTarget(R.map),i.clear(),i.renderBufferDirect(P,null,I,v,M,null)}function A(R,P,I,C){let w=null;const z=I.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(z!==void 0)w=z;else if(w=I.isPointLight===!0?u:c,i.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const Z=w.uuid,k=P.uuid;let W=f[Z];W===void 0&&(W={},f[Z]=W);let rt=W[k];rt===void 0&&(rt=w.clone(),W[k]=rt,P.addEventListener("dispose",U)),w=rt}if(w.visible=P.visible,w.wireframe=P.wireframe,C===ki?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:m[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,I.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const Z=i.properties.get(w);Z.light=I}return w}function T(R,P,I,C,w){if(R.visible===!1)return;if(R.layers.test(P.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&w===ki)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,R.matrixWorld);const k=t.update(R),W=R.material;if(Array.isArray(W)){const rt=k.groups;for(let H=0,Y=rt.length;H<Y;H++){const G=rt[H],st=W[G.materialIndex];if(st&&st.visible){const lt=A(R,st,C,w);R.onBeforeShadow(i,R,P,I,k,lt,G),i.renderBufferDirect(I,null,k,lt,R,G),R.onAfterShadow(i,R,P,I,k,lt,G)}}}else if(W.visible){const rt=A(R,W,C,w);R.onBeforeShadow(i,R,P,I,k,rt,null),i.renderBufferDirect(I,null,k,rt,R,null),R.onAfterShadow(i,R,P,I,k,rt,null)}}const Z=R.children;for(let k=0,W=Z.length;k<W;k++)T(Z[k],P,I,C,w)}function U(R){R.target.removeEventListener("dispose",U);for(const I in f){const C=f[I],w=R.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const R3={[Ku]:Ju,[Qu]:eh,[$u]:nh,[la]:th,[Ju]:Ku,[eh]:Qu,[nh]:$u,[th]:la};function D3(i,t){function e(){let X=!1;const Nt=new Re;let yt=null;const Ht=new Re(0,0,0,0);return{setMask:function(St){yt!==St&&!X&&(i.colorMask(St,St,St,St),yt=St)},setLocked:function(St){X=St},setClear:function(St,ht,Xt,ae,Ie){Ie===!0&&(St*=ae,ht*=ae,Xt*=ae),Nt.set(St,ht,Xt,ae),Ht.equals(Nt)===!1&&(i.clearColor(St,ht,Xt,ae),Ht.copy(Nt))},reset:function(){X=!1,yt=null,Ht.set(-1,0,0,0)}}}function n(){let X=!1,Nt=!1,yt=null,Ht=null,St=null;return{setReversed:function(ht){if(Nt!==ht){const Xt=t.get("EXT_clip_control");ht?Xt.clipControlEXT(Xt.LOWER_LEFT_EXT,Xt.ZERO_TO_ONE_EXT):Xt.clipControlEXT(Xt.LOWER_LEFT_EXT,Xt.NEGATIVE_ONE_TO_ONE_EXT),Nt=ht;const ae=St;St=null,this.setClear(ae)}},getReversed:function(){return Nt},setTest:function(ht){ht?Dt(i.DEPTH_TEST):Vt(i.DEPTH_TEST)},setMask:function(ht){yt!==ht&&!X&&(i.depthMask(ht),yt=ht)},setFunc:function(ht){if(Nt&&(ht=R3[ht]),Ht!==ht){switch(ht){case Ku:i.depthFunc(i.NEVER);break;case Ju:i.depthFunc(i.ALWAYS);break;case Qu:i.depthFunc(i.LESS);break;case la:i.depthFunc(i.LEQUAL);break;case $u:i.depthFunc(i.EQUAL);break;case th:i.depthFunc(i.GEQUAL);break;case eh:i.depthFunc(i.GREATER);break;case nh:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}Ht=ht}},setLocked:function(ht){X=ht},setClear:function(ht){St!==ht&&(Nt&&(ht=1-ht),i.clearDepth(ht),St=ht)},reset:function(){X=!1,yt=null,Ht=null,St=null,Nt=!1}}}function s(){let X=!1,Nt=null,yt=null,Ht=null,St=null,ht=null,Xt=null,ae=null,Ie=null;return{setTest:function(Ae){X||(Ae?Dt(i.STENCIL_TEST):Vt(i.STENCIL_TEST))},setMask:function(Ae){Nt!==Ae&&!X&&(i.stencilMask(Ae),Nt=Ae)},setFunc:function(Ae,Kn,yi){(yt!==Ae||Ht!==Kn||St!==yi)&&(i.stencilFunc(Ae,Kn,yi),yt=Ae,Ht=Kn,St=yi)},setOp:function(Ae,Kn,yi){(ht!==Ae||Xt!==Kn||ae!==yi)&&(i.stencilOp(Ae,Kn,yi),ht=Ae,Xt=Kn,ae=yi)},setLocked:function(Ae){X=Ae},setClear:function(Ae){Ie!==Ae&&(i.clearStencil(Ae),Ie=Ae)},reset:function(){X=!1,Nt=null,yt=null,Ht=null,St=null,ht=null,Xt=null,ae=null,Ie=null}}}const a=new e,l=new n,c=new s,u=new WeakMap,f=new WeakMap;let d={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,E=null,A=null,T=null,U=null,R=null,P=new Ot(0,0,0),I=0,C=!1,w=null,z=null,Z=null,k=null,W=null;const rt=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,Y=0;const G=i.getParameter(i.VERSION);G.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL (\d)/.exec(G)[1]),H=Y>=1):G.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),H=Y>=2);let st=null,lt={};const mt=i.getParameter(i.SCISSOR_BOX),wt=i.getParameter(i.VIEWPORT),jt=new Re().fromArray(mt),$=new Re().fromArray(wt);function gt(X,Nt,yt,Ht){const St=new Uint8Array(4),ht=i.createTexture();i.bindTexture(X,ht),i.texParameteri(X,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(X,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let Xt=0;Xt<yt;Xt++)X===i.TEXTURE_3D||X===i.TEXTURE_2D_ARRAY?i.texImage3D(Nt,0,i.RGBA,1,1,Ht,0,i.RGBA,i.UNSIGNED_BYTE,St):i.texImage2D(Nt+Xt,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,St);return ht}const Wt={};Wt[i.TEXTURE_2D]=gt(i.TEXTURE_2D,i.TEXTURE_2D,1),Wt[i.TEXTURE_CUBE_MAP]=gt(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),Wt[i.TEXTURE_2D_ARRAY]=gt(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Wt[i.TEXTURE_3D]=gt(i.TEXTURE_3D,i.TEXTURE_3D,1,1),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Dt(i.DEPTH_TEST),l.setFunc(la),_t(!1),bt(tm),Dt(i.CULL_FACE),O(Ns);function Dt(X){d[X]!==!0&&(i.enable(X),d[X]=!0)}function Vt(X){d[X]!==!1&&(i.disable(X),d[X]=!1)}function fe(X,Nt){return m[X]!==Nt?(i.bindFramebuffer(X,Nt),m[X]=Nt,X===i.DRAW_FRAMEBUFFER&&(m[i.FRAMEBUFFER]=Nt),X===i.FRAMEBUFFER&&(m[i.DRAW_FRAMEBUFFER]=Nt),!0):!1}function Jt(X,Nt){let yt=v,Ht=!1;if(X){yt=g.get(Nt),yt===void 0&&(yt=[],g.set(Nt,yt));const St=X.textures;if(yt.length!==St.length||yt[0]!==i.COLOR_ATTACHMENT0){for(let ht=0,Xt=St.length;ht<Xt;ht++)yt[ht]=i.COLOR_ATTACHMENT0+ht;yt.length=St.length,Ht=!0}}else yt[0]!==i.BACK&&(yt[0]=i.BACK,Ht=!0);Ht&&i.drawBuffers(yt)}function Pe(X){return x!==X?(i.useProgram(X),x=X,!0):!1}const ye={[lr]:i.FUNC_ADD,[qy]:i.FUNC_SUBTRACT,[Yy]:i.FUNC_REVERSE_SUBTRACT};ye[Zy]=i.MIN,ye[jy]=i.MAX;const le={[Ky]:i.ZERO,[Jy]:i.ONE,[Qy]:i.SRC_COLOR,[Zu]:i.SRC_ALPHA,[sx]:i.SRC_ALPHA_SATURATE,[nx]:i.DST_COLOR,[tx]:i.DST_ALPHA,[$y]:i.ONE_MINUS_SRC_COLOR,[ju]:i.ONE_MINUS_SRC_ALPHA,[ix]:i.ONE_MINUS_DST_COLOR,[ex]:i.ONE_MINUS_DST_ALPHA,[rx]:i.CONSTANT_COLOR,[ax]:i.ONE_MINUS_CONSTANT_COLOR,[ox]:i.CONSTANT_ALPHA,[lx]:i.ONE_MINUS_CONSTANT_ALPHA};function O(X,Nt,yt,Ht,St,ht,Xt,ae,Ie,Ae){if(X===Ns){M===!0&&(Vt(i.BLEND),M=!1);return}if(M===!1&&(Dt(i.BLEND),M=!0),X!==Xy){if(X!==S||Ae!==C){if((_!==lr||T!==lr)&&(i.blendEquation(i.FUNC_ADD),_=lr,T=lr),Ae)switch(X){case ra:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case em:i.blendFunc(i.ONE,i.ONE);break;case nm:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case im:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case ra:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case em:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case nm:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case im:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}E=null,A=null,U=null,R=null,P.set(0,0,0),I=0,S=X,C=Ae}return}St=St||Nt,ht=ht||yt,Xt=Xt||Ht,(Nt!==_||St!==T)&&(i.blendEquationSeparate(ye[Nt],ye[St]),_=Nt,T=St),(yt!==E||Ht!==A||ht!==U||Xt!==R)&&(i.blendFuncSeparate(le[yt],le[Ht],le[ht],le[Xt]),E=yt,A=Ht,U=ht,R=Xt),(ae.equals(P)===!1||Ie!==I)&&(i.blendColor(ae.r,ae.g,ae.b,Ie),P.copy(ae),I=Ie),S=X,C=!1}function Tt(X,Nt){X.side===ss?Vt(i.CULL_FACE):Dt(i.CULL_FACE);let yt=X.side===Zn;Nt&&(yt=!yt),_t(yt),X.blending===ra&&X.transparent===!1?O(Ns):O(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.blendColor,X.blendAlpha,X.premultipliedAlpha),l.setFunc(X.depthFunc),l.setTest(X.depthTest),l.setMask(X.depthWrite),a.setMask(X.colorWrite);const Ht=X.stencilWrite;c.setTest(Ht),Ht&&(c.setMask(X.stencilWriteMask),c.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),c.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),zt(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?Dt(i.SAMPLE_ALPHA_TO_COVERAGE):Vt(i.SAMPLE_ALPHA_TO_COVERAGE)}function _t(X){w!==X&&(X?i.frontFace(i.CW):i.frontFace(i.CCW),w=X)}function bt(X){X!==Gy?(Dt(i.CULL_FACE),X!==z&&(X===tm?i.cullFace(i.BACK):X===ky?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Vt(i.CULL_FACE),z=X}function ut(X){X!==Z&&(H&&i.lineWidth(X),Z=X)}function zt(X,Nt,yt){X?(Dt(i.POLYGON_OFFSET_FILL),(k!==Nt||W!==yt)&&(i.polygonOffset(Nt,yt),k=Nt,W=yt)):Vt(i.POLYGON_OFFSET_FILL)}function vt(X){X?Dt(i.SCISSOR_TEST):Vt(i.SCISSOR_TEST)}function It(X){X===void 0&&(X=i.TEXTURE0+rt-1),st!==X&&(i.activeTexture(X),st=X)}function ue(X,Nt,yt){yt===void 0&&(st===null?yt=i.TEXTURE0+rt-1:yt=st);let Ht=lt[yt];Ht===void 0&&(Ht={type:void 0,texture:void 0},lt[yt]=Ht),(Ht.type!==X||Ht.texture!==Nt)&&(st!==yt&&(i.activeTexture(yt),st=yt),i.bindTexture(X,Nt||Wt[X]),Ht.type=X,Ht.texture=Nt)}function F(){const X=lt[st];X!==void 0&&X.type!==void 0&&(i.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function D(){try{i.compressedTexImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Q(){try{i.compressedTexImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function at(){try{i.texSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function dt(){try{i.texSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ot(){try{i.compressedTexSubImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Zt(){try{i.compressedTexSubImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Ct(){try{i.texStorage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Gt(){try{i.texStorage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Yt(){try{i.texImage2D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ft(){try{i.texImage3D(...arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Lt(X){jt.equals(X)===!1&&(i.scissor(X.x,X.y,X.z,X.w),jt.copy(X))}function $t(X){$.equals(X)===!1&&(i.viewport(X.x,X.y,X.z,X.w),$.copy(X))}function te(X,Nt){let yt=f.get(Nt);yt===void 0&&(yt=new WeakMap,f.set(Nt,yt));let Ht=yt.get(X);Ht===void 0&&(Ht=i.getUniformBlockIndex(Nt,X.name),yt.set(X,Ht))}function At(X,Nt){const Ht=f.get(Nt).get(X);u.get(Nt)!==Ht&&(i.uniformBlockBinding(Nt,Ht,X.__bindingPointIndex),u.set(Nt,Ht))}function ie(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),l.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},st=null,lt={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,E=null,A=null,T=null,U=null,R=null,P=new Ot(0,0,0),I=0,C=!1,w=null,z=null,Z=null,k=null,W=null,jt.set(0,0,i.canvas.width,i.canvas.height),$.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Dt,disable:Vt,bindFramebuffer:fe,drawBuffers:Jt,useProgram:Pe,setBlending:O,setMaterial:Tt,setFlipSided:_t,setCullFace:bt,setLineWidth:ut,setPolygonOffset:zt,setScissorTest:vt,activeTexture:It,bindTexture:ue,unbindTexture:F,compressedTexImage2D:D,compressedTexImage3D:Q,texImage2D:Yt,texImage3D:ft,updateUBOMapping:te,uniformBlockBinding:At,texStorage2D:Ct,texStorage3D:Gt,texSubImage2D:at,texSubImage3D:dt,compressedTexSubImage2D:ot,compressedTexSubImage3D:Zt,scissor:Lt,viewport:$t,reset:ie}}function U3(i,t,e,n,s,a,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new pt,d=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(F,D){return v?new OffscreenCanvas(F,D):Yl("canvas")}function M(F,D,Q){let at=1;const dt=ue(F);if((dt.width>Q||dt.height>Q)&&(at=Q/Math.max(dt.width,dt.height)),at<1)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap||typeof VideoFrame<"u"&&F instanceof VideoFrame){const ot=Math.floor(at*dt.width),Zt=Math.floor(at*dt.height);m===void 0&&(m=x(ot,Zt));const Ct=D?x(ot,Zt):m;return Ct.width=ot,Ct.height=Zt,Ct.getContext("2d").drawImage(F,0,0,ot,Zt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+dt.width+"x"+dt.height+") to ("+ot+"x"+Zt+")."),Ct}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+dt.width+"x"+dt.height+")."),F;return F}function S(F){return F.generateMipmaps}function _(F){i.generateMipmap(F)}function E(F){return F.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:F.isWebGL3DRenderTarget?i.TEXTURE_3D:F.isWebGLArrayRenderTarget||F.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function A(F,D,Q,at,dt=!1){if(F!==null){if(i[F]!==void 0)return i[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let ot=D;if(D===i.RED&&(Q===i.FLOAT&&(ot=i.R32F),Q===i.HALF_FLOAT&&(ot=i.R16F),Q===i.UNSIGNED_BYTE&&(ot=i.R8)),D===i.RED_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.R8UI),Q===i.UNSIGNED_SHORT&&(ot=i.R16UI),Q===i.UNSIGNED_INT&&(ot=i.R32UI),Q===i.BYTE&&(ot=i.R8I),Q===i.SHORT&&(ot=i.R16I),Q===i.INT&&(ot=i.R32I)),D===i.RG&&(Q===i.FLOAT&&(ot=i.RG32F),Q===i.HALF_FLOAT&&(ot=i.RG16F),Q===i.UNSIGNED_BYTE&&(ot=i.RG8)),D===i.RG_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.RG8UI),Q===i.UNSIGNED_SHORT&&(ot=i.RG16UI),Q===i.UNSIGNED_INT&&(ot=i.RG32UI),Q===i.BYTE&&(ot=i.RG8I),Q===i.SHORT&&(ot=i.RG16I),Q===i.INT&&(ot=i.RG32I)),D===i.RGB_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.RGB8UI),Q===i.UNSIGNED_SHORT&&(ot=i.RGB16UI),Q===i.UNSIGNED_INT&&(ot=i.RGB32UI),Q===i.BYTE&&(ot=i.RGB8I),Q===i.SHORT&&(ot=i.RGB16I),Q===i.INT&&(ot=i.RGB32I)),D===i.RGBA_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.RGBA8UI),Q===i.UNSIGNED_SHORT&&(ot=i.RGBA16UI),Q===i.UNSIGNED_INT&&(ot=i.RGBA32UI),Q===i.BYTE&&(ot=i.RGBA8I),Q===i.SHORT&&(ot=i.RGBA16I),Q===i.INT&&(ot=i.RGBA32I)),D===i.RGB&&Q===i.UNSIGNED_INT_5_9_9_9_REV&&(ot=i.RGB9_E5),D===i.RGBA){const Zt=dt?Wl:Te.getTransfer(at);Q===i.FLOAT&&(ot=i.RGBA32F),Q===i.HALF_FLOAT&&(ot=i.RGBA16F),Q===i.UNSIGNED_BYTE&&(ot=Zt===He?i.SRGB8_ALPHA8:i.RGBA8),Q===i.UNSIGNED_SHORT_4_4_4_4&&(ot=i.RGBA4),Q===i.UNSIGNED_SHORT_5_5_5_1&&(ot=i.RGB5_A1)}return(ot===i.R16F||ot===i.R32F||ot===i.RG16F||ot===i.RG32F||ot===i.RGBA16F||ot===i.RGBA32F)&&t.get("EXT_color_buffer_float"),ot}function T(F,D){let Q;return F?D===null||D===Os||D===yo?Q=i.DEPTH24_STENCIL8:D===ii?Q=i.DEPTH32F_STENCIL8:D===_o&&(Q=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):D===null||D===Os||D===yo?Q=i.DEPTH_COMPONENT24:D===ii?Q=i.DEPTH_COMPONENT32F:D===_o&&(Q=i.DEPTH_COMPONENT16),Q}function U(F,D){return S(F)===!0||F.isFramebufferTexture&&F.minFilter!==An&&F.minFilter!==pn?Math.log2(Math.max(D.width,D.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?D.mipmaps.length:1}function R(F){const D=F.target;D.removeEventListener("dispose",R),I(D),D.isVideoTexture&&d.delete(D)}function P(F){const D=F.target;D.removeEventListener("dispose",P),w(D)}function I(F){const D=n.get(F);if(D.__webglInit===void 0)return;const Q=F.source,at=g.get(Q);if(at){const dt=at[D.__cacheKey];dt.usedTimes--,dt.usedTimes===0&&C(F),Object.keys(at).length===0&&g.delete(Q)}n.remove(F)}function C(F){const D=n.get(F);i.deleteTexture(D.__webglTexture);const Q=F.source,at=g.get(Q);delete at[D.__cacheKey],l.memory.textures--}function w(F){const D=n.get(F);if(F.depthTexture&&(F.depthTexture.dispose(),n.remove(F.depthTexture)),F.isWebGLCubeRenderTarget)for(let at=0;at<6;at++){if(Array.isArray(D.__webglFramebuffer[at]))for(let dt=0;dt<D.__webglFramebuffer[at].length;dt++)i.deleteFramebuffer(D.__webglFramebuffer[at][dt]);else i.deleteFramebuffer(D.__webglFramebuffer[at]);D.__webglDepthbuffer&&i.deleteRenderbuffer(D.__webglDepthbuffer[at])}else{if(Array.isArray(D.__webglFramebuffer))for(let at=0;at<D.__webglFramebuffer.length;at++)i.deleteFramebuffer(D.__webglFramebuffer[at]);else i.deleteFramebuffer(D.__webglFramebuffer);if(D.__webglDepthbuffer&&i.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&i.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer)for(let at=0;at<D.__webglColorRenderbuffer.length;at++)D.__webglColorRenderbuffer[at]&&i.deleteRenderbuffer(D.__webglColorRenderbuffer[at]);D.__webglDepthRenderbuffer&&i.deleteRenderbuffer(D.__webglDepthRenderbuffer)}const Q=F.textures;for(let at=0,dt=Q.length;at<dt;at++){const ot=n.get(Q[at]);ot.__webglTexture&&(i.deleteTexture(ot.__webglTexture),l.memory.textures--),n.remove(Q[at])}n.remove(F)}let z=0;function Z(){z=0}function k(){const F=z;return F>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+s.maxTextures),z+=1,F}function W(F){const D=[];return D.push(F.wrapS),D.push(F.wrapT),D.push(F.wrapR||0),D.push(F.magFilter),D.push(F.minFilter),D.push(F.anisotropy),D.push(F.internalFormat),D.push(F.format),D.push(F.type),D.push(F.generateMipmaps),D.push(F.premultiplyAlpha),D.push(F.flipY),D.push(F.unpackAlignment),D.push(F.colorSpace),D.join()}function rt(F,D){const Q=n.get(F);if(F.isVideoTexture&&vt(F),F.isRenderTargetTexture===!1&&F.version>0&&Q.__version!==F.version){const at=F.image;if(at===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(at.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Wt(Q,F,D);return}}e.bindTexture(i.TEXTURE_2D,Q.__webglTexture,i.TEXTURE0+D)}function H(F,D){const Q=n.get(F);if(F.version>0&&Q.__version!==F.version){Wt(Q,F,D);return}e.bindTexture(i.TEXTURE_2D_ARRAY,Q.__webglTexture,i.TEXTURE0+D)}function Y(F,D){const Q=n.get(F);if(F.version>0&&Q.__version!==F.version){Wt(Q,F,D);return}e.bindTexture(i.TEXTURE_3D,Q.__webglTexture,i.TEXTURE0+D)}function G(F,D){const Q=n.get(F);if(F.version>0&&Q.__version!==F.version){Dt(Q,F,D);return}e.bindTexture(i.TEXTURE_CUBE_MAP,Q.__webglTexture,i.TEXTURE0+D)}const st={[Hl]:i.REPEAT,[Di]:i.CLAMP_TO_EDGE,[Vl]:i.MIRRORED_REPEAT},lt={[An]:i.NEAREST,[Am]:i.NEAREST_MIPMAP_NEAREST,[ho]:i.NEAREST_MIPMAP_LINEAR,[pn]:i.LINEAR,[Al]:i.LINEAR_MIPMAP_NEAREST,[rs]:i.LINEAR_MIPMAP_LINEAR},mt={[Ex]:i.NEVER,[Dx]:i.ALWAYS,[Tx]:i.LESS,[Im]:i.LEQUAL,[Ax]:i.EQUAL,[Rx]:i.GEQUAL,[wx]:i.GREATER,[Cx]:i.NOTEQUAL};function wt(F,D){if(D.type===ii&&t.has("OES_texture_float_linear")===!1&&(D.magFilter===pn||D.magFilter===Al||D.magFilter===ho||D.magFilter===rs||D.minFilter===pn||D.minFilter===Al||D.minFilter===ho||D.minFilter===rs)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(F,i.TEXTURE_WRAP_S,st[D.wrapS]),i.texParameteri(F,i.TEXTURE_WRAP_T,st[D.wrapT]),(F===i.TEXTURE_3D||F===i.TEXTURE_2D_ARRAY)&&i.texParameteri(F,i.TEXTURE_WRAP_R,st[D.wrapR]),i.texParameteri(F,i.TEXTURE_MAG_FILTER,lt[D.magFilter]),i.texParameteri(F,i.TEXTURE_MIN_FILTER,lt[D.minFilter]),D.compareFunction&&(i.texParameteri(F,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(F,i.TEXTURE_COMPARE_FUNC,mt[D.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(D.magFilter===An||D.minFilter!==ho&&D.minFilter!==rs||D.type===ii&&t.has("OES_texture_float_linear")===!1)return;if(D.anisotropy>1||n.get(D).__currentAnisotropy){const Q=t.get("EXT_texture_filter_anisotropic");i.texParameterf(F,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,s.getMaxAnisotropy())),n.get(D).__currentAnisotropy=D.anisotropy}}}function jt(F,D){let Q=!1;F.__webglInit===void 0&&(F.__webglInit=!0,D.addEventListener("dispose",R));const at=D.source;let dt=g.get(at);dt===void 0&&(dt={},g.set(at,dt));const ot=W(D);if(ot!==F.__cacheKey){dt[ot]===void 0&&(dt[ot]={texture:i.createTexture(),usedTimes:0},l.memory.textures++,Q=!0),dt[ot].usedTimes++;const Zt=dt[F.__cacheKey];Zt!==void 0&&(dt[F.__cacheKey].usedTimes--,Zt.usedTimes===0&&C(D)),F.__cacheKey=ot,F.__webglTexture=dt[ot].texture}return Q}function $(F,D,Q){return Math.floor(Math.floor(F/Q)/D)}function gt(F,D,Q,at){const ot=F.updateRanges;if(ot.length===0)e.texSubImage2D(i.TEXTURE_2D,0,0,0,D.width,D.height,Q,at,D.data);else{ot.sort((ft,Lt)=>ft.start-Lt.start);let Zt=0;for(let ft=1;ft<ot.length;ft++){const Lt=ot[Zt],$t=ot[ft],te=Lt.start+Lt.count,At=$($t.start,D.width,4),ie=$(Lt.start,D.width,4);$t.start<=te+1&&At===ie&&$($t.start+$t.count-1,D.width,4)===At?Lt.count=Math.max(Lt.count,$t.start+$t.count-Lt.start):(++Zt,ot[Zt]=$t)}ot.length=Zt+1;const Ct=i.getParameter(i.UNPACK_ROW_LENGTH),Gt=i.getParameter(i.UNPACK_SKIP_PIXELS),Yt=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,D.width);for(let ft=0,Lt=ot.length;ft<Lt;ft++){const $t=ot[ft],te=Math.floor($t.start/4),At=Math.ceil($t.count/4),ie=te%D.width,X=Math.floor(te/D.width),Nt=At,yt=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,ie),i.pixelStorei(i.UNPACK_SKIP_ROWS,X),e.texSubImage2D(i.TEXTURE_2D,0,ie,X,Nt,yt,Q,at,D.data)}F.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,Ct),i.pixelStorei(i.UNPACK_SKIP_PIXELS,Gt),i.pixelStorei(i.UNPACK_SKIP_ROWS,Yt)}}function Wt(F,D,Q){let at=i.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(at=i.TEXTURE_2D_ARRAY),D.isData3DTexture&&(at=i.TEXTURE_3D);const dt=jt(F,D),ot=D.source;e.bindTexture(at,F.__webglTexture,i.TEXTURE0+Q);const Zt=n.get(ot);if(ot.version!==Zt.__version||dt===!0){e.activeTexture(i.TEXTURE0+Q);const Ct=Te.getPrimaries(Te.workingColorSpace),Gt=D.colorSpace===Ds?null:Te.getPrimaries(D.colorSpace),Yt=D.colorSpace===Ds||Ct===Gt?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,D.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,D.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Yt);let ft=M(D.image,!1,s.maxTextureSize);ft=It(D,ft);const Lt=a.convert(D.format,D.colorSpace),$t=a.convert(D.type);let te=A(D.internalFormat,Lt,$t,D.colorSpace,D.isVideoTexture);wt(at,D);let At;const ie=D.mipmaps,X=D.isVideoTexture!==!0,Nt=Zt.__version===void 0||dt===!0,yt=ot.dataReady,Ht=U(D,ft);if(D.isDepthTexture)te=T(D.format===So,D.type),Nt&&(X?e.texStorage2D(i.TEXTURE_2D,1,te,ft.width,ft.height):e.texImage2D(i.TEXTURE_2D,0,te,ft.width,ft.height,0,Lt,$t,null));else if(D.isDataTexture)if(ie.length>0){X&&Nt&&e.texStorage2D(i.TEXTURE_2D,Ht,te,ie[0].width,ie[0].height);for(let St=0,ht=ie.length;St<ht;St++)At=ie[St],X?yt&&e.texSubImage2D(i.TEXTURE_2D,St,0,0,At.width,At.height,Lt,$t,At.data):e.texImage2D(i.TEXTURE_2D,St,te,At.width,At.height,0,Lt,$t,At.data);D.generateMipmaps=!1}else X?(Nt&&e.texStorage2D(i.TEXTURE_2D,Ht,te,ft.width,ft.height),yt&&gt(D,ft,Lt,$t)):e.texImage2D(i.TEXTURE_2D,0,te,ft.width,ft.height,0,Lt,$t,ft.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){X&&Nt&&e.texStorage3D(i.TEXTURE_2D_ARRAY,Ht,te,ie[0].width,ie[0].height,ft.depth);for(let St=0,ht=ie.length;St<ht;St++)if(At=ie[St],D.format!==Bn)if(Lt!==null)if(X){if(yt)if(D.layerUpdates.size>0){const Xt=dm(At.width,At.height,D.format,D.type);for(const ae of D.layerUpdates){const Ie=At.data.subarray(ae*Xt/At.data.BYTES_PER_ELEMENT,(ae+1)*Xt/At.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,St,0,0,ae,At.width,At.height,1,Lt,Ie)}D.clearLayerUpdates()}else e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,St,0,0,0,At.width,At.height,ft.depth,Lt,At.data)}else e.compressedTexImage3D(i.TEXTURE_2D_ARRAY,St,te,At.width,At.height,ft.depth,0,At.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else X?yt&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,St,0,0,0,At.width,At.height,ft.depth,Lt,$t,At.data):e.texImage3D(i.TEXTURE_2D_ARRAY,St,te,At.width,At.height,ft.depth,0,Lt,$t,At.data)}else{X&&Nt&&e.texStorage2D(i.TEXTURE_2D,Ht,te,ie[0].width,ie[0].height);for(let St=0,ht=ie.length;St<ht;St++)At=ie[St],D.format!==Bn?Lt!==null?X?yt&&e.compressedTexSubImage2D(i.TEXTURE_2D,St,0,0,At.width,At.height,Lt,At.data):e.compressedTexImage2D(i.TEXTURE_2D,St,te,At.width,At.height,0,At.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):X?yt&&e.texSubImage2D(i.TEXTURE_2D,St,0,0,At.width,At.height,Lt,$t,At.data):e.texImage2D(i.TEXTURE_2D,St,te,At.width,At.height,0,Lt,$t,At.data)}else if(D.isDataArrayTexture)if(X){if(Nt&&e.texStorage3D(i.TEXTURE_2D_ARRAY,Ht,te,ft.width,ft.height,ft.depth),yt)if(D.layerUpdates.size>0){const St=dm(ft.width,ft.height,D.format,D.type);for(const ht of D.layerUpdates){const Xt=ft.data.subarray(ht*St/ft.data.BYTES_PER_ELEMENT,(ht+1)*St/ft.data.BYTES_PER_ELEMENT);e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,ht,ft.width,ft.height,1,Lt,$t,Xt)}D.clearLayerUpdates()}else e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,ft.width,ft.height,ft.depth,Lt,$t,ft.data)}else e.texImage3D(i.TEXTURE_2D_ARRAY,0,te,ft.width,ft.height,ft.depth,0,Lt,$t,ft.data);else if(D.isData3DTexture)X?(Nt&&e.texStorage3D(i.TEXTURE_3D,Ht,te,ft.width,ft.height,ft.depth),yt&&e.texSubImage3D(i.TEXTURE_3D,0,0,0,0,ft.width,ft.height,ft.depth,Lt,$t,ft.data)):e.texImage3D(i.TEXTURE_3D,0,te,ft.width,ft.height,ft.depth,0,Lt,$t,ft.data);else if(D.isFramebufferTexture){if(Nt)if(X)e.texStorage2D(i.TEXTURE_2D,Ht,te,ft.width,ft.height);else{let St=ft.width,ht=ft.height;for(let Xt=0;Xt<Ht;Xt++)e.texImage2D(i.TEXTURE_2D,Xt,te,St,ht,0,Lt,$t,null),St>>=1,ht>>=1}}else if(ie.length>0){if(X&&Nt){const St=ue(ie[0]);e.texStorage2D(i.TEXTURE_2D,Ht,te,St.width,St.height)}for(let St=0,ht=ie.length;St<ht;St++)At=ie[St],X?yt&&e.texSubImage2D(i.TEXTURE_2D,St,0,0,Lt,$t,At):e.texImage2D(i.TEXTURE_2D,St,te,Lt,$t,At);D.generateMipmaps=!1}else if(X){if(Nt){const St=ue(ft);e.texStorage2D(i.TEXTURE_2D,Ht,te,St.width,St.height)}yt&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,Lt,$t,ft)}else e.texImage2D(i.TEXTURE_2D,0,te,Lt,$t,ft);S(D)&&_(at),Zt.__version=ot.version,D.onUpdate&&D.onUpdate(D)}F.__version=D.version}function Dt(F,D,Q){if(D.image.length!==6)return;const at=jt(F,D),dt=D.source;e.bindTexture(i.TEXTURE_CUBE_MAP,F.__webglTexture,i.TEXTURE0+Q);const ot=n.get(dt);if(dt.version!==ot.__version||at===!0){e.activeTexture(i.TEXTURE0+Q);const Zt=Te.getPrimaries(Te.workingColorSpace),Ct=D.colorSpace===Ds?null:Te.getPrimaries(D.colorSpace),Gt=D.colorSpace===Ds||Zt===Ct?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,D.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,D.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Gt);const Yt=D.isCompressedTexture||D.image[0].isCompressedTexture,ft=D.image[0]&&D.image[0].isDataTexture,Lt=[];for(let ht=0;ht<6;ht++)!Yt&&!ft?Lt[ht]=M(D.image[ht],!0,s.maxCubemapSize):Lt[ht]=ft?D.image[ht].image:D.image[ht],Lt[ht]=It(D,Lt[ht]);const $t=Lt[0],te=a.convert(D.format,D.colorSpace),At=a.convert(D.type),ie=A(D.internalFormat,te,At,D.colorSpace),X=D.isVideoTexture!==!0,Nt=ot.__version===void 0||at===!0,yt=dt.dataReady;let Ht=U(D,$t);wt(i.TEXTURE_CUBE_MAP,D);let St;if(Yt){X&&Nt&&e.texStorage2D(i.TEXTURE_CUBE_MAP,Ht,ie,$t.width,$t.height);for(let ht=0;ht<6;ht++){St=Lt[ht].mipmaps;for(let Xt=0;Xt<St.length;Xt++){const ae=St[Xt];D.format!==Bn?te!==null?X?yt&&e.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,0,0,ae.width,ae.height,te,ae.data):e.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,ie,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):X?yt&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,0,0,ae.width,ae.height,te,At,ae.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt,ie,ae.width,ae.height,0,te,At,ae.data)}}}else{if(St=D.mipmaps,X&&Nt){St.length>0&&Ht++;const ht=ue(Lt[0]);e.texStorage2D(i.TEXTURE_CUBE_MAP,Ht,ie,ht.width,ht.height)}for(let ht=0;ht<6;ht++)if(ft){X?yt&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,0,0,Lt[ht].width,Lt[ht].height,te,At,Lt[ht].data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,ie,Lt[ht].width,Lt[ht].height,0,te,At,Lt[ht].data);for(let Xt=0;Xt<St.length;Xt++){const Ie=St[Xt].image[ht].image;X?yt&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,0,0,Ie.width,Ie.height,te,At,Ie.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,ie,Ie.width,Ie.height,0,te,At,Ie.data)}}else{X?yt&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,0,0,te,At,Lt[ht]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0,ie,te,At,Lt[ht]);for(let Xt=0;Xt<St.length;Xt++){const ae=St[Xt];X?yt&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,0,0,te,At,ae.image[ht]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,Xt+1,ie,te,At,ae.image[ht])}}}S(D)&&_(i.TEXTURE_CUBE_MAP),ot.__version=dt.version,D.onUpdate&&D.onUpdate(D)}F.__version=D.version}function Vt(F,D,Q,at,dt,ot){const Zt=a.convert(Q.format,Q.colorSpace),Ct=a.convert(Q.type),Gt=A(Q.internalFormat,Zt,Ct,Q.colorSpace),Yt=n.get(D),ft=n.get(Q);if(ft.__renderTarget=D,!Yt.__hasExternalTextures){const Lt=Math.max(1,D.width>>ot),$t=Math.max(1,D.height>>ot);dt===i.TEXTURE_3D||dt===i.TEXTURE_2D_ARRAY?e.texImage3D(dt,ot,Gt,Lt,$t,D.depth,0,Zt,Ct,null):e.texImage2D(dt,ot,Gt,Lt,$t,0,Zt,Ct,null)}e.bindFramebuffer(i.FRAMEBUFFER,F),zt(D)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,at,dt,ft.__webglTexture,0,ut(D)):(dt===i.TEXTURE_2D||dt>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&dt<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,at,dt,ft.__webglTexture,ot),e.bindFramebuffer(i.FRAMEBUFFER,null)}function fe(F,D,Q){if(i.bindRenderbuffer(i.RENDERBUFFER,F),D.depthBuffer){const at=D.depthTexture,dt=at&&at.isDepthTexture?at.type:null,ot=T(D.stencilBuffer,dt),Zt=D.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Ct=ut(D);zt(D)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Ct,ot,D.width,D.height):Q?i.renderbufferStorageMultisample(i.RENDERBUFFER,Ct,ot,D.width,D.height):i.renderbufferStorage(i.RENDERBUFFER,ot,D.width,D.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,Zt,i.RENDERBUFFER,F)}else{const at=D.textures;for(let dt=0;dt<at.length;dt++){const ot=at[dt],Zt=a.convert(ot.format,ot.colorSpace),Ct=a.convert(ot.type),Gt=A(ot.internalFormat,Zt,Ct,ot.colorSpace),Yt=ut(D);Q&&zt(D)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,Yt,Gt,D.width,D.height):zt(D)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Yt,Gt,D.width,D.height):i.renderbufferStorage(i.RENDERBUFFER,Gt,D.width,D.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Jt(F,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(i.FRAMEBUFFER,F),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const at=n.get(D.depthTexture);at.__renderTarget=D,(!at.__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),rt(D.depthTexture,0);const dt=at.__webglTexture,ot=ut(D);if(D.depthTexture.format===xo)zt(D)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,dt,0,ot):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,dt,0);else if(D.depthTexture.format===So)zt(D)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,dt,0,ot):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,dt,0);else throw new Error("Unknown depthTexture format")}function Pe(F){const D=n.get(F),Q=F.isWebGLCubeRenderTarget===!0;if(D.__boundDepthTexture!==F.depthTexture){const at=F.depthTexture;if(D.__depthDisposeCallback&&D.__depthDisposeCallback(),at){const dt=()=>{delete D.__boundDepthTexture,delete D.__depthDisposeCallback,at.removeEventListener("dispose",dt)};at.addEventListener("dispose",dt),D.__depthDisposeCallback=dt}D.__boundDepthTexture=at}if(F.depthTexture&&!D.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");const at=F.texture.mipmaps;at&&at.length>0?Jt(D.__webglFramebuffer[0],F):Jt(D.__webglFramebuffer,F)}else if(Q){D.__webglDepthbuffer=[];for(let at=0;at<6;at++)if(e.bindFramebuffer(i.FRAMEBUFFER,D.__webglFramebuffer[at]),D.__webglDepthbuffer[at]===void 0)D.__webglDepthbuffer[at]=i.createRenderbuffer(),fe(D.__webglDepthbuffer[at],F,!1);else{const dt=F.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ot=D.__webglDepthbuffer[at];i.bindRenderbuffer(i.RENDERBUFFER,ot),i.framebufferRenderbuffer(i.FRAMEBUFFER,dt,i.RENDERBUFFER,ot)}}else{const at=F.texture.mipmaps;if(at&&at.length>0?e.bindFramebuffer(i.FRAMEBUFFER,D.__webglFramebuffer[0]):e.bindFramebuffer(i.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer===void 0)D.__webglDepthbuffer=i.createRenderbuffer(),fe(D.__webglDepthbuffer,F,!1);else{const dt=F.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ot=D.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,ot),i.framebufferRenderbuffer(i.FRAMEBUFFER,dt,i.RENDERBUFFER,ot)}}e.bindFramebuffer(i.FRAMEBUFFER,null)}function ye(F,D,Q){const at=n.get(F);D!==void 0&&Vt(at.__webglFramebuffer,F,F.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),Q!==void 0&&Pe(F)}function le(F){const D=F.texture,Q=n.get(F),at=n.get(D);F.addEventListener("dispose",P);const dt=F.textures,ot=F.isWebGLCubeRenderTarget===!0,Zt=dt.length>1;if(Zt||(at.__webglTexture===void 0&&(at.__webglTexture=i.createTexture()),at.__version=D.version,l.memory.textures++),ot){Q.__webglFramebuffer=[];for(let Ct=0;Ct<6;Ct++)if(D.mipmaps&&D.mipmaps.length>0){Q.__webglFramebuffer[Ct]=[];for(let Gt=0;Gt<D.mipmaps.length;Gt++)Q.__webglFramebuffer[Ct][Gt]=i.createFramebuffer()}else Q.__webglFramebuffer[Ct]=i.createFramebuffer()}else{if(D.mipmaps&&D.mipmaps.length>0){Q.__webglFramebuffer=[];for(let Ct=0;Ct<D.mipmaps.length;Ct++)Q.__webglFramebuffer[Ct]=i.createFramebuffer()}else Q.__webglFramebuffer=i.createFramebuffer();if(Zt)for(let Ct=0,Gt=dt.length;Ct<Gt;Ct++){const Yt=n.get(dt[Ct]);Yt.__webglTexture===void 0&&(Yt.__webglTexture=i.createTexture(),l.memory.textures++)}if(F.samples>0&&zt(F)===!1){Q.__webglMultisampledFramebuffer=i.createFramebuffer(),Q.__webglColorRenderbuffer=[],e.bindFramebuffer(i.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let Ct=0;Ct<dt.length;Ct++){const Gt=dt[Ct];Q.__webglColorRenderbuffer[Ct]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,Q.__webglColorRenderbuffer[Ct]);const Yt=a.convert(Gt.format,Gt.colorSpace),ft=a.convert(Gt.type),Lt=A(Gt.internalFormat,Yt,ft,Gt.colorSpace,F.isXRRenderTarget===!0),$t=ut(F);i.renderbufferStorageMultisample(i.RENDERBUFFER,$t,Lt,F.width,F.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ct,i.RENDERBUFFER,Q.__webglColorRenderbuffer[Ct])}i.bindRenderbuffer(i.RENDERBUFFER,null),F.depthBuffer&&(Q.__webglDepthRenderbuffer=i.createRenderbuffer(),fe(Q.__webglDepthRenderbuffer,F,!0)),e.bindFramebuffer(i.FRAMEBUFFER,null)}}if(ot){e.bindTexture(i.TEXTURE_CUBE_MAP,at.__webglTexture),wt(i.TEXTURE_CUBE_MAP,D);for(let Ct=0;Ct<6;Ct++)if(D.mipmaps&&D.mipmaps.length>0)for(let Gt=0;Gt<D.mipmaps.length;Gt++)Vt(Q.__webglFramebuffer[Ct][Gt],F,D,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,Gt);else Vt(Q.__webglFramebuffer[Ct],F,D,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,0);S(D)&&_(i.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Zt){for(let Ct=0,Gt=dt.length;Ct<Gt;Ct++){const Yt=dt[Ct],ft=n.get(Yt);e.bindTexture(i.TEXTURE_2D,ft.__webglTexture),wt(i.TEXTURE_2D,Yt),Vt(Q.__webglFramebuffer,F,Yt,i.COLOR_ATTACHMENT0+Ct,i.TEXTURE_2D,0),S(Yt)&&_(i.TEXTURE_2D)}e.unbindTexture()}else{let Ct=i.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(Ct=F.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),e.bindTexture(Ct,at.__webglTexture),wt(Ct,D),D.mipmaps&&D.mipmaps.length>0)for(let Gt=0;Gt<D.mipmaps.length;Gt++)Vt(Q.__webglFramebuffer[Gt],F,D,i.COLOR_ATTACHMENT0,Ct,Gt);else Vt(Q.__webglFramebuffer,F,D,i.COLOR_ATTACHMENT0,Ct,0);S(D)&&_(Ct),e.unbindTexture()}F.depthBuffer&&Pe(F)}function O(F){const D=F.textures;for(let Q=0,at=D.length;Q<at;Q++){const dt=D[Q];if(S(dt)){const ot=E(F),Zt=n.get(dt).__webglTexture;e.bindTexture(ot,Zt),_(ot),e.unbindTexture()}}}const Tt=[],_t=[];function bt(F){if(F.samples>0){if(zt(F)===!1){const D=F.textures,Q=F.width,at=F.height;let dt=i.COLOR_BUFFER_BIT;const ot=F.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Zt=n.get(F),Ct=D.length>1;if(Ct)for(let Yt=0;Yt<D.length;Yt++)e.bindFramebuffer(i.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Yt,i.RENDERBUFFER,null),e.bindFramebuffer(i.FRAMEBUFFER,Zt.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Yt,i.TEXTURE_2D,null,0);e.bindFramebuffer(i.READ_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer);const Gt=F.texture.mipmaps;Gt&&Gt.length>0?e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer[0]):e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer);for(let Yt=0;Yt<D.length;Yt++){if(F.resolveDepthBuffer&&(F.depthBuffer&&(dt|=i.DEPTH_BUFFER_BIT),F.stencilBuffer&&F.resolveStencilBuffer&&(dt|=i.STENCIL_BUFFER_BIT)),Ct){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Zt.__webglColorRenderbuffer[Yt]);const ft=n.get(D[Yt]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,ft,0)}i.blitFramebuffer(0,0,Q,at,0,0,Q,at,dt,i.NEAREST),u===!0&&(Tt.length=0,_t.length=0,Tt.push(i.COLOR_ATTACHMENT0+Yt),F.depthBuffer&&F.resolveDepthBuffer===!1&&(Tt.push(ot),_t.push(ot),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,_t)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,Tt))}if(e.bindFramebuffer(i.READ_FRAMEBUFFER,null),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),Ct)for(let Yt=0;Yt<D.length;Yt++){e.bindFramebuffer(i.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Yt,i.RENDERBUFFER,Zt.__webglColorRenderbuffer[Yt]);const ft=n.get(D[Yt]).__webglTexture;e.bindFramebuffer(i.FRAMEBUFFER,Zt.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Yt,i.TEXTURE_2D,ft,0)}e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer)}else if(F.depthBuffer&&F.resolveDepthBuffer===!1&&u){const D=F.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[D])}}}function ut(F){return Math.min(s.maxSamples,F.samples)}function zt(F){const D=n.get(F);return F.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function vt(F){const D=l.render.frame;d.get(F)!==D&&(d.set(F,D),F.update())}function It(F,D){const Q=F.colorSpace,at=F.format,dt=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||Q!==pr&&Q!==Ds&&(Te.getTransfer(Q)===He?(at!==Bn||dt!==Ni)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),D}function ue(F){return typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement?(f.width=F.naturalWidth||F.width,f.height=F.naturalHeight||F.height):typeof VideoFrame<"u"&&F instanceof VideoFrame?(f.width=F.displayWidth,f.height=F.displayHeight):(f.width=F.width,f.height=F.height),f}this.allocateTextureUnit=k,this.resetTextureUnits=Z,this.setTexture2D=rt,this.setTexture2DArray=H,this.setTexture3D=Y,this.setTextureCube=G,this.rebindTextures=ye,this.setupRenderTarget=le,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=bt,this.setupDepthRenderbuffer=Pe,this.setupFrameBufferTexture=Vt,this.useMultisampledRTT=zt}function GS(i,t){function e(n,s=Ds){let a;const l=Te.getTransfer(s);if(n===Ni)return i.UNSIGNED_BYTE;if(n===Gh)return i.UNSIGNED_SHORT_4_4_4_4;if(n===kh)return i.UNSIGNED_SHORT_5_5_5_1;if(n===Rm)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===wm)return i.BYTE;if(n===Cm)return i.SHORT;if(n===_o)return i.UNSIGNED_SHORT;if(n===Vh)return i.INT;if(n===Os)return i.UNSIGNED_INT;if(n===ii)return i.FLOAT;if(n===Ro)return i.HALF_FLOAT;if(n===Dm)return i.ALPHA;if(n===Um)return i.RGB;if(n===Bn)return i.RGBA;if(n===xo)return i.DEPTH_COMPONENT;if(n===So)return i.DEPTH_STENCIL;if(n===Wh)return i.RED;if(n===ic)return i.RED_INTEGER;if(n===Nm)return i.RG;if(n===Xh)return i.RG_INTEGER;if(n===qh)return i.RGBA_INTEGER;if(n===wl||n===Cl||n===Rl||n===Dl)if(l===He)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(n===wl)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Cl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Rl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Dl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(n===wl)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Cl)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Rl)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Dl)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===ih||n===sh||n===rh||n===ah)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(n===ih)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===sh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===rh)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ah)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===oh||n===lh||n===ch)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(n===oh||n===lh)return l===He?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===ch)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===uh||n===hh||n===fh||n===dh||n===ph||n===mh||n===gh||n===vh||n===_h||n===yh||n===xh||n===Sh||n===Mh||n===bh)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(n===uh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===hh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===fh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===dh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ph)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===mh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===gh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===vh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===_h)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===yh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===xh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Sh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Mh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===bh)return l===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ul||n===Eh||n===Th)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(n===Ul)return l===He?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Eh)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Th)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Lm||n===Ah||n===wh||n===Ch)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(n===Ul)return a.COMPRESSED_RED_RGTC1_EXT;if(n===Ah)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===wh)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ch)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===yo?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:e}}const N3=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,L3=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class P3{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const s=new rn,a=t.properties.get(s);a.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=s}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Yi({vertexShader:N3,fragmentShader:L3,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new fn(new No(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class I3 extends us{constructor(t,e){super();const n=this;let s=null,a=1,l=null,c="local-floor",u=1,f=null,d=null,m=null,g=null,v=null,x=null;const M=new P3,S=e.getContextAttributes();let _=null,E=null;const A=[],T=[],U=new pt;let R=null;const P=new Sn;P.viewport=new Re;const I=new Sn;I.viewport=new Re;const C=[P,I],w=new US;let z=null,Z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let gt=A[$];return gt===void 0&&(gt=new Wu,A[$]=gt),gt.getTargetRaySpace()},this.getControllerGrip=function($){let gt=A[$];return gt===void 0&&(gt=new Wu,A[$]=gt),gt.getGripSpace()},this.getHand=function($){let gt=A[$];return gt===void 0&&(gt=new Wu,A[$]=gt),gt.getHandSpace()};function k($){const gt=T.indexOf($.inputSource);if(gt===-1)return;const Wt=A[gt];Wt!==void 0&&(Wt.update($.inputSource,$.frame,f||l),Wt.dispatchEvent({type:$.type,data:$.inputSource}))}function W(){s.removeEventListener("select",k),s.removeEventListener("selectstart",k),s.removeEventListener("selectend",k),s.removeEventListener("squeeze",k),s.removeEventListener("squeezestart",k),s.removeEventListener("squeezeend",k),s.removeEventListener("end",W),s.removeEventListener("inputsourceschange",rt);for(let $=0;$<A.length;$++){const gt=T[$];gt!==null&&(T[$]=null,A[$].disconnect(gt))}z=null,Z=null,M.reset(),t.setRenderTarget(_),v=null,g=null,m=null,s=null,E=null,jt.stop(),n.isPresenting=!1,t.setPixelRatio(R),t.setSize(U.width,U.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){c=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function($){f=$},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return s},this.setSession=async function($){if(s=$,s!==null){if(_=t.getRenderTarget(),s.addEventListener("select",k),s.addEventListener("selectstart",k),s.addEventListener("selectend",k),s.addEventListener("squeeze",k),s.addEventListener("squeezestart",k),s.addEventListener("squeezeend",k),s.addEventListener("end",W),s.addEventListener("inputsourceschange",rt),S.xrCompatible!==!0&&await e.makeXRCompatible(),R=t.getPixelRatio(),t.getSize(U),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Wt=null,Dt=null,Vt=null;S.depth&&(Vt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Wt=S.stencil?So:xo,Dt=S.stencil?yo:Os);const fe={colorFormat:e.RGBA8,depthFormat:Vt,scaleFactor:a};m=new XRWebGLBinding(s,e),g=m.createProjectionLayer(fe),s.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),E=new cs(g.textureWidth,g.textureHeight,{format:Bn,type:Ni,depthTexture:new Wm(g.textureWidth,g.textureHeight,Dt,void 0,void 0,void 0,void 0,void 0,void 0,Wt),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Wt={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:a};v=new XRWebGLLayer(s,e,Wt),s.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new cs(v.framebufferWidth,v.framebufferHeight,{format:Bn,type:Ni,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(u),f=null,l=await s.requestReferenceSpace(c),jt.setContext(s),jt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function rt($){for(let gt=0;gt<$.removed.length;gt++){const Wt=$.removed[gt],Dt=T.indexOf(Wt);Dt>=0&&(T[Dt]=null,A[Dt].disconnect(Wt))}for(let gt=0;gt<$.added.length;gt++){const Wt=$.added[gt];let Dt=T.indexOf(Wt);if(Dt===-1){for(let fe=0;fe<A.length;fe++)if(fe>=T.length){T.push(Wt),Dt=fe;break}else if(T[fe]===null){T[fe]=Wt,Dt=fe;break}if(Dt===-1)break}const Vt=A[Dt];Vt&&Vt.connect(Wt)}}const H=new B,Y=new B;function G($,gt,Wt){H.setFromMatrixPosition(gt.matrixWorld),Y.setFromMatrixPosition(Wt.matrixWorld);const Dt=H.distanceTo(Y),Vt=gt.projectionMatrix.elements,fe=Wt.projectionMatrix.elements,Jt=Vt[14]/(Vt[10]-1),Pe=Vt[14]/(Vt[10]+1),ye=(Vt[9]+1)/Vt[5],le=(Vt[9]-1)/Vt[5],O=(Vt[8]-1)/Vt[0],Tt=(fe[8]+1)/fe[0],_t=Jt*O,bt=Jt*Tt,ut=Dt/(-O+Tt),zt=ut*-O;if(gt.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(zt),$.translateZ(ut),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert(),Vt[10]===-1)$.projectionMatrix.copy(gt.projectionMatrix),$.projectionMatrixInverse.copy(gt.projectionMatrixInverse);else{const vt=Jt+ut,It=Pe+ut,ue=_t-zt,F=bt+(Dt-zt),D=ye*Pe/It*vt,Q=le*Pe/It*vt;$.projectionMatrix.makePerspective(ue,F,D,Q,vt,It),$.projectionMatrixInverse.copy($.projectionMatrix).invert()}}function st($,gt){gt===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(gt.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(s===null)return;let gt=$.near,Wt=$.far;M.texture!==null&&(M.depthNear>0&&(gt=M.depthNear),M.depthFar>0&&(Wt=M.depthFar)),w.near=I.near=P.near=gt,w.far=I.far=P.far=Wt,(z!==w.near||Z!==w.far)&&(s.updateRenderState({depthNear:w.near,depthFar:w.far}),z=w.near,Z=w.far),P.layers.mask=$.layers.mask|2,I.layers.mask=$.layers.mask|4,w.layers.mask=P.layers.mask|I.layers.mask;const Dt=$.parent,Vt=w.cameras;st(w,Dt);for(let fe=0;fe<Vt.length;fe++)st(Vt[fe],Dt);Vt.length===2?G(w,P,I):w.projectionMatrix.copy(P.projectionMatrix),lt($,w,Dt)};function lt($,gt,Wt){Wt===null?$.matrix.copy(gt.matrixWorld):($.matrix.copy(Wt.matrixWorld),$.matrix.invert(),$.matrix.multiply(gt.matrixWorld)),$.matrix.decompose($.position,$.quaternion,$.scale),$.updateMatrixWorld(!0),$.projectionMatrix.copy(gt.projectionMatrix),$.projectionMatrixInverse.copy(gt.projectionMatrixInverse),$.isPerspectiveCamera&&($.fov=Mo*2*Math.atan(1/$.projectionMatrix.elements[5]),$.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(g===null&&v===null))return u},this.setFoveation=function($){u=$,g!==null&&(g.fixedFoveation=$),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=$)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(w)};let mt=null;function wt($,gt){if(d=gt.getViewerPose(f||l),x=gt,d!==null){const Wt=d.views;v!==null&&(t.setRenderTargetFramebuffer(E,v.framebuffer),t.setRenderTarget(E));let Dt=!1;Wt.length!==w.cameras.length&&(w.cameras.length=0,Dt=!0);for(let Jt=0;Jt<Wt.length;Jt++){const Pe=Wt[Jt];let ye=null;if(v!==null)ye=v.getViewport(Pe);else{const O=m.getViewSubImage(g,Pe);ye=O.viewport,Jt===0&&(t.setRenderTargetTextures(E,O.colorTexture,O.depthStencilTexture),t.setRenderTarget(E))}let le=C[Jt];le===void 0&&(le=new Sn,le.layers.enable(Jt),le.viewport=new Re,C[Jt]=le),le.matrix.fromArray(Pe.transform.matrix),le.matrix.decompose(le.position,le.quaternion,le.scale),le.projectionMatrix.fromArray(Pe.projectionMatrix),le.projectionMatrixInverse.copy(le.projectionMatrix).invert(),le.viewport.set(ye.x,ye.y,ye.width,ye.height),Jt===0&&(w.matrix.copy(le.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Dt===!0&&w.cameras.push(le)}const Vt=s.enabledFeatures;if(Vt&&Vt.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&m){const Jt=m.getDepthInformation(Wt[0]);Jt&&Jt.isValid&&Jt.texture&&M.init(t,Jt,s.renderState)}}for(let Wt=0;Wt<A.length;Wt++){const Dt=T[Wt],Vt=A[Wt];Dt!==null&&Vt!==void 0&&Vt.update(Dt,gt,f||l)}mt&&mt($,gt),gt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:gt}),x=null}const jt=new zS;jt.setAnimationLoop(wt),this.setAnimationLoop=function($){mt=$},this.dispose=function(){}}}const Qr=new qi,O3=new re;function z3(i,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,Ox(i)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function s(S,_,E,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?a(S,_):_.isMeshToonMaterial?(a(S,_),m(S,_)):_.isMeshPhongMaterial?(a(S,_),d(S,_)):_.isMeshStandardMaterial?(a(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(a(S,_),x(S,_)):_.isMeshDepthMaterial?a(S,_):_.isMeshDistanceMaterial?(a(S,_),M(S,_)):_.isMeshNormalMaterial?a(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?u(S,_,E,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function a(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===Zn&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===Zn&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,Qr.copy(T),Qr.x*=-1,Qr.y*=-1,Qr.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(Qr.y*=-1,Qr.z*=-1),S.envMapRotation.value.setFromMatrix4(O3.makeRotationFromEuler(Qr)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function u(S,_,E,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=A*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function d(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Zn&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function M(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function B3(i,t,e,n){let s={},a={},l=[];const c=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=s[E.id];T===void 0&&(x(E),T=d(E),s[E.id]=T,E.addEventListener("dispose",S));const U=A.program;n.updateUBOMapping(E,U);const R=t.render.frame;a[E.id]!==R&&(g(E),a[E.id]=R)}function d(E){const A=m();E.__bindingPointIndex=A;const T=i.createBuffer(),U=E.__size,R=E.usage;return i.bindBuffer(i.UNIFORM_BUFFER,T),i.bufferData(i.UNIFORM_BUFFER,U,R),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=s[E.id],T=E.uniforms,U=E.__cache;i.bindBuffer(i.UNIFORM_BUFFER,A);for(let R=0,P=T.length;R<P;R++){const I=Array.isArray(T[R])?T[R]:[T[R]];for(let C=0,w=I.length;C<w;C++){const z=I[C];if(v(z,R,C,U)===!0){const Z=z.__offset,k=Array.isArray(z.value)?z.value:[z.value];let W=0;for(let rt=0;rt<k.length;rt++){const H=k[rt],Y=M(H);typeof H=="number"||typeof H=="boolean"?(z.__data[0]=H,i.bufferSubData(i.UNIFORM_BUFFER,Z+W,z.__data)):H.isMatrix3?(z.__data[0]=H.elements[0],z.__data[1]=H.elements[1],z.__data[2]=H.elements[2],z.__data[3]=0,z.__data[4]=H.elements[3],z.__data[5]=H.elements[4],z.__data[6]=H.elements[5],z.__data[7]=0,z.__data[8]=H.elements[6],z.__data[9]=H.elements[7],z.__data[10]=H.elements[8],z.__data[11]=0):(H.toArray(z.__data,W),W+=Y.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,Z,z.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function v(E,A,T,U){const R=E.value,P=A+"_"+T;if(U[P]===void 0)return typeof R=="number"||typeof R=="boolean"?U[P]=R:U[P]=R.clone(),!0;{const I=U[P];if(typeof R=="number"||typeof R=="boolean"){if(I!==R)return U[P]=R,!0}else if(I.equals(R)===!1)return I.copy(R),!0}return!1}function x(E){const A=E.uniforms;let T=0;const U=16;for(let P=0,I=A.length;P<I;P++){const C=Array.isArray(A[P])?A[P]:[A[P]];for(let w=0,z=C.length;w<z;w++){const Z=C[w],k=Array.isArray(Z.value)?Z.value:[Z.value];for(let W=0,rt=k.length;W<rt;W++){const H=k[W],Y=M(H),G=T%U,st=G%Y.boundary,lt=G+st;T+=st,lt!==0&&U-lt<Y.storage&&(T+=U-lt),Z.__data=new Float32Array(Y.storage/Float32Array.BYTES_PER_ELEMENT),Z.__offset=T,T+=Y.storage}}}const R=T%U;return R>0&&(T+=U-R),E.__size=T,E.__cache={},this}function M(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),i.deleteBuffer(s[A.id]),delete s[A.id],delete a[A.id]}function _(){for(const E in s)i.deleteBuffer(s[E]);l=[],s={},a={}}return{bind:u,update:f,dispose:_}}class kS{constructor(t={}){const{canvas:e=Nx(),context:n=null,depth:s=!0,stencil:a=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:f=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),M=new Int32Array(4);let S=null,_=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=os,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let U=!1;this._outputColorSpace=zn;let R=0,P=0,I=null,C=-1,w=null;const z=new Re,Z=new Re;let k=null;const W=new Ot(0);let rt=0,H=e.width,Y=e.height,G=1,st=null,lt=null;const mt=new Re(0,0,H,Y),wt=new Re(0,0,H,Y);let jt=!1;const $=new Uo;let gt=!1,Wt=!1;const Dt=new re,Vt=new re,fe=new B,Jt=new Re,Pe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ye=!1;function le(){return I===null?G:1}let O=n;function Tt(N,q){return e.getContext(N,q)}try{const N={alpha:!0,depth:s,stencil:a,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:f,powerPreference:d,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Bh}`),e.addEventListener("webglcontextlost",Ht,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",ht,!1),O===null){const q="webgl2";if(O=Tt(q,N),O===null)throw Tt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let _t,bt,ut,zt,vt,It,ue,F,D,Q,at,dt,ot,Zt,Ct,Gt,Yt,ft,Lt,$t,te,At,ie,X;function Nt(){_t=new KC(O),_t.init(),At=new GS(O,_t),bt=new kC(O,_t,t,At),ut=new D3(O,_t),bt.reverseDepthBuffer&&g&&ut.buffers.depth.setReversed(!0),zt=new $C(O),vt=new v3,It=new U3(O,_t,ut,vt,bt,At,zt),ue=new XC(T),F=new jC(T),D=new r2(O),ie=new VC(O,D),Q=new JC(O,D,zt,ie),at=new eR(O,Q,D,zt),Lt=new tR(O,bt,It),Gt=new WC(vt),dt=new g3(T,ue,F,_t,bt,ie,Gt),ot=new z3(T,vt),Zt=new y3,Ct=new T3(_t),ft=new HC(T,ue,F,ut,at,v,u),Yt=new C3(T,at,bt),X=new B3(O,zt,bt,ut),$t=new GC(O,_t,zt),te=new QC(O,_t,zt),zt.programs=dt.programs,T.capabilities=bt,T.extensions=_t,T.properties=vt,T.renderLists=Zt,T.shadowMap=Yt,T.state=ut,T.info=zt}Nt();const yt=new I3(T,O);this.xr=yt,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const N=_t.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=_t.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(N){N!==void 0&&(G=N,this.setSize(H,Y,!1))},this.getSize=function(N){return N.set(H,Y)},this.setSize=function(N,q,et=!0){if(yt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=N,Y=q,e.width=Math.floor(N*G),e.height=Math.floor(q*G),et===!0&&(e.style.width=N+"px",e.style.height=q+"px"),this.setViewport(0,0,N,q)},this.getDrawingBufferSize=function(N){return N.set(H*G,Y*G).floor()},this.setDrawingBufferSize=function(N,q,et){H=N,Y=q,G=et,e.width=Math.floor(N*et),e.height=Math.floor(q*et),this.setViewport(0,0,N,q)},this.getCurrentViewport=function(N){return N.copy(z)},this.getViewport=function(N){return N.copy(mt)},this.setViewport=function(N,q,et,nt){N.isVector4?mt.set(N.x,N.y,N.z,N.w):mt.set(N,q,et,nt),ut.viewport(z.copy(mt).multiplyScalar(G).round())},this.getScissor=function(N){return N.copy(wt)},this.setScissor=function(N,q,et,nt){N.isVector4?wt.set(N.x,N.y,N.z,N.w):wt.set(N,q,et,nt),ut.scissor(Z.copy(wt).multiplyScalar(G).round())},this.getScissorTest=function(){return jt},this.setScissorTest=function(N){ut.setScissorTest(jt=N)},this.setOpaqueSort=function(N){st=N},this.setTransparentSort=function(N){lt=N},this.getClearColor=function(N){return N.copy(ft.getClearColor())},this.setClearColor=function(){ft.setClearColor(...arguments)},this.getClearAlpha=function(){return ft.getClearAlpha()},this.setClearAlpha=function(){ft.setClearAlpha(...arguments)},this.clear=function(N=!0,q=!0,et=!0){let nt=0;if(N){let j=!1;if(I!==null){const xt=I.texture.format;j=xt===qh||xt===Xh||xt===ic}if(j){const xt=I.texture.type,Rt=xt===Ni||xt===Os||xt===_o||xt===yo||xt===Gh||xt===kh,kt=ft.getClearColor(),Ft=ft.getClearAlpha(),se=kt.r,oe=kt.g,Kt=kt.b;Rt?(x[0]=se,x[1]=oe,x[2]=Kt,x[3]=Ft,O.clearBufferuiv(O.COLOR,0,x)):(M[0]=se,M[1]=oe,M[2]=Kt,M[3]=Ft,O.clearBufferiv(O.COLOR,0,M))}else nt|=O.COLOR_BUFFER_BIT}q&&(nt|=O.DEPTH_BUFFER_BIT),et&&(nt|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(nt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ht,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",ht,!1),ft.dispose(),Zt.dispose(),Ct.dispose(),vt.dispose(),ue.dispose(),F.dispose(),at.dispose(),ie.dispose(),X.dispose(),dt.dispose(),yt.dispose(),yt.removeEventListener("sessionstart",Io),yt.removeEventListener("sessionend",ma),Pi.stop()};function Ht(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),U=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),U=!1;const N=zt.autoReset,q=Yt.enabled,et=Yt.autoUpdate,nt=Yt.needsUpdate,j=Yt.type;Nt(),zt.autoReset=N,Yt.enabled=q,Yt.autoUpdate=et,Yt.needsUpdate=nt,Yt.type=j}function ht(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Xt(N){const q=N.target;q.removeEventListener("dispose",Xt),ae(q)}function ae(N){Ie(N),vt.remove(N)}function Ie(N){const q=vt.get(N).programs;q!==void 0&&(q.forEach(function(et){dt.releaseProgram(et)}),N.isShaderMaterial&&dt.releaseShaderCache(N))}this.renderBufferDirect=function(N,q,et,nt,j,xt){q===null&&(q=Pe);const Rt=j.isMesh&&j.matrixWorld.determinant()<0,kt=dc(N,q,et,nt,j);ut.setMaterial(nt,Rt);let Ft=et.index,se=1;if(nt.wireframe===!0){if(Ft=Q.getWireframeAttribute(et),Ft===void 0)return;se=2}const oe=et.drawRange,Kt=et.attributes.position;let xe=oe.start*se,Oe=(oe.start+oe.count)*se;xt!==null&&(xe=Math.max(xe,xt.start*se),Oe=Math.min(Oe,(xt.start+xt.count)*se)),Ft!==null?(xe=Math.max(xe,0),Oe=Math.min(Oe,Ft.count)):Kt!=null&&(xe=Math.max(xe,0),Oe=Math.min(Oe,Kt.count));const je=Oe-xe;if(je<0||je===1/0)return;ie.setup(j,nt,kt,et,Ft);let Be,ze=$t;if(Ft!==null&&(Be=D.get(Ft),ze=te,ze.setIndex(Be)),j.isMesh)nt.wireframe===!0?(ut.setLineWidth(nt.wireframeLinewidth*le()),ze.setMode(O.LINES)):ze.setMode(O.TRIANGLES);else if(j.isLine){let ee=nt.linewidth;ee===void 0&&(ee=1),ut.setLineWidth(ee*le()),j.isLineSegments?ze.setMode(O.LINES):j.isLineLoop?ze.setMode(O.LINE_LOOP):ze.setMode(O.LINE_STRIP)}else j.isPoints?ze.setMode(O.POINTS):j.isSprite&&ze.setMode(O.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)go("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),ze.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(_t.get("WEBGL_multi_draw"))ze.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const ee=j._multiDrawStarts,qe=j._multiDrawCounts,Ee=j._multiDrawCount,Cn=Ft?D.get(Ft).bytesPerElement:1,ji=vt.get(nt).currentProgram.getUniforms();for(let Rn=0;Rn<Ee;Rn++)ji.setValue(O,"_gl_DrawID",Rn),ze.render(ee[Rn]/Cn,qe[Rn])}else if(j.isInstancedMesh)ze.renderInstances(xe,je,j.count);else if(et.isInstancedBufferGeometry){const ee=et._maxInstanceCount!==void 0?et._maxInstanceCount:1/0,qe=Math.min(et.instanceCount,ee);ze.renderInstances(xe,je,qe)}else ze.render(xe,je)};function Ae(N,q,et){N.transparent===!0&&N.side===ss&&N.forceSinglePass===!1?(N.side=Zn,N.needsUpdate=!0,Xe(N,q,et),N.side=Ps,N.needsUpdate=!0,Xe(N,q,et),N.side=ss):Xe(N,q,et)}this.compile=function(N,q,et=null){et===null&&(et=N),_=Ct.get(et),_.init(q),A.push(_),et.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),N!==et&&N.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),_.setupLights();const nt=new Set;return N.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const xt=j.material;if(xt)if(Array.isArray(xt))for(let Rt=0;Rt<xt.length;Rt++){const kt=xt[Rt];Ae(kt,et,j),nt.add(kt)}else Ae(xt,et,j),nt.add(xt)}),_=A.pop(),nt},this.compileAsync=function(N,q,et=null){const nt=this.compile(N,q,et);return new Promise(j=>{function xt(){if(nt.forEach(function(Rt){vt.get(Rt).currentProgram.isReady()&&nt.delete(Rt)}),nt.size===0){j(N);return}setTimeout(xt,10)}_t.get("KHR_parallel_shader_compile")!==null?xt():setTimeout(xt,10)})};let Kn=null;function yi(N){Kn&&Kn(N)}function Io(){Pi.stop()}function ma(){Pi.start()}const Pi=new zS;Pi.setAnimationLoop(yi),typeof self<"u"&&Pi.setContext(self),this.setAnimationLoop=function(N){Kn=N,yt.setAnimationLoop(N),N===null?Pi.stop():Pi.start()},yt.addEventListener("sessionstart",Io),yt.addEventListener("sessionend",ma),this.render=function(N,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(U===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),yt.enabled===!0&&yt.isPresenting===!0&&(yt.cameraAutoUpdate===!0&&yt.updateCamera(q),q=yt.getCamera()),N.isScene===!0&&N.onBeforeRender(T,N,q,I),_=Ct.get(N,A.length),_.init(q),A.push(_),Vt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),$.setFromProjectionMatrix(Vt),Wt=this.localClippingEnabled,gt=Gt.init(this.clippingPlanes,Wt),S=Zt.get(N,E.length),S.init(),E.push(S),yt.enabled===!0&&yt.isPresenting===!0){const xt=T.xr.getDepthSensingMesh();xt!==null&&xi(xt,q,-1/0,T.sortObjects)}xi(N,q,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(st,lt),ye=yt.enabled===!1||yt.isPresenting===!1||yt.hasDepthSensing()===!1,ye&&ft.addToRenderList(S,N),this.info.render.frame++,gt===!0&&Gt.beginShadows();const et=_.state.shadowsArray;Yt.render(et,N,q),gt===!0&&Gt.endShadows(),this.info.autoReset===!0&&this.info.reset();const nt=S.opaque,j=S.transmissive;if(_.setupLights(),q.isArrayCamera){const xt=q.cameras;if(j.length>0)for(let Rt=0,kt=xt.length;Rt<kt;Rt++){const Ft=xt[Rt];Ii(nt,j,N,Ft)}ye&&ft.render(N);for(let Rt=0,kt=xt.length;Rt<kt;Rt++){const Ft=xt[Rt];Oo(S,N,Ft,Ft.viewport)}}else j.length>0&&Ii(nt,j,N,q),ye&&ft.render(N),Oo(S,N,q);I!==null&&P===0&&(It.updateMultisampleRenderTarget(I),It.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(T,N,q),ie.resetDefaultState(),C=-1,w=null,A.pop(),A.length>0?(_=A[A.length-1],gt===!0&&Gt.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function xi(N,q,et,nt){if(N.visible===!1)return;if(N.layers.test(q.layers)){if(N.isGroup)et=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(q);else if(N.isLight)_.pushLight(N),N.castShadow&&_.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||$.intersectsSprite(N)){nt&&Jt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Vt);const Rt=at.update(N),kt=N.material;kt.visible&&S.push(N,Rt,kt,et,Jt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||$.intersectsObject(N))){const Rt=at.update(N),kt=N.material;if(nt&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),Jt.copy(N.boundingSphere.center)):(Rt.boundingSphere===null&&Rt.computeBoundingSphere(),Jt.copy(Rt.boundingSphere.center)),Jt.applyMatrix4(N.matrixWorld).applyMatrix4(Vt)),Array.isArray(kt)){const Ft=Rt.groups;for(let se=0,oe=Ft.length;se<oe;se++){const Kt=Ft[se],xe=kt[Kt.materialIndex];xe&&xe.visible&&S.push(N,Rt,xe,et,Jt.z,Kt)}}else kt.visible&&S.push(N,Rt,kt,et,Jt.z,null)}}const xt=N.children;for(let Rt=0,kt=xt.length;Rt<kt;Rt++)xi(xt[Rt],q,et,nt)}function Oo(N,q,et,nt){const j=N.opaque,xt=N.transmissive,Rt=N.transparent;_.setupLightsView(et),gt===!0&&Gt.setGlobalState(T.clippingPlanes,et),nt&&ut.viewport(z.copy(nt)),j.length>0&&Jn(j,q,et),xt.length>0&&Jn(xt,q,et),Rt.length>0&&Jn(Rt,q,et),ut.buffers.depth.setTest(!0),ut.buffers.depth.setMask(!0),ut.buffers.color.setMask(!0),ut.setPolygonOffset(!1)}function Ii(N,q,et,nt){if((et.isScene===!0?et.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[nt.id]===void 0&&(_.state.transmissionRenderTarget[nt.id]=new cs(1,1,{generateMipmaps:!0,type:_t.has("EXT_color_buffer_half_float")||_t.has("EXT_color_buffer_float")?Ro:Ni,minFilter:rs,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Te.workingColorSpace}));const xt=_.state.transmissionRenderTarget[nt.id],Rt=nt.viewport||z;xt.setSize(Rt.z*T.transmissionResolutionScale,Rt.w*T.transmissionResolutionScale);const kt=T.getRenderTarget(),Ft=T.getActiveCubeFace(),se=T.getActiveMipmapLevel();T.setRenderTarget(xt),T.getClearColor(W),rt=T.getClearAlpha(),rt<1&&T.setClearColor(16777215,.5),T.clear(),ye&&ft.render(et);const oe=T.toneMapping;T.toneMapping=os;const Kt=nt.viewport;if(nt.viewport!==void 0&&(nt.viewport=void 0),_.setupLightsView(nt),gt===!0&&Gt.setGlobalState(T.clippingPlanes,nt),Jn(N,et,nt),It.updateMultisampleRenderTarget(xt),It.updateRenderTargetMipmap(xt),_t.has("WEBGL_multisampled_render_to_texture")===!1){let xe=!1;for(let Oe=0,je=q.length;Oe<je;Oe++){const Be=q[Oe],ze=Be.object,ee=Be.geometry,qe=Be.material,Ee=Be.group;if(qe.side===ss&&ze.layers.test(nt.layers)){const Cn=qe.side;qe.side=Zn,qe.needsUpdate=!0,xr(ze,et,nt,ee,qe,Ee),qe.side=Cn,qe.needsUpdate=!0,xe=!0}}xe===!0&&(It.updateMultisampleRenderTarget(xt),It.updateRenderTargetMipmap(xt))}T.setRenderTarget(kt,Ft,se),T.setClearColor(W,rt),Kt!==void 0&&(nt.viewport=Kt),T.toneMapping=oe}function Jn(N,q,et){const nt=q.isScene===!0?q.overrideMaterial:null;for(let j=0,xt=N.length;j<xt;j++){const Rt=N[j],kt=Rt.object,Ft=Rt.geometry,se=Rt.group;let oe=Rt.material;oe.allowOverride===!0&&nt!==null&&(oe=nt),kt.layers.test(et.layers)&&xr(kt,q,et,Ft,oe,se)}}function xr(N,q,et,nt,j,xt){N.onBeforeRender(T,q,et,nt,j,xt),N.modelViewMatrix.multiplyMatrices(et.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),j.onBeforeRender(T,q,et,nt,N,xt),j.transparent===!0&&j.side===ss&&j.forceSinglePass===!1?(j.side=Zn,j.needsUpdate=!0,T.renderBufferDirect(et,q,nt,j,N,xt),j.side=Ps,j.needsUpdate=!0,T.renderBufferDirect(et,q,nt,j,N,xt),j.side=ss):T.renderBufferDirect(et,q,nt,j,N,xt),N.onAfterRender(T,q,et,nt,j,xt)}function Xe(N,q,et){q.isScene!==!0&&(q=Pe);const nt=vt.get(N),j=_.state.lights,xt=_.state.shadowsArray,Rt=j.state.version,kt=dt.getParameters(N,j.state,xt,q,et),Ft=dt.getProgramCacheKey(kt);let se=nt.programs;nt.environment=N.isMeshStandardMaterial?q.environment:null,nt.fog=q.fog,nt.envMap=(N.isMeshStandardMaterial?F:ue).get(N.envMap||nt.environment),nt.envMapRotation=nt.environment!==null&&N.envMap===null?q.environmentRotation:N.envMapRotation,se===void 0&&(N.addEventListener("dispose",Xt),se=new Map,nt.programs=se);let oe=se.get(Ft);if(oe!==void 0){if(nt.currentProgram===oe&&nt.lightsStateVersion===Rt)return va(N,kt),oe}else kt.uniforms=dt.getUniforms(N),N.onBeforeCompile(kt,T),oe=dt.acquireProgram(kt,Ft),se.set(Ft,oe),nt.uniforms=kt.uniforms;const Kt=nt.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(Kt.clippingPlanes=Gt.uniform),va(N,kt),nt.needsLights=xf(N),nt.lightsStateVersion=Rt,nt.needsLights&&(Kt.ambientLightColor.value=j.state.ambient,Kt.lightProbe.value=j.state.probe,Kt.directionalLights.value=j.state.directional,Kt.directionalLightShadows.value=j.state.directionalShadow,Kt.spotLights.value=j.state.spot,Kt.spotLightShadows.value=j.state.spotShadow,Kt.rectAreaLights.value=j.state.rectArea,Kt.ltc_1.value=j.state.rectAreaLTC1,Kt.ltc_2.value=j.state.rectAreaLTC2,Kt.pointLights.value=j.state.point,Kt.pointLightShadows.value=j.state.pointShadow,Kt.hemisphereLights.value=j.state.hemi,Kt.directionalShadowMap.value=j.state.directionalShadowMap,Kt.directionalShadowMatrix.value=j.state.directionalShadowMatrix,Kt.spotShadowMap.value=j.state.spotShadowMap,Kt.spotLightMatrix.value=j.state.spotLightMatrix,Kt.spotLightMap.value=j.state.spotLightMap,Kt.pointShadowMap.value=j.state.pointShadowMap,Kt.pointShadowMatrix.value=j.state.pointShadowMatrix),nt.currentProgram=oe,nt.uniformsList=null,oe}function ga(N){if(N.uniformsList===null){const q=N.currentProgram.getUniforms();N.uniformsList=Xu.seqWithValue(q.seq,N.uniforms)}return N.uniformsList}function va(N,q){const et=vt.get(N);et.outputColorSpace=q.outputColorSpace,et.batching=q.batching,et.batchingColor=q.batchingColor,et.instancing=q.instancing,et.instancingColor=q.instancingColor,et.instancingMorph=q.instancingMorph,et.skinning=q.skinning,et.morphTargets=q.morphTargets,et.morphNormals=q.morphNormals,et.morphColors=q.morphColors,et.morphTargetsCount=q.morphTargetsCount,et.numClippingPlanes=q.numClippingPlanes,et.numIntersection=q.numClipIntersection,et.vertexAlphas=q.vertexAlphas,et.vertexTangents=q.vertexTangents,et.toneMapping=q.toneMapping}function dc(N,q,et,nt,j){q.isScene!==!0&&(q=Pe),It.resetTextureUnits();const xt=q.fog,Rt=nt.isMeshStandardMaterial?q.environment:null,kt=I===null?T.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:pr,Ft=(nt.isMeshStandardMaterial?F:ue).get(nt.envMap||Rt),se=nt.vertexColors===!0&&!!et.attributes.color&&et.attributes.color.itemSize===4,oe=!!et.attributes.tangent&&(!!nt.normalMap||nt.anisotropy>0),Kt=!!et.morphAttributes.position,xe=!!et.morphAttributes.normal,Oe=!!et.morphAttributes.color;let je=os;nt.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(je=T.toneMapping);const Be=et.morphAttributes.position||et.morphAttributes.normal||et.morphAttributes.color,ze=Be!==void 0?Be.length:0,ee=vt.get(nt),qe=_.state.lights;if(gt===!0&&(Wt===!0||N!==w)){const Mn=N===w&&nt.id===C;Gt.setState(nt,N,Mn)}let Ee=!1;nt.version===ee.__version?(ee.needsLights&&ee.lightsStateVersion!==qe.state.version||ee.outputColorSpace!==kt||j.isBatchedMesh&&ee.batching===!1||!j.isBatchedMesh&&ee.batching===!0||j.isBatchedMesh&&ee.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&ee.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&ee.instancing===!1||!j.isInstancedMesh&&ee.instancing===!0||j.isSkinnedMesh&&ee.skinning===!1||!j.isSkinnedMesh&&ee.skinning===!0||j.isInstancedMesh&&ee.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&ee.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&ee.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&ee.instancingMorph===!1&&j.morphTexture!==null||ee.envMap!==Ft||nt.fog===!0&&ee.fog!==xt||ee.numClippingPlanes!==void 0&&(ee.numClippingPlanes!==Gt.numPlanes||ee.numIntersection!==Gt.numIntersection)||ee.vertexAlphas!==se||ee.vertexTangents!==oe||ee.morphTargets!==Kt||ee.morphNormals!==xe||ee.morphColors!==Oe||ee.toneMapping!==je||ee.morphTargetsCount!==ze)&&(Ee=!0):(Ee=!0,ee.__version=nt.version);let Cn=ee.currentProgram;Ee===!0&&(Cn=Xe(nt,q,j));let ji=!1,Rn=!1,Bs=!1;const We=Cn.getUniforms(),Vn=ee.uniforms;if(ut.useProgram(Cn.program)&&(ji=!0,Rn=!0,Bs=!0),nt.id!==C&&(C=nt.id,Rn=!0),ji||w!==N){ut.buffers.depth.getReversed()?(Dt.copy(N.projectionMatrix),TE(Dt),AE(Dt),We.setValue(O,"projectionMatrix",Dt)):We.setValue(O,"projectionMatrix",N.projectionMatrix),We.setValue(O,"viewMatrix",N.matrixWorldInverse);const bn=We.map.cameraPosition;bn!==void 0&&bn.setValue(O,fe.setFromMatrixPosition(N.matrixWorld)),bt.logarithmicDepthBuffer&&We.setValue(O,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial)&&We.setValue(O,"isOrthographic",N.isOrthographicCamera===!0),w!==N&&(w=N,Rn=!0,Bs=!0)}if(j.isSkinnedMesh){We.setOptional(O,j,"bindMatrix"),We.setOptional(O,j,"bindMatrixInverse");const Mn=j.skeleton;Mn&&(Mn.boneTexture===null&&Mn.computeBoneTexture(),We.setValue(O,"boneTexture",Mn.boneTexture,It))}j.isBatchedMesh&&(We.setOptional(O,j,"batchingTexture"),We.setValue(O,"batchingTexture",j._matricesTexture,It),We.setOptional(O,j,"batchingIdTexture"),We.setValue(O,"batchingIdTexture",j._indirectTexture,It),We.setOptional(O,j,"batchingColorTexture"),j._colorsTexture!==null&&We.setValue(O,"batchingColorTexture",j._colorsTexture,It));const Gn=et.morphAttributes;if((Gn.position!==void 0||Gn.normal!==void 0||Gn.color!==void 0)&&Lt.update(j,et,Cn),(Rn||ee.receiveShadow!==j.receiveShadow)&&(ee.receiveShadow=j.receiveShadow,We.setValue(O,"receiveShadow",j.receiveShadow)),nt.isMeshGouraudMaterial&&nt.envMap!==null&&(Vn.envMap.value=Ft,Vn.flipEnvMap.value=Ft.isCubeTexture&&Ft.isRenderTargetTexture===!1?-1:1),nt.isMeshStandardMaterial&&nt.envMap===null&&q.environment!==null&&(Vn.envMapIntensity.value=q.environmentIntensity),Rn&&(We.setValue(O,"toneMappingExposure",T.toneMappingExposure),ee.needsLights&&pc(Vn,Bs),xt&&nt.fog===!0&&ot.refreshFogUniforms(Vn,xt),ot.refreshMaterialUniforms(Vn,nt,G,Y,_.state.transmissionRenderTarget[N.id]),Xu.upload(O,ga(ee),Vn,It)),nt.isShaderMaterial&&nt.uniformsNeedUpdate===!0&&(Xu.upload(O,ga(ee),Vn,It),nt.uniformsNeedUpdate=!1),nt.isSpriteMaterial&&We.setValue(O,"center",j.center),We.setValue(O,"modelViewMatrix",j.modelViewMatrix),We.setValue(O,"normalMatrix",j.normalMatrix),We.setValue(O,"modelMatrix",j.matrixWorld),nt.isShaderMaterial||nt.isRawShaderMaterial){const Mn=nt.uniformsGroups;for(let bn=0,Ki=Mn.length;bn<Ki;bn++){const Ji=Mn[bn];X.update(Ji,Cn),X.bind(Ji,Cn)}}return Cn}function pc(N,q){N.ambientLightColor.needsUpdate=q,N.lightProbe.needsUpdate=q,N.directionalLights.needsUpdate=q,N.directionalLightShadows.needsUpdate=q,N.pointLights.needsUpdate=q,N.pointLightShadows.needsUpdate=q,N.spotLights.needsUpdate=q,N.spotLightShadows.needsUpdate=q,N.rectAreaLights.needsUpdate=q,N.hemisphereLights.needsUpdate=q}function xf(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,q,et){const nt=vt.get(N);nt.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,nt.__autoAllocateDepthBuffer===!1&&(nt.__useRenderToTexture=!1),vt.get(N.texture).__webglTexture=q,vt.get(N.depthTexture).__webglTexture=nt.__autoAllocateDepthBuffer?void 0:et,nt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,q){const et=vt.get(N);et.__webglFramebuffer=q,et.__useDefaultFramebuffer=q===void 0};const zo=O.createFramebuffer();this.setRenderTarget=function(N,q=0,et=0){I=N,R=q,P=et;let nt=!0,j=null,xt=!1,Rt=!1;if(N){const Ft=vt.get(N);if(Ft.__useDefaultFramebuffer!==void 0)ut.bindFramebuffer(O.FRAMEBUFFER,null),nt=!1;else if(Ft.__webglFramebuffer===void 0)It.setupRenderTarget(N);else if(Ft.__hasExternalTextures)It.rebindTextures(N,vt.get(N.texture).__webglTexture,vt.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const Kt=N.depthTexture;if(Ft.__boundDepthTexture!==Kt){if(Kt!==null&&vt.has(Kt)&&(N.width!==Kt.image.width||N.height!==Kt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");It.setupDepthRenderbuffer(N)}}const se=N.texture;(se.isData3DTexture||se.isDataArrayTexture||se.isCompressedArrayTexture)&&(Rt=!0);const oe=vt.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(oe[q])?j=oe[q][et]:j=oe[q],xt=!0):N.samples>0&&It.useMultisampledRTT(N)===!1?j=vt.get(N).__webglMultisampledFramebuffer:Array.isArray(oe)?j=oe[et]:j=oe,z.copy(N.viewport),Z.copy(N.scissor),k=N.scissorTest}else z.copy(mt).multiplyScalar(G).floor(),Z.copy(wt).multiplyScalar(G).floor(),k=jt;if(et!==0&&(j=zo),ut.bindFramebuffer(O.FRAMEBUFFER,j)&&nt&&ut.drawBuffers(N,j),ut.viewport(z),ut.scissor(Z),ut.setScissorTest(k),xt){const Ft=vt.get(N.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+q,Ft.__webglTexture,et)}else if(Rt){const Ft=vt.get(N.texture),se=q;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Ft.__webglTexture,et,se)}else if(N!==null&&et!==0){const Ft=vt.get(N.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Ft.__webglTexture,et)}C=-1},this.readRenderTargetPixels=function(N,q,et,nt,j,xt,Rt,kt=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ft=vt.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Rt!==void 0&&(Ft=Ft[Rt]),Ft){ut.bindFramebuffer(O.FRAMEBUFFER,Ft);try{const se=N.textures[kt],oe=se.format,Kt=se.type;if(!bt.textureFormatReadable(oe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!bt.textureTypeReadable(Kt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=N.width-nt&&et>=0&&et<=N.height-j&&(N.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+kt),O.readPixels(q,et,nt,j,At.convert(oe),At.convert(Kt),xt))}finally{const se=I!==null?vt.get(I).__webglFramebuffer:null;ut.bindFramebuffer(O.FRAMEBUFFER,se)}}},this.readRenderTargetPixelsAsync=async function(N,q,et,nt,j,xt,Rt,kt=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ft=vt.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Rt!==void 0&&(Ft=Ft[Rt]),Ft)if(q>=0&&q<=N.width-nt&&et>=0&&et<=N.height-j){ut.bindFramebuffer(O.FRAMEBUFFER,Ft);const se=N.textures[kt],oe=se.format,Kt=se.type;if(!bt.textureFormatReadable(oe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!bt.textureTypeReadable(Kt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const xe=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,xe),O.bufferData(O.PIXEL_PACK_BUFFER,xt.byteLength,O.STREAM_READ),N.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+kt),O.readPixels(q,et,nt,j,At.convert(oe),At.convert(Kt),0);const Oe=I!==null?vt.get(I).__webglFramebuffer:null;ut.bindFramebuffer(O.FRAMEBUFFER,Oe);const je=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await EE(O,je,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,xe),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,xt),O.deleteBuffer(xe),O.deleteSync(je),xt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,q=null,et=0){const nt=Math.pow(2,-et),j=Math.floor(N.image.width*nt),xt=Math.floor(N.image.height*nt),Rt=q!==null?q.x:0,kt=q!==null?q.y:0;It.setTexture2D(N,0),O.copyTexSubImage2D(O.TEXTURE_2D,et,0,0,Rt,kt,j,xt),ut.unbindTexture()};const Bo=O.createFramebuffer(),Fo=O.createFramebuffer();this.copyTextureToTexture=function(N,q,et=null,nt=null,j=0,xt=null){xt===null&&(j!==0?(go("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),xt=j,j=0):xt=0);let Rt,kt,Ft,se,oe,Kt,xe,Oe,je;const Be=N.isCompressedTexture?N.mipmaps[xt]:N.image;if(et!==null)Rt=et.max.x-et.min.x,kt=et.max.y-et.min.y,Ft=et.isBox3?et.max.z-et.min.z:1,se=et.min.x,oe=et.min.y,Kt=et.isBox3?et.min.z:0;else{const Gn=Math.pow(2,-j);Rt=Math.floor(Be.width*Gn),kt=Math.floor(Be.height*Gn),N.isDataArrayTexture?Ft=Be.depth:N.isData3DTexture?Ft=Math.floor(Be.depth*Gn):Ft=1,se=0,oe=0,Kt=0}nt!==null?(xe=nt.x,Oe=nt.y,je=nt.z):(xe=0,Oe=0,je=0);const ze=At.convert(q.format),ee=At.convert(q.type);let qe;q.isData3DTexture?(It.setTexture3D(q,0),qe=O.TEXTURE_3D):q.isDataArrayTexture||q.isCompressedArrayTexture?(It.setTexture2DArray(q,0),qe=O.TEXTURE_2D_ARRAY):(It.setTexture2D(q,0),qe=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,q.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,q.unpackAlignment);const Ee=O.getParameter(O.UNPACK_ROW_LENGTH),Cn=O.getParameter(O.UNPACK_IMAGE_HEIGHT),ji=O.getParameter(O.UNPACK_SKIP_PIXELS),Rn=O.getParameter(O.UNPACK_SKIP_ROWS),Bs=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Be.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Be.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,se),O.pixelStorei(O.UNPACK_SKIP_ROWS,oe),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Kt);const We=N.isDataArrayTexture||N.isData3DTexture,Vn=q.isDataArrayTexture||q.isData3DTexture;if(N.isDepthTexture){const Gn=vt.get(N),Mn=vt.get(q),bn=vt.get(Gn.__renderTarget),Ki=vt.get(Mn.__renderTarget);ut.bindFramebuffer(O.READ_FRAMEBUFFER,bn.__webglFramebuffer),ut.bindFramebuffer(O.DRAW_FRAMEBUFFER,Ki.__webglFramebuffer);for(let Ji=0;Ji<Ft;Ji++)We&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,vt.get(N).__webglTexture,j,Kt+Ji),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,vt.get(q).__webglTexture,xt,je+Ji)),O.blitFramebuffer(se,oe,Rt,kt,xe,Oe,Rt,kt,O.DEPTH_BUFFER_BIT,O.NEAREST);ut.bindFramebuffer(O.READ_FRAMEBUFFER,null),ut.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(j!==0||N.isRenderTargetTexture||vt.has(N)){const Gn=vt.get(N),Mn=vt.get(q);ut.bindFramebuffer(O.READ_FRAMEBUFFER,Bo),ut.bindFramebuffer(O.DRAW_FRAMEBUFFER,Fo);for(let bn=0;bn<Ft;bn++)We?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Gn.__webglTexture,j,Kt+bn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Gn.__webglTexture,j),Vn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Mn.__webglTexture,xt,je+bn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Mn.__webglTexture,xt),j!==0?O.blitFramebuffer(se,oe,Rt,kt,xe,Oe,Rt,kt,O.COLOR_BUFFER_BIT,O.NEAREST):Vn?O.copyTexSubImage3D(qe,xt,xe,Oe,je+bn,se,oe,Rt,kt):O.copyTexSubImage2D(qe,xt,xe,Oe,se,oe,Rt,kt);ut.bindFramebuffer(O.READ_FRAMEBUFFER,null),ut.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else Vn?N.isDataTexture||N.isData3DTexture?O.texSubImage3D(qe,xt,xe,Oe,je,Rt,kt,Ft,ze,ee,Be.data):q.isCompressedArrayTexture?O.compressedTexSubImage3D(qe,xt,xe,Oe,je,Rt,kt,Ft,ze,Be.data):O.texSubImage3D(qe,xt,xe,Oe,je,Rt,kt,Ft,ze,ee,Be):N.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,xt,xe,Oe,Rt,kt,ze,ee,Be.data):N.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,xt,xe,Oe,Be.width,Be.height,ze,Be.data):O.texSubImage2D(O.TEXTURE_2D,xt,xe,Oe,Rt,kt,ze,ee,Be);O.pixelStorei(O.UNPACK_ROW_LENGTH,Ee),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Cn),O.pixelStorei(O.UNPACK_SKIP_PIXELS,ji),O.pixelStorei(O.UNPACK_SKIP_ROWS,Rn),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Bs),xt===0&&q.generateMipmaps&&O.generateMipmap(qe),ut.unbindTexture()},this.copyTextureToTexture3D=function(N,q,et=null,nt=null,j=0){return go('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,q,et,nt,j)},this.initRenderTarget=function(N){vt.get(N).__webglFramebuffer===void 0&&It.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?It.setTextureCube(N,0):N.isData3DTexture?It.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?It.setTexture2DArray(N,0):It.setTexture2D(N,0),ut.unbindTexture()},this.resetState=function(){R=0,P=0,I=null,ut.reset(),ie.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ui}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Te._getDrawingBufferColorSpace(t),e.unpackColorSpace=Te._getUnpackColorSpace()}}const F3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Tm,AddEquation:lr,AddOperation:ux,AdditiveAnimationBlendMode:Pm,AdditiveBlending:em,AgXToneMapping:mx,AlphaFormat:Dm,AlwaysCompare:Dx,AlwaysDepth:Ju,AlwaysStencilFunc:rm,AmbientLight:TS,AnimationAction:PS,AnimationClip:$l,AnimationLoader:$T,AnimationMixer:CA,AnimationObjectGroup:AA,AnimationUtils:jT,ArcCurve:Kx,ArrayCamera:US,ArrowHelper:KA,AttachedBindMode:sm,Audio:NS,AudioAnalyser:gA,AudioContext:rg,AudioListener:dA,AudioLoader:uA,AxesHelper:JA,BackSide:Zn,BasicDepthPacking:Sx,BasicShadowMap:Wy,BatchedMesh:Xx,Bone:Gm,BooleanKeyframeTrack:da,Box2:OA,Box3:Fn,Box3Helper:ZA,BoxGeometry:fa,BoxHelper:YA,BufferAttribute:ke,BufferGeometry:ve,BufferGeometryLoader:DS,ByteType:wm,Cache:as,Camera:Kh,CameraHelper:qA,CanvasTexture:_T,CapsuleGeometry:sf,CatmullRomCurve3:Jx,CineonToneMapping:dx,CircleGeometry:rf,ClampToEdgeWrapping:Di,Clock:ag,Color:Ot,ColorKeyframeTrack:ng,ColorManagement:Te,CompressedArrayTexture:gT,CompressedCubeTexture:vT,CompressedTexture:nf,CompressedTextureLoader:tA,ConeGeometry:ac,ConstantAlphaFactor:ox,ConstantColorFactor:rx,Controls:$A,CubeCamera:Bx,CubeReflectionMapping:Is,CubeRefractionMapping:dr,CubeTexture:sc,CubeTextureLoader:eA,CubeUVReflectionMapping:Co,CubicBezierCurve:qm,CubicBezierCurve3:Qx,CubicInterpolant:vS,CullFaceBack:tm,CullFaceFront:ky,CullFaceFrontBack:bb,CullFaceNone:Gy,Curve:Zi,CurvePath:tS,CustomBlending:Xy,CustomToneMapping:px,CylinderGeometry:rc,Cylindrical:IA,Data3DTexture:jh,DataArrayTexture:Zh,DataTexture:ls,DataTextureLoader:nA,DataUtils:VE,DecrementStencilOp:zb,DecrementWrapStencilOp:Fb,DefaultLoadingManager:xS,DepthFormat:xo,DepthStencilFormat:So,DepthTexture:Wm,DetachedBindMode:vx,DirectionalLight:ES,DirectionalLightHelper:XA,DiscreteInterpolant:_S,DodecahedronGeometry:af,DoubleSide:ss,DstAlphaFactor:tx,DstColorFactor:nx,DynamicCopyUsage:tE,DynamicDrawUsage:Zb,DynamicReadUsage:Jb,EdgesGeometry:jx,EllipseCurve:of,EqualCompare:Ax,EqualDepth:$u,EqualStencilFunc:kb,EquirectangularReflectionMapping:Bl,EquirectangularRefractionMapping:Fl,Euler:qi,EventDispatcher:us,ExtrudeGeometry:lf,FileLoader:zs,Float16BufferAttribute:ZE,Float32BufferAttribute:qt,FloatType:ii,Fog:Qh,FogExp2:Jh,FramebufferTexture:mT,FrontSide:Ps,Frustum:Uo,FrustumArray:ef,GLBufferAttribute:LA,GLSL1:nE,GLSL3:am,GreaterCompare:wx,GreaterDepth:eh,GreaterEqualCompare:Rx,GreaterEqualDepth:th,GreaterEqualStencilFunc:Yb,GreaterStencilFunc:Xb,GridHelper:kA,Group:po,HalfFloatType:Ro,HemisphereLight:SS,HemisphereLightHelper:GA,IcosahedronGeometry:cf,ImageBitmapLoader:cA,ImageLoader:tc,ImageUtils:Lx,IncrementStencilOp:Ob,IncrementWrapStencilOp:Bb,InstancedBufferAttribute:To,InstancedBufferGeometry:RS,InstancedInterleavedBuffer:NA,InstancedMesh:Wx,Int16BufferAttribute:qE,Int32BufferAttribute:YE,Int8BufferAttribute:kE,IntType:Vh,InterleavedBuffer:$h,InterleavedBufferAttribute:ca,Interpolant:cc,InterpolateDiscrete:Gl,InterpolateLinear:Rh,InterpolateSmooth:ku,InterpolationSamplingMode:rE,InterpolationSamplingType:sE,InvertStencilOp:Hb,KeepStencilOp:$r,KeyframeTrack:Li,LOD:Gx,LatheGeometry:uf,Layers:bo,LessCompare:Tx,LessDepth:Qu,LessEqualCompare:Im,LessEqualDepth:la,LessEqualStencilFunc:Wb,LessStencilFunc:Gb,Light:yr,LightProbe:CS,Line:mr,Line3:zA,LineBasicMaterial:jn,LineCurve:Ym,LineCurve3:$x,LineDashedMaterial:pS,LineLoop:qx,LineSegments:hs,LinearFilter:pn,LinearInterpolant:eg,LinearMipMapLinearFilter:wb,LinearMipMapNearestFilter:Ab,LinearMipmapLinearFilter:rs,LinearMipmapNearestFilter:Al,LinearSRGBColorSpace:pr,LinearToneMapping:hx,LinearTransfer:Wl,Loader:ri,LoaderUtils:hm,LoadingManager:ig,LoopOnce:_x,LoopPingPong:xx,LoopRepeat:yx,MOUSE:Sb,Material:Hn,MaterialLoader:vf,MathUtils:ME,Matrix2:ug,Matrix3:pe,Matrix4:re,MaxEquation:jy,Mesh:fn,MeshBasicMaterial:vr,MeshDepthMaterial:Qm,MeshDistanceMaterial:$m,MeshLambertMaterial:fS,MeshMatcapMaterial:dS,MeshNormalMaterial:hS,MeshPhongMaterial:cS,MeshPhysicalMaterial:lS,MeshStandardMaterial:Jm,MeshToonMaterial:uS,MinEquation:Zy,MirroredRepeatWrapping:Vl,MixOperation:cx,MultiplyBlending:im,MultiplyOperation:nc,NearestFilter:An,NearestMipMapLinearFilter:Tb,NearestMipMapNearestFilter:Eb,NearestMipmapLinearFilter:ho,NearestMipmapNearestFilter:Am,NeutralToneMapping:gx,NeverCompare:Ex,NeverDepth:Ku,NeverStencilFunc:Vb,NoBlending:Ns,NoColorSpace:Ds,NoToneMapping:os,NormalAnimationBlendMode:Yh,NormalBlending:ra,NotEqualCompare:Cx,NotEqualDepth:nh,NotEqualStencilFunc:qb,NumberKeyframeTrack:Jl,Object3D:De,ObjectLoader:oA,ObjectSpaceNormalMap:bx,OctahedronGeometry:oc,OneFactor:Jy,OneMinusConstantAlphaFactor:lx,OneMinusConstantColorFactor:ax,OneMinusDstAlphaFactor:ex,OneMinusDstColorFactor:ix,OneMinusSrcAlphaFactor:ju,OneMinusSrcColorFactor:$y,OrthographicCamera:hc,PCFShadowMap:Fh,PCFSoftShadowMap:Tl,PMREMGenerator:pm,Path:Lh,PerspectiveCamera:Sn,Plane:or,PlaneGeometry:No,PlaneHelper:jA,PointLight:bS,PointLightHelper:HA,Points:Yx,PointsMaterial:km,PolarGridHelper:WA,PolyhedronGeometry:_r,PositionalAudio:mA,PropertyBinding:Ce,PropertyMixer:LS,QuadraticBezierCurve:Zm,QuadraticBezierCurve3:jm,Quaternion:si,QuaternionKeyframeTrack:uc,QuaternionLinearInterpolant:yS,RED_GREEN_RGTC2_Format:wh,RED_RGTC1_Format:Lm,REVISION:Bh,RGBADepthPacking:Mx,RGBAFormat:Bn,RGBAIntegerFormat:qh,RGBA_ASTC_10x10_Format:Sh,RGBA_ASTC_10x5_Format:_h,RGBA_ASTC_10x6_Format:yh,RGBA_ASTC_10x8_Format:xh,RGBA_ASTC_12x10_Format:Mh,RGBA_ASTC_12x12_Format:bh,RGBA_ASTC_4x4_Format:uh,RGBA_ASTC_5x4_Format:hh,RGBA_ASTC_5x5_Format:fh,RGBA_ASTC_6x5_Format:dh,RGBA_ASTC_6x6_Format:ph,RGBA_ASTC_8x5_Format:mh,RGBA_ASTC_8x6_Format:gh,RGBA_ASTC_8x8_Format:vh,RGBA_BPTC_Format:Ul,RGBA_ETC2_EAC_Format:ch,RGBA_PVRTC_2BPPV1_Format:ah,RGBA_PVRTC_4BPPV1_Format:rh,RGBA_S3TC_DXT1_Format:Cl,RGBA_S3TC_DXT3_Format:Rl,RGBA_S3TC_DXT5_Format:Dl,RGBDepthPacking:Nb,RGBFormat:Um,RGBIntegerFormat:Cb,RGB_BPTC_SIGNED_Format:Eh,RGB_BPTC_UNSIGNED_Format:Th,RGB_ETC1_Format:oh,RGB_ETC2_Format:lh,RGB_PVRTC_2BPPV1_Format:sh,RGB_PVRTC_4BPPV1_Format:ih,RGB_S3TC_DXT1_Format:wl,RGDepthPacking:Lb,RGFormat:Nm,RGIntegerFormat:Xh,RawShaderMaterial:oS,Ray:Do,Raycaster:IS,RectAreaLight:AS,RedFormat:Wh,RedIntegerFormat:ic,ReinhardToneMapping:fx,RenderTarget:zm,RenderTarget3D:RA,RepeatWrapping:Hl,ReplaceStencilOp:Ib,ReverseSubtractEquation:Yy,RingGeometry:hf,SIGNED_RED_GREEN_RGTC2_Format:Ch,SIGNED_RED_RGTC1_Format:Ah,SRGBColorSpace:zn,SRGBTransfer:He,Scene:Hm,ShaderChunk:_e,ShaderLib:Wi,ShaderMaterial:Yi,ShadowMaterial:aS,Shape:oa,ShapeGeometry:ff,ShapePath:QA,ShapeUtils:Xi,ShortType:Cm,Skeleton:tf,SkeletonHelper:FA,SkinnedMesh:kx,Source:hr,Sphere:wn,SphereGeometry:lc,Spherical:PA,SphericalHarmonics3:wS,SplineCurve:Km,SpotLight:MS,SpotLightHelper:BA,Sprite:Vx,SpriteMaterial:Vm,SrcAlphaFactor:Zu,SrcAlphaSaturateFactor:sx,SrcColorFactor:Qy,StaticCopyUsage:$b,StaticDrawUsage:Xl,StaticReadUsage:Kb,StereoCamera:hA,StreamCopyUsage:eE,StreamDrawUsage:jb,StreamReadUsage:Qb,StringKeyframeTrack:pa,SubtractEquation:qy,SubtractiveBlending:nm,TOUCH:Mb,TangentSpaceNormalMap:gr,TetrahedronGeometry:df,Texture:rn,TextureLoader:iA,TextureUtils:s2,TimestampQuery:iE,TorusGeometry:pf,TorusKnotGeometry:mf,Triangle:cr,TriangleFanDrawMode:Ub,TriangleStripDrawMode:Db,TrianglesDrawMode:Rb,TubeGeometry:gf,UVMapping:Hh,Uint16BufferAttribute:Bm,Uint32BufferAttribute:Fm,Uint8BufferAttribute:WE,Uint8ClampedBufferAttribute:XE,Uniform:cg,UniformsGroup:UA,UniformsLib:Ut,UniformsUtils:zx,UnsignedByteType:Ni,UnsignedInt248Type:yo,UnsignedInt5999Type:Rm,UnsignedIntType:Os,UnsignedShort4444Type:Gh,UnsignedShort5551Type:kh,UnsignedShortType:_o,VSMShadowMap:ki,Vector2:pt,Vector3:B,Vector4:Re,VectorKeyframeTrack:Ql,VideoFrameTexture:pT,VideoTexture:Zx,WebGL3DRenderTarget:UE,WebGLArrayRenderTarget:DE,WebGLCoordinateSystem:Ui,WebGLCubeRenderTarget:Fx,WebGLRenderTarget:cs,WebGLRenderer:kS,WebGLUtils:GS,WebGPUCoordinateSystem:ql,WebXRController:Wu,WireframeGeometry:rS,WrapAroundEnding:kl,ZeroCurvatureEnding:na,ZeroFactor:Ky,ZeroSlopeEnding:ia,ZeroStencilOp:Pb,createCanvasElement:Nx},Symbol.toStringTag,{value:"Module"}));var Np={exports:{}},Rs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ty;function H3(){return ty||(ty=1,Rs.ConcurrentRoot=1,Rs.ContinuousEventPriority=8,Rs.DefaultEventPriority=32,Rs.DiscreteEventPriority=2,Rs.IdleEventPriority=268435456,Rs.LegacyRoot=0,Rs.NoEventPriority=0),Rs}var ey;function V3(){return ey||(ey=1,Np.exports=H3()),Np.exports}var qu=V3(),Lp={exports:{}},Pp={},Ip={exports:{}},Op={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ny;function G3(){if(ny)return Op;ny=1;var i=Em();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=i.useState,s=i.useEffect,a=i.useLayoutEffect,l=i.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),M=x[0].inst,S=x[1];return a(function(){M.value=v,M.getSnapshot=g,u(M)&&S({inst:M})},[m,v,g]),s(function(){return u(M)&&S({inst:M}),m(function(){u(M)&&S({inst:M})})},[m]),l(v),v}function u(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var d=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Op.useSyncExternalStore=i.useSyncExternalStore!==void 0?i.useSyncExternalStore:d,Op}var iy;function k3(){return iy||(iy=1,Ip.exports=G3()),Ip.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var sy;function W3(){if(sy)return Pp;sy=1;var i=Em(),t=k3();function e(f,d){return f===d&&(f!==0||1/f===1/d)||f!==f&&d!==d}var n=typeof Object.is=="function"?Object.is:e,s=t.useSyncExternalStore,a=i.useRef,l=i.useEffect,c=i.useMemo,u=i.useDebugValue;return Pp.useSyncExternalStoreWithSelector=function(f,d,m,g,v){var x=a(null);if(x.current===null){var M={hasValue:!1,value:null};x.current=M}else M=x.current;x=c(function(){function _(R){if(!E){if(E=!0,A=R,R=g(R),v!==void 0&&M.hasValue){var P=M.value;if(v(P,R))return T=P}return T=R}if(P=T,n(A,R))return P;var I=g(R);return v!==void 0&&v(P,I)?(A=R,P):(A=R,T=I)}var E=!1,A,T,U=m===void 0?null:m;return[function(){return _(d())},U===null?void 0:function(){return _(U())}]},[d,m,g,v]);var S=s(f,x[0],x[1]);return l(function(){M.hasValue=!0,M.value=S},[S]),u(S),S},Pp}var ry;function X3(){return ry||(ry=1,Lp.exports=W3()),Lp.exports}var q3=X3();const Y3=Vy(q3),ay=i=>{let t;const e=new Set,n=(f,d)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=d??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},s=()=>t,c={setState:n,getState:s,getInitialState:()=>u,subscribe:f=>(e.add(f),()=>e.delete(f))},u=t=i(n,s,c);return c},Z3=i=>i?ay(i):ay,{useSyncExternalStoreWithSelector:j3}=Y3,K3=i=>i;function J3(i,t=K3,e){const n=j3(i.subscribe,i.getState,i.getInitialState,t,e);return _b.useDebugValue(n),n}const oy=(i,t)=>{const e=Z3(i),n=(s,a=t)=>J3(e,s,a);return Object.assign(n,e),n},Q3=(i,t)=>i?oy(i,t):oy;var zp={exports:{}},Bp={exports:{}},Fp={exports:{}},Hp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ly;function $3(){return ly||(ly=1,function(i){function t(H,Y){var G=H.length;H.push(Y);t:for(;0<G;){var st=G-1>>>1,lt=H[st];if(0<s(lt,Y))H[st]=Y,H[G]=lt,G=st;else break t}}function e(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var Y=H[0],G=H.pop();if(G!==Y){H[0]=G;t:for(var st=0,lt=H.length,mt=lt>>>1;st<mt;){var wt=2*(st+1)-1,jt=H[wt],$=wt+1,gt=H[$];if(0>s(jt,G))$<lt&&0>s(gt,jt)?(H[st]=gt,H[$]=G,st=$):(H[st]=jt,H[wt]=G,st=wt);else if($<lt&&0>s(gt,G))H[st]=gt,H[$]=G,st=$;else break t}}return Y}function s(H,Y){var G=H.sortIndex-Y.sortIndex;return G!==0?G:H.id-Y.id}if(i.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var a=performance;i.unstable_now=function(){return a.now()}}else{var l=Date,c=l.now();i.unstable_now=function(){return l.now()-c}}var u=[],f=[],d=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(H){for(var Y=e(f);Y!==null;){if(Y.callback===null)n(f);else if(Y.startTime<=H)n(f),Y.sortIndex=Y.expirationTime,t(u,Y);else break;Y=e(f)}}function T(H){if(M=!1,A(H),!x)if(e(u)!==null)x=!0,W();else{var Y=e(f);Y!==null&&rt(T,Y.startTime-H)}}var U=!1,R=-1,P=5,I=-1;function C(){return!(i.unstable_now()-I<P)}function w(){if(U){var H=i.unstable_now();I=H;var Y=!0;try{t:{x=!1,M&&(M=!1,_(R),R=-1),v=!0;var G=g;try{e:{for(A(H),m=e(u);m!==null&&!(m.expirationTime>H&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var lt=st(m.expirationTime<=H);if(H=i.unstable_now(),typeof lt=="function"){m.callback=lt,A(H),Y=!0;break e}m===e(u)&&n(u),A(H)}else n(u);m=e(u)}if(m!==null)Y=!0;else{var mt=e(f);mt!==null&&rt(T,mt.startTime-H),Y=!1}}break t}finally{m=null,g=G,v=!1}Y=void 0}}finally{Y?z():U=!1}}}var z;if(typeof E=="function")z=function(){E(w)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,k=Z.port2;Z.port1.onmessage=w,z=function(){k.postMessage(null)}}else z=function(){S(w,0)};function W(){U||(U=!0,z())}function rt(H,Y){R=S(function(){H(i.unstable_now())},Y)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(H){H.callback=null},i.unstable_continueExecution=function(){x||v||(x=!0,W())},i.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<H?Math.floor(1e3/H):5},i.unstable_getCurrentPriorityLevel=function(){return g},i.unstable_getFirstCallbackNode=function(){return e(u)},i.unstable_next=function(H){switch(g){case 1:case 2:case 3:var Y=3;break;default:Y=g}var G=g;g=Y;try{return H()}finally{g=G}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(H,Y){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var G=g;g=H;try{return Y()}finally{g=G}},i.unstable_scheduleCallback=function(H,Y,G){var st=i.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,H){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,H={id:d++,callback:Y,priorityLevel:H,startTime:G,expirationTime:lt,sortIndex:-1},G>st?(H.sortIndex=G,t(f,H),e(u)===null&&H===e(f)&&(M?(_(R),R=-1):M=!0,rt(T,G-st))):(H.sortIndex=lt,t(u,H),x||v||(x=!0,W())),H},i.unstable_shouldYield=C,i.unstable_wrapCallback=function(H){var Y=g;return function(){var G=g;g=Y;try{return H.apply(this,arguments)}finally{g=G}}}}(Hp)),Hp}var cy;function tD(){return cy||(cy=1,Fp.exports=$3()),Fp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var uy;function eD(){return uy||(uy=1,function(i){i.exports=function(t){function e(r,o,h,p){return new IM(r,o,h,p)}function n(){}function s(r){var o="https://react.dev/errors/"+r;if(1<arguments.length){o+="?args[]="+encodeURIComponent(arguments[1]);for(var h=2;h<arguments.length;h++)o+="&args[]="+encodeURIComponent(arguments[h])}return"Minified React error #"+r+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(r){return r===null||typeof r!="object"?null:(r=G0&&r[G0]||r["@@iterator"],typeof r=="function"?r:null)}function l(r){if(r==null)return null;if(typeof r=="function")return r.$$typeof===VM?null:r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case ba:return"Fragment";case Ma:return"Portal";case cd:return"Profiler";case F0:return"StrictMode";case hd:return"Suspense";case fd:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case Ws:return(r.displayName||"Context")+".Provider";case H0:return(r._context.displayName||"Context")+".Consumer";case ud:var o=r.render;return r=r.displayName,r||(r=o.displayName||o.name||"",r=r!==""?"ForwardRef("+r+")":"ForwardRef"),r;case dd:return o=r.displayName||null,o!==null?o:l(r.type)||"Memo";case Xs:o=r._payload,r=r._init;try{return l(r(o))}catch{}}return null}function c(r){if(pd===void 0)try{throw Error()}catch(h){var o=h.stack.trim().match(/\n( *(at )?)/);pd=o&&o[1]||"",k0=-1<h.stack.indexOf(`
    at`)?" (<anonymous>)":-1<h.stack.indexOf("@")?"@unknown:0:0":""}return`
`+pd+r+k0}function u(r,o){if(!r||md)return"";md=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var p={DetermineComponentFrameRoot:function(){try{if(o){var Pt=function(){throw Error()};if(Object.defineProperty(Pt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Pt,[])}catch(me){var Bt=me}Reflect.construct(r,[],Pt)}else{try{Pt.call()}catch(me){Bt=me}r.call(Pt.prototype)}}else{try{throw Error()}catch(me){Bt=me}(Pt=r())&&typeof Pt.catch=="function"&&Pt.catch(function(){})}}catch(me){if(me&&Bt&&typeof me.stack=="string")return[me.stack,Bt.stack]}return[null,null]}};p.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(p.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(p.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var b=p.DetermineComponentFrameRoot(),L=b[0],V=b[1];if(L&&V){var J=L.split(`
`),ct=V.split(`
`);for(y=p=0;p<J.length&&!J[p].includes("DetermineComponentFrameRoot");)p++;for(;y<ct.length&&!ct[y].includes("DetermineComponentFrameRoot");)y++;if(p===J.length||y===ct.length)for(p=J.length-1,y=ct.length-1;1<=p&&0<=y&&J[p]!==ct[y];)y--;for(;1<=p&&0<=y;p--,y--)if(J[p]!==ct[y]){if(p!==1||y!==1)do if(p--,y--,0>y||J[p]!==ct[y]){var Et=`
`+J[p].replace(" at new "," at ");return r.displayName&&Et.includes("<anonymous>")&&(Et=Et.replace("<anonymous>",r.displayName)),Et}while(1<=p&&0<=y);break}}}finally{md=!1,Error.prepareStackTrace=h}return(h=r?r.displayName||r.name:"")?c(h):""}function f(r){switch(r.tag){case 26:case 27:case 5:return c(r.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return r=u(r.type,!1),r;case 11:return r=u(r.type.render,!1),r;case 1:return r=u(r.type,!0),r;default:return""}}function d(r){try{var o="";do o+=f(r),r=r.return;while(r);return o}catch(h){return`
Error generating stack: `+h.message+`
`+h.stack}}function m(r){var o=r,h=r;if(r.alternate)for(;o.return;)o=o.return;else{r=o;do o=r,(o.flags&4098)!==0&&(h=o.return),r=o.return;while(r)}return o.tag===3?h:null}function g(r){if(m(r)!==r)throw Error(s(188))}function v(r){var o=r.alternate;if(!o){if(o=m(r),o===null)throw Error(s(188));return o!==r?null:r}for(var h=r,p=o;;){var y=h.return;if(y===null)break;var b=y.alternate;if(b===null){if(p=y.return,p!==null){h=p;continue}break}if(y.child===b.child){for(b=y.child;b;){if(b===h)return g(y),r;if(b===p)return g(y),o;b=b.sibling}throw Error(s(188))}if(h.return!==p.return)h=y,p=b;else{for(var L=!1,V=y.child;V;){if(V===h){L=!0,h=y,p=b;break}if(V===p){L=!0,p=y,h=b;break}V=V.sibling}if(!L){for(V=b.child;V;){if(V===h){L=!0,h=b,p=y;break}if(V===p){L=!0,p=b,h=y;break}V=V.sibling}if(!L)throw Error(s(189))}}if(h.alternate!==p)throw Error(s(190))}if(h.tag!==3)throw Error(s(188));return h.stateNode.current===h?r:o}function x(r){var o=r.tag;if(o===5||o===26||o===27||o===6)return r;for(r=r.child;r!==null;){if(o=x(r),o!==null)return o;r=r.sibling}return null}function M(r){var o=r.tag;if(o===5||o===26||o===27||o===6)return r;for(r=r.child;r!==null;){if(r.tag!==4&&(o=M(r),o!==null))return o;r=r.sibling}return null}function S(r){return{current:r}}function _(r){0>Ta||(r.current=Sd[Ta],Sd[Ta]=null,Ta--)}function E(r,o){Ta++,Sd[Ta]=r.current,r.current=o}function A(r){return r>>>=0,r===0?32:31-(nb(r)/ib|0)|0}function T(r){var o=r&42;if(o!==0)return o;switch(r&-r){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return r&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return r}}function U(r,o){var h=r.pendingLanes;if(h===0)return 0;var p=0,y=r.suspendedLanes,b=r.pingedLanes,L=r.warmLanes;r=r.finishedLanes!==0;var V=h&134217727;return V!==0?(h=V&~y,h!==0?p=T(h):(b&=V,b!==0?p=T(b):r||(L=V&~L,L!==0&&(p=T(L))))):(V=h&~y,V!==0?p=T(V):b!==0?p=T(b):r||(L=h&~L,L!==0&&(p=T(L)))),p===0?0:o!==0&&o!==p&&(o&y)===0&&(y=p&-p,L=o&-o,y>=L||y===32&&(L&4194176)!==0)?o:p}function R(r,o){return(r.pendingLanes&~(r.suspendedLanes&~r.pingedLanes)&o)===0}function P(r,o){switch(r){case 1:case 2:case 4:case 8:return o+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function I(){var r=Dc;return Dc<<=1,(Dc&4194176)===0&&(Dc=128),r}function C(){var r=Uc;return Uc<<=1,(Uc&62914560)===0&&(Uc=4194304),r}function w(r){for(var o=[],h=0;31>h;h++)o.push(r);return o}function z(r,o){r.pendingLanes|=o,o!==268435456&&(r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0)}function Z(r,o,h,p,y,b){var L=r.pendingLanes;r.pendingLanes=h,r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0,r.expiredLanes&=h,r.entangledLanes&=h,r.errorRecoveryDisabledLanes&=h,r.shellSuspendCounter=0;var V=r.entanglements,J=r.expirationTimes,ct=r.hiddenUpdates;for(h=L&~h;0<h;){var Et=31-hi(h),Pt=1<<Et;V[Et]=0,J[Et]=-1;var Bt=ct[Et];if(Bt!==null)for(ct[Et]=null,Et=0;Et<Bt.length;Et++){var me=Bt[Et];me!==null&&(me.lane&=-536870913)}h&=~Pt}p!==0&&k(r,p,0),b!==0&&y===0&&r.tag!==0&&(r.suspendedLanes|=b&~(L&~o))}function k(r,o,h){r.pendingLanes|=o,r.suspendedLanes&=~o;var p=31-hi(o);r.entangledLanes|=o,r.entanglements[p]=r.entanglements[p]|1073741824|h&4194218}function W(r,o){var h=r.entangledLanes|=o;for(r=r.entanglements;h;){var p=31-hi(h),y=1<<p;y&o|r[p]&o&&(r[p]|=o),h&=~y}}function rt(r){return r&=-r,2<r?8<r?(r&134217727)!==0?32:268435456:8:2}function H(r){if(fi&&typeof fi.onCommitFiberRoot=="function")try{fi.onCommitFiberRoot(Jo,r,void 0,(r.current.flags&128)===128)}catch{}}function Y(r){if(typeof lb=="function"&&cb(r),fi&&typeof fi.setStrictMode=="function")try{fi.setStrictMode(Jo,r)}catch{}}function G(r,o){return r===o&&(r!==0||1/r===1/o)||r!==r&&o!==o}function st(r,o){if(typeof r=="object"&&r!==null){var h=mv.get(r);return h!==void 0?h:(o={value:r,source:o,stack:d(o)},mv.set(r,o),o)}return{value:r,source:o,stack:d(o)}}function lt(r,o){wa[Ca++]=Pc,wa[Ca++]=Lc,Lc=r,Pc=o}function mt(r,o,h){bi[Ei++]=vs,bi[Ei++]=_s,bi[Ei++]=Rr,Rr=r;var p=vs;r=_s;var y=32-hi(p)-1;p&=~(1<<y),h+=1;var b=32-hi(o)+y;if(30<b){var L=y-y%5;b=(p&(1<<L)-1).toString(32),p>>=L,y-=L,vs=1<<32-hi(o)+y|h<<y|p,_s=b+r}else vs=1<<b|h<<y|p,_s=r}function wt(r){r.return!==null&&(lt(r,1),mt(r,1,0))}function jt(r){for(;r===Lc;)Lc=wa[--Ca],wa[Ca]=null,Pc=wa[--Ca],wa[Ca]=null;for(;r===Rr;)Rr=bi[--Ei],bi[Ei]=null,_s=bi[--Ei],bi[Ei]=null,vs=bi[--Ei],bi[Ei]=null}function $(r,o){E(Ys,o),E(Qo,r),E(Tn,null),r=WM(o),_(Tn),E(Tn,r)}function gt(){_(Tn),_(Qo),_(Ys)}function Wt(r){r.memoizedState!==null&&E(Ic,r);var o=Tn.current,h=XM(o,r.type);o!==h&&(E(Qo,r),E(Tn,h))}function Dt(r){Qo.current===r&&(_(Tn),_(Qo)),Ic.current===r&&(_(Ic),gs?Cr._currentValue=Ea:Cr._currentValue2=Ea)}function Vt(r){var o=Error(s(418,""));throw le(st(o,r)),Ed}function fe(r,o){if(!Si)throw Error(s(175));B1(r.stateNode,r.type,r.memoizedProps,o,r)||Vt(r)}function Jt(r){for(Wn=r.return;Wn;)switch(Wn.tag){case 3:case 27:Qi=!0;return;case 5:case 13:Qi=!1;return;default:Wn=Wn.return}}function Pe(r){if(!Si||r!==Wn)return!1;if(!Ue)return Jt(r),Ue=!0,!1;var o=!1;if(Nn?r.tag!==3&&r.tag!==27&&(r.tag!==5||sv(r.type)&&!Rc(r.type,r.memoizedProps))&&(o=!0):r.tag!==3&&(r.tag!==5||sv(r.type)&&!Rc(r.type,r.memoizedProps))&&(o=!0),o&&Ln&&Vt(r),Jt(r),r.tag===13){if(!Si)throw Error(s(316));if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(s(317));Ln=V1(r)}else Ln=Wn?nv(r.stateNode):null;return!0}function ye(){Si&&(Ln=Wn=null,Ue=!1)}function le(r){Bi===null?Bi=[r]:Bi.push(r)}function O(){for(var r=Ra,o=Td=Ra=0;o<r;){var h=Ti[o];Ti[o++]=null;var p=Ti[o];Ti[o++]=null;var y=Ti[o];Ti[o++]=null;var b=Ti[o];if(Ti[o++]=null,p!==null&&y!==null){var L=p.pending;L===null?y.next=y:(y.next=L.next,L.next=y),p.pending=y}b!==0&&ut(h,y,b)}}function Tt(r,o,h,p){Ti[Ra++]=r,Ti[Ra++]=o,Ti[Ra++]=h,Ti[Ra++]=p,Td|=p,r.lanes|=p,r=r.alternate,r!==null&&(r.lanes|=p)}function _t(r,o,h,p){return Tt(r,o,h,p),zt(r)}function bt(r,o){return Tt(r,null,null,o),zt(r)}function ut(r,o,h){r.lanes|=h;var p=r.alternate;p!==null&&(p.lanes|=h);for(var y=!1,b=r.return;b!==null;)b.childLanes|=h,p=b.alternate,p!==null&&(p.childLanes|=h),b.tag===22&&(r=b.stateNode,r===null||r._visibility&1||(y=!0)),r=b,b=b.return;y&&o!==null&&r.tag===3&&(b=r.stateNode,y=31-hi(h),b=b.hiddenUpdates,r=b[y],r===null?b[y]=[o]:r.push(o),o.lane=h|536870912)}function zt(r){if(50<ol)throw ol=0,Vd=null,Error(s(185));for(var o=r.return;o!==null;)r=o,o=r.return;return r.tag===3?r.stateNode:null}function vt(r){r!==Da&&r.next===null&&(Da===null?Oc=Da=r:Da=Da.next=r),zc=!0,Ad||(Ad=!0,at(ue))}function It(r,o){if(!wd&&zc){wd=!0;do for(var h=!1,p=Oc;p!==null;){if(r!==0){var y=p.pendingLanes;if(y===0)var b=0;else{var L=p.suspendedLanes,V=p.pingedLanes;b=(1<<31-hi(42|r)+1)-1,b&=y&~(L&~V),b=b&201326677?b&201326677|1:b?b|2:0}b!==0&&(h=!0,Q(p,b))}else b=we,b=U(p,p===Ye?b:0),(b&3)===0||R(p,b)||(h=!0,Q(p,b));p=p.next}while(h);wd=!1}}function ue(){zc=Ad=!1;var r=0;Ua!==0&&($M()&&(r=Ua),Ua=0);for(var o=zi(),h=null,p=Oc;p!==null;){var y=p.next,b=F(p,o);b===0?(p.next=null,h===null?Oc=y:h.next=y,y===null&&(Da=h)):(h=p,(r!==0||(b&3)!==0)&&(zc=!0)),p=y}It(r)}function F(r,o){for(var h=r.suspendedLanes,p=r.pingedLanes,y=r.expirationTimes,b=r.pendingLanes&-62914561;0<b;){var L=31-hi(b),V=1<<L,J=y[L];J===-1?((V&h)===0||(V&p)!==0)&&(y[L]=P(V,o)):J<=o&&(r.expiredLanes|=V),b&=~V}if(o=Ye,h=we,h=U(r,r===o?h:0),p=r.callbackNode,h===0||r===o&&Ze===2||r.cancelPendingCommit!==null)return p!==null&&p!==null&&Md(p),r.callbackNode=null,r.callbackPriority=0;if((h&3)===0||R(r,h)){if(o=h&-h,o===r.callbackPriority)return o;switch(p!==null&&Md(p),rt(h)){case 2:case 8:h=ab;break;case 32:h=bd;break;case 268435456:h=ob;break;default:h=bd}return p=D.bind(null,r),h=Nc(h,p),r.callbackPriority=o,r.callbackNode=h,o}return p!==null&&p!==null&&Md(p),r.callbackPriority=2,r.callbackNode=null,2}function D(r,o){var h=r.callbackNode;if(Tr()&&r.callbackNode!==h)return null;var p=we;return p=U(r,r===Ye?p:0),p===0?null:(_0(r,p,o),F(r,zi()),r.callbackNode!=null&&r.callbackNode===h?D.bind(null,r):null)}function Q(r,o){if(Tr())return null;_0(r,o,!0)}function at(r){r1?a1(function(){(Ge&6)!==0?Nc(pv,r):r()}):Nc(pv,r)}function dt(){return Ua===0&&(Ua=I()),Ua}function ot(r,o){if($o===null){var h=$o=[];Cd=0,Na=dt(),La={status:"pending",value:void 0,then:function(p){h.push(p)}}}return Cd++,o.then(Zt,Zt),o}function Zt(){if(--Cd===0&&$o!==null){La!==null&&(La.status="fulfilled");var r=$o;$o=null,Na=0,La=null;for(var o=0;o<r.length;o++)(0,r[o])()}}function Ct(r,o){var h=[],p={status:"pending",value:null,reason:null,then:function(y){h.push(y)}};return r.then(function(){p.status="fulfilled",p.value=o;for(var y=0;y<h.length;y++)(0,h[y])(o)},function(y){for(p.status="rejected",p.reason=y,y=0;y<h.length;y++)(0,h[y])(void 0)}),p}function Gt(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Yt(r,o){r=r.updateQueue,o.updateQueue===r&&(o.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,callbacks:null})}function ft(r){return{lane:r,tag:0,payload:null,callback:null,next:null}}function Lt(r,o,h){var p=r.updateQueue;if(p===null)return null;if(p=p.shared,(Ge&2)!==0){var y=p.pending;return y===null?o.next=o:(o.next=y.next,y.next=o),p.pending=o,o=zt(r),ut(r,null,h),o}return Tt(r,p,o,h),zt(r)}function $t(r,o,h){if(o=o.updateQueue,o!==null&&(o=o.shared,(h&4194176)!==0)){var p=o.lanes;p&=r.pendingLanes,h|=p,o.lanes=h,W(r,h)}}function te(r,o){var h=r.updateQueue,p=r.alternate;if(p!==null&&(p=p.updateQueue,h===p)){var y=null,b=null;if(h=h.firstBaseUpdate,h!==null){do{var L={lane:h.lane,tag:h.tag,payload:h.payload,callback:null,next:null};b===null?y=b=L:b=b.next=L,h=h.next}while(h!==null);b===null?y=b=o:b=b.next=o}else y=b=o;h={baseState:p.baseState,firstBaseUpdate:y,lastBaseUpdate:b,shared:p.shared,callbacks:p.callbacks},r.updateQueue=h;return}r=h.lastBaseUpdate,r===null?h.firstBaseUpdate=o:r.next=o,h.lastBaseUpdate=o}function At(){if(Rd){var r=La;if(r!==null)throw r}}function ie(r,o,h,p){Rd=!1;var y=r.updateQueue;Zs=!1;var b=y.firstBaseUpdate,L=y.lastBaseUpdate,V=y.shared.pending;if(V!==null){y.shared.pending=null;var J=V,ct=J.next;J.next=null,L===null?b=ct:L.next=ct,L=J;var Et=r.alternate;Et!==null&&(Et=Et.updateQueue,V=Et.lastBaseUpdate,V!==L&&(V===null?Et.firstBaseUpdate=ct:V.next=ct,Et.lastBaseUpdate=J))}if(b!==null){var Pt=y.baseState;L=0,Et=ct=J=null,V=b;do{var Bt=V.lane&-536870913,me=Bt!==V.lane;if(me?(we&Bt)===Bt:(p&Bt)===Bt){Bt!==0&&Bt===Na&&(Rd=!0),Et!==null&&(Et=Et.next={lane:0,tag:V.tag,payload:V.payload,callback:null,next:null});t:{var Ci=r,ll=V;Bt=o;var Br=h;switch(ll.tag){case 1:if(Ci=ll.payload,typeof Ci=="function"){Pt=Ci.call(Br,Pt,Bt);break t}Pt=Ci;break t;case 3:Ci.flags=Ci.flags&-65537|128;case 0:if(Ci=ll.payload,Bt=typeof Ci=="function"?Ci.call(Br,Pt,Bt):Ci,Bt==null)break t;Pt=ld({},Pt,Bt);break t;case 2:Zs=!0}}Bt=V.callback,Bt!==null&&(r.flags|=64,me&&(r.flags|=8192),me=y.callbacks,me===null?y.callbacks=[Bt]:me.push(Bt))}else me={lane:Bt,tag:V.tag,payload:V.payload,callback:V.callback,next:null},Et===null?(ct=Et=me,J=Pt):Et=Et.next=me,L|=Bt;if(V=V.next,V===null){if(V=y.shared.pending,V===null)break;me=V,V=me.next,me.next=null,y.lastBaseUpdate=me,y.shared.pending=null}}while(!0);Et===null&&(J=Pt),y.baseState=J,y.firstBaseUpdate=ct,y.lastBaseUpdate=Et,b===null&&(y.shared.lanes=0),Js|=L,r.lanes=L,r.memoizedState=Pt}}function X(r,o){if(typeof r!="function")throw Error(s(191,r));r.call(o)}function Nt(r,o){var h=r.callbacks;if(h!==null)for(r.callbacks=null,r=0;r<h.length;r++)X(h[r],o)}function yt(r,o){if(di(r,o))return!0;if(typeof r!="object"||r===null||typeof o!="object"||o===null)return!1;var h=Object.keys(r),p=Object.keys(o);if(h.length!==p.length)return!1;for(p=0;p<h.length;p++){var y=h[p];if(!ub.call(o,y)||!di(r[y],o[y]))return!1}return!0}function Ht(r){return r=r.status,r==="fulfilled"||r==="rejected"}function St(){}function ht(r,o,h){switch(h=r[h],h===void 0?r.push(o):h!==o&&(o.then(St,St),o=h),o.status){case"fulfilled":return o.value;case"rejected":throw r=o.reason,r===tl?Error(s(483)):r;default:if(typeof o.status=="string")o.then(St,St);else{if(r=Ye,r!==null&&100<r.shellSuspendCounter)throw Error(s(482));r=o,r.status="pending",r.then(function(p){if(o.status==="pending"){var y=o;y.status="fulfilled",y.value=p}},function(p){if(o.status==="pending"){var y=o;y.status="rejected",y.reason=p}})}switch(o.status){case"fulfilled":return o.value;case"rejected":throw r=o.reason,r===tl?Error(s(483)):r}throw Pa=o,tl}}function Xt(){if(Pa===null)throw Error(s(459));var r=Pa;return Pa=null,r}function ae(r){var o=el;return el+=1,Ia===null&&(Ia=[]),ht(Ia,r,o)}function Ie(r,o){o=o.props.ref,r.ref=o!==void 0?o:null}function Ae(r,o){throw o.$$typeof===BM?Error(s(525)):(r=Object.prototype.toString.call(o),Error(s(31,r==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":r)))}function Kn(r){var o=r._init;return o(r._payload)}function yi(r){function o(tt,K){if(r){var it=tt.deletions;it===null?(tt.deletions=[K],tt.flags|=16):it.push(K)}}function h(tt,K){if(!r)return null;for(;K!==null;)o(tt,K),K=K.sibling;return null}function p(tt){for(var K=new Map;tt!==null;)tt.key!==null?K.set(tt.key,tt):K.set(tt.index,tt),tt=tt.sibling;return K}function y(tt,K){return tt=ks(tt,K),tt.index=0,tt.sibling=null,tt}function b(tt,K,it){return tt.index=it,r?(it=tt.alternate,it!==null?(it=it.index,it<K?(tt.flags|=33554434,K):it):(tt.flags|=33554434,K)):(tt.flags|=1048576,K)}function L(tt){return r&&tt.alternate===null&&(tt.flags|=33554434),tt}function V(tt,K,it,Mt){return K===null||K.tag!==6?(K=rd(it,tt.mode,Mt),K.return=tt,K):(K=y(K,it),K.return=tt,K)}function J(tt,K,it,Mt){var Qt=it.type;return Qt===ba?Et(tt,K,it.props.children,Mt,it.key):K!==null&&(K.elementType===Qt||typeof Qt=="object"&&Qt!==null&&Qt.$$typeof===Xs&&Kn(Qt)===K.type)?(K=y(K,it.props),Ie(K,it),K.return=tt,K):(K=Ac(it.type,it.key,it.props,null,tt.mode,Mt),Ie(K,it),K.return=tt,K)}function ct(tt,K,it,Mt){return K===null||K.tag!==4||K.stateNode.containerInfo!==it.containerInfo||K.stateNode.implementation!==it.implementation?(K=ad(it,tt.mode,Mt),K.return=tt,K):(K=y(K,it.children||[]),K.return=tt,K)}function Et(tt,K,it,Mt,Qt){return K===null||K.tag!==7?(K=Ar(it,tt.mode,Mt,Qt),K.return=tt,K):(K=y(K,it),K.return=tt,K)}function Pt(tt,K,it){if(typeof K=="string"&&K!==""||typeof K=="number"||typeof K=="bigint")return K=rd(""+K,tt.mode,it),K.return=tt,K;if(typeof K=="object"&&K!==null){switch(K.$$typeof){case wc:return it=Ac(K.type,K.key,K.props,null,tt.mode,it),Ie(it,K),it.return=tt,it;case Ma:return K=ad(K,tt.mode,it),K.return=tt,K;case Xs:var Mt=K._init;return K=Mt(K._payload),Pt(tt,K,it)}if(Cc(K)||a(K))return K=Ar(K,tt.mode,it,null),K.return=tt,K;if(typeof K.then=="function")return Pt(tt,ae(K),it);if(K.$$typeof===Ws)return Pt(tt,xc(tt,K),it);Ae(tt,K)}return null}function Bt(tt,K,it,Mt){var Qt=K!==null?K.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return Qt!==null?null:V(tt,K,""+it,Mt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case wc:return it.key===Qt?J(tt,K,it,Mt):null;case Ma:return it.key===Qt?ct(tt,K,it,Mt):null;case Xs:return Qt=it._init,it=Qt(it._payload),Bt(tt,K,it,Mt)}if(Cc(it)||a(it))return Qt!==null?null:Et(tt,K,it,Mt,null);if(typeof it.then=="function")return Bt(tt,K,ae(it),Mt);if(it.$$typeof===Ws)return Bt(tt,K,xc(tt,it),Mt);Ae(tt,it)}return null}function me(tt,K,it,Mt,Qt){if(typeof Mt=="string"&&Mt!==""||typeof Mt=="number"||typeof Mt=="bigint")return tt=tt.get(it)||null,V(K,tt,""+Mt,Qt);if(typeof Mt=="object"&&Mt!==null){switch(Mt.$$typeof){case wc:return tt=tt.get(Mt.key===null?it:Mt.key)||null,J(K,tt,Mt,Qt);case Ma:return tt=tt.get(Mt.key===null?it:Mt.key)||null,ct(K,tt,Mt,Qt);case Xs:var Ke=Mt._init;return Mt=Ke(Mt._payload),me(tt,K,it,Mt,Qt)}if(Cc(Mt)||a(Mt))return tt=tt.get(it)||null,Et(K,tt,Mt,Qt,null);if(typeof Mt.then=="function")return me(tt,K,it,ae(Mt),Qt);if(Mt.$$typeof===Ws)return me(tt,K,it,xc(K,Mt),Qt);Ae(K,Mt)}return null}function Ci(tt,K,it,Mt){for(var Qt=null,Ke=null,ce=K,Ne=K=0,yn=null;ce!==null&&Ne<it.length;Ne++){ce.index>Ne?(yn=ce,ce=null):yn=ce.sibling;var Le=Bt(tt,ce,it[Ne],Mt);if(Le===null){ce===null&&(ce=yn);break}r&&ce&&Le.alternate===null&&o(tt,ce),K=b(Le,K,Ne),Ke===null?Qt=Le:Ke.sibling=Le,Ke=Le,ce=yn}if(Ne===it.length)return h(tt,ce),Ue&&lt(tt,Ne),Qt;if(ce===null){for(;Ne<it.length;Ne++)ce=Pt(tt,it[Ne],Mt),ce!==null&&(K=b(ce,K,Ne),Ke===null?Qt=ce:Ke.sibling=ce,Ke=ce);return Ue&&lt(tt,Ne),Qt}for(ce=p(ce);Ne<it.length;Ne++)yn=me(ce,tt,Ne,it[Ne],Mt),yn!==null&&(r&&yn.alternate!==null&&ce.delete(yn.key===null?Ne:yn.key),K=b(yn,K,Ne),Ke===null?Qt=yn:Ke.sibling=yn,Ke=yn);return r&&ce.forEach(function($s){return o(tt,$s)}),Ue&&lt(tt,Ne),Qt}function ll(tt,K,it,Mt){if(it==null)throw Error(s(151));for(var Qt=null,Ke=null,ce=K,Ne=K=0,yn=null,Le=it.next();ce!==null&&!Le.done;Ne++,Le=it.next()){ce.index>Ne?(yn=ce,ce=null):yn=ce.sibling;var $s=Bt(tt,ce,Le.value,Mt);if($s===null){ce===null&&(ce=yn);break}r&&ce&&$s.alternate===null&&o(tt,ce),K=b($s,K,Ne),Ke===null?Qt=$s:Ke.sibling=$s,Ke=$s,ce=yn}if(Le.done)return h(tt,ce),Ue&&lt(tt,Ne),Qt;if(ce===null){for(;!Le.done;Ne++,Le=it.next())Le=Pt(tt,Le.value,Mt),Le!==null&&(K=b(Le,K,Ne),Ke===null?Qt=Le:Ke.sibling=Le,Ke=Le);return Ue&&lt(tt,Ne),Qt}for(ce=p(ce);!Le.done;Ne++,Le=it.next())Le=me(ce,tt,Ne,Le.value,Mt),Le!==null&&(r&&Le.alternate!==null&&ce.delete(Le.key===null?Ne:Le.key),K=b(Le,K,Ne),Ke===null?Qt=Le:Ke.sibling=Le,Ke=Le);return r&&ce.forEach(function(vb){return o(tt,vb)}),Ue&&lt(tt,Ne),Qt}function Br(tt,K,it,Mt){if(typeof it=="object"&&it!==null&&it.type===ba&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case wc:t:{for(var Qt=it.key;K!==null;){if(K.key===Qt){if(Qt=it.type,Qt===ba){if(K.tag===7){h(tt,K.sibling),Mt=y(K,it.props.children),Mt.return=tt,tt=Mt;break t}}else if(K.elementType===Qt||typeof Qt=="object"&&Qt!==null&&Qt.$$typeof===Xs&&Kn(Qt)===K.type){h(tt,K.sibling),Mt=y(K,it.props),Ie(Mt,it),Mt.return=tt,tt=Mt;break t}h(tt,K);break}else o(tt,K);K=K.sibling}it.type===ba?(Mt=Ar(it.props.children,tt.mode,Mt,it.key),Mt.return=tt,tt=Mt):(Mt=Ac(it.type,it.key,it.props,null,tt.mode,Mt),Ie(Mt,it),Mt.return=tt,tt=Mt)}return L(tt);case Ma:t:{for(Qt=it.key;K!==null;){if(K.key===Qt)if(K.tag===4&&K.stateNode.containerInfo===it.containerInfo&&K.stateNode.implementation===it.implementation){h(tt,K.sibling),Mt=y(K,it.children||[]),Mt.return=tt,tt=Mt;break t}else{h(tt,K);break}else o(tt,K);K=K.sibling}Mt=ad(it,tt.mode,Mt),Mt.return=tt,tt=Mt}return L(tt);case Xs:return Qt=it._init,it=Qt(it._payload),Br(tt,K,it,Mt)}if(Cc(it))return Ci(tt,K,it,Mt);if(a(it)){if(Qt=a(it),typeof Qt!="function")throw Error(s(150));return it=Qt.call(it),ll(tt,K,it,Mt)}if(typeof it.then=="function")return Br(tt,K,ae(it),Mt);if(it.$$typeof===Ws)return Br(tt,K,xc(tt,it),Mt);Ae(tt,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,K!==null&&K.tag===6?(h(tt,K.sibling),Mt=y(K,it),Mt.return=tt,tt=Mt):(h(tt,K),Mt=rd(it,tt.mode,Mt),Mt.return=tt,tt=Mt),L(tt)):h(tt,K)}return function(tt,K,it,Mt){try{el=0;var Qt=Br(tt,K,it,Mt);return Ia=null,Qt}catch(ce){if(ce===tl)throw ce;var Ke=e(29,ce,null,tt.mode);return Ke.lanes=Mt,Ke.return=tt,Ke}finally{}}}function Io(r,o){r=Ms,E(Fc,r),E(Oa,o),Ms=r|o.baseLanes}function ma(){E(Fc,Ms),E(Oa,Oa.current)}function Pi(){Ms=Fc.current,_(Oa),_(Fc)}function xi(r){var o=r.alternate;E(dn,dn.current&1),E(Ai,r),$i===null&&(o===null||Oa.current!==null||o.memoizedState!==null)&&($i=r)}function Oo(r){if(r.tag===22){if(E(dn,dn.current),E(Ai,r),$i===null){var o=r.alternate;o!==null&&o.memoizedState!==null&&($i=r)}}else Ii()}function Ii(){E(dn,dn.current),E(Ai,Ai.current)}function Jn(r){_(Ai),$i===r&&($i=null),_(dn)}function xr(r){for(var o=r;o!==null;){if(o.tag===13){var h=o.memoizedState;if(h!==null&&(h=h.dehydrated,h===null||_d(h)||yd(h)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}function Xe(){throw Error(s(321))}function ga(r,o){if(o===null)return!1;for(var h=0;h<o.length&&h<r.length;h++)if(!di(r[h],o[h]))return!1;return!0}function va(r,o,h,p,y,b){return js=b,Se=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,he.H=r===null||r.memoizedState===null?Nr:Ks,Ur=!1,b=h(p,y),Ur=!1,za&&(b=pc(o,h,p,y)),dc(r),b}function dc(r){he.H=ts;var o=Ve!==null&&Ve.next!==null;if(js=0,on=Ve=Se=null,Hc=!1,nl=0,Ba=null,o)throw Error(s(300));r===null||vn||(r=r.dependencies,r!==null&&yc(r)&&(vn=!0))}function pc(r,o,h,p){Se=r;var y=0;do{if(za&&(Ba=null),nl=0,za=!1,25<=y)throw Error(s(301));if(y+=1,on=Ve=null,r.updateQueue!=null){var b=r.updateQueue;b.lastEffect=null,b.events=null,b.stores=null,b.memoCache!=null&&(b.memoCache.index=0)}he.H=Lr,b=o(h,p)}while(za);return b}function xf(){var r=he.H,o=r.useState()[0];return o=typeof o.then=="function"?et(o):o,r=r.useState()[0],(Ve!==null?Ve.memoizedState:null)!==r&&(Se.flags|=1024),o}function zo(){var r=Vc!==0;return Vc=0,r}function Bo(r,o,h){o.updateQueue=r.updateQueue,o.flags&=-2053,r.lanes&=~h}function Fo(r){if(Hc){for(r=r.memoizedState;r!==null;){var o=r.queue;o!==null&&(o.pending=null),r=r.next}Hc=!1}js=0,on=Ve=Se=null,za=!1,nl=Vc=0,Ba=null}function N(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return on===null?Se.memoizedState=on=r:on=on.next=r,on}function q(){if(Ve===null){var r=Se.alternate;r=r!==null?r.memoizedState:null}else r=Ve.next;var o=on===null?Se.memoizedState:on.next;if(o!==null)on=o,Ve=r;else{if(r===null)throw Se.alternate===null?Error(s(467)):Error(s(310));Ve=r,r={memoizedState:Ve.memoizedState,baseState:Ve.baseState,baseQueue:Ve.baseQueue,queue:Ve.queue,next:null},on===null?Se.memoizedState=on=r:on=on.next=r}return on}function et(r){var o=nl;return nl+=1,Ba===null&&(Ba=[]),r=ht(Ba,r,o),o=Se,(on===null?o.memoizedState:on.next)===null&&(o=o.alternate,he.H=o===null||o.memoizedState===null?Nr:Ks),r}function nt(r){if(r!==null&&typeof r=="object"){if(typeof r.then=="function")return et(r);if(r.$$typeof===Ws)return Dn(r)}throw Error(s(438,String(r)))}function j(r){var o=null,h=Se.updateQueue;if(h!==null&&(o=h.memoCache),o==null){var p=Se.alternate;p!==null&&(p=p.updateQueue,p!==null&&(p=p.memoCache,p!=null&&(o={data:p.data.map(function(y){return y.slice()}),index:0})))}if(o==null&&(o={data:[],index:0}),h===null&&(h=Ud(),Se.updateQueue=h),h.memoCache=o,h=o.data[o.index],h===void 0)for(h=o.data[o.index]=Array(r),p=0;p<r;p++)h[p]=HM;return o.index++,h}function xt(r,o){return typeof o=="function"?o(r):o}function Rt(r){var o=q();return kt(o,Ve,r)}function kt(r,o,h){var p=r.queue;if(p===null)throw Error(s(311));p.lastRenderedReducer=h;var y=r.baseQueue,b=p.pending;if(b!==null){if(y!==null){var L=y.next;y.next=b.next,b.next=L}o.baseQueue=y=b,p.pending=null}if(b=r.baseState,y===null)r.memoizedState=b;else{o=y.next;var V=L=null,J=null,ct=o,Et=!1;do{var Pt=ct.lane&-536870913;if(Pt!==ct.lane?(we&Pt)===Pt:(js&Pt)===Pt){var Bt=ct.revertLane;if(Bt===0)J!==null&&(J=J.next={lane:0,revertLane:0,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null}),Pt===Na&&(Et=!0);else if((js&Bt)===Bt){ct=ct.next,Bt===Na&&(Et=!0);continue}else Pt={lane:0,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},J===null?(V=J=Pt,L=b):J=J.next=Pt,Se.lanes|=Bt,Js|=Bt;Pt=ct.action,Ur&&h(b,Pt),b=ct.hasEagerState?ct.eagerState:h(b,Pt)}else Bt={lane:Pt,revertLane:ct.revertLane,action:ct.action,hasEagerState:ct.hasEagerState,eagerState:ct.eagerState,next:null},J===null?(V=J=Bt,L=b):J=J.next=Bt,Se.lanes|=Pt,Js|=Pt;ct=ct.next}while(ct!==null&&ct!==o);if(J===null?L=b:J.next=V,!di(b,r.memoizedState)&&(vn=!0,Et&&(h=La,h!==null)))throw h;r.memoizedState=b,r.baseState=L,r.baseQueue=J,p.lastRenderedState=b}return y===null&&(p.lanes=0),[r.memoizedState,p.dispatch]}function Ft(r){var o=q(),h=o.queue;if(h===null)throw Error(s(311));h.lastRenderedReducer=r;var p=h.dispatch,y=h.pending,b=o.memoizedState;if(y!==null){h.pending=null;var L=y=y.next;do b=r(b,L.action),L=L.next;while(L!==y);di(b,o.memoizedState)||(vn=!0),o.memoizedState=b,o.baseQueue===null&&(o.baseState=b),h.lastRenderedState=b}return[b,p]}function se(r,o,h){var p=Se,y=q(),b=Ue;if(b){if(h===void 0)throw Error(s(407));h=h()}else h=o();var L=!di((Ve||y).memoizedState,h);if(L&&(y.memoizedState=h,vn=!0),y=y.queue,Sf(xe.bind(null,p,y,r),[r]),y.getSnapshot!==o||L||on!==null&&on.memoizedState.tag&1){if(p.flags|=2048,Ki(9,Kt.bind(null,p,y,h,o),{destroy:void 0},null),Ye===null)throw Error(s(349));b||(js&60)!==0||oe(p,o,h)}return h}function oe(r,o,h){r.flags|=16384,r={getSnapshot:o,value:h},o=Se.updateQueue,o===null?(o=Ud(),Se.updateQueue=o,o.stores=[r]):(h=o.stores,h===null?o.stores=[r]:h.push(r))}function Kt(r,o,h,p){o.value=h,o.getSnapshot=p,Oe(o)&&je(r)}function xe(r,o,h){return h(function(){Oe(o)&&je(r)})}function Oe(r){var o=r.getSnapshot;r=r.value;try{var h=o();return!di(r,h)}catch{return!0}}function je(r){var o=bt(r,2);o!==null&&kn(o,r,2)}function Be(r){var o=N();if(typeof r=="function"){var h=r;if(r=h(),Ur){Y(!0);try{h()}finally{Y(!1)}}}return o.memoizedState=o.baseState=r,o.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:r},o}function ze(r,o,h,p){return r.baseState=h,kt(r,Ve,typeof p=="function"?p:xt)}function ee(r,o,h,p,y){if(vc(r))throw Error(s(485));if(r=o.action,r!==null){var b={payload:y,action:r,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(L){b.listeners.push(L)}};he.T!==null?h(!0):b.isTransition=!1,p(b),h=o.pending,h===null?(b.next=o.pending=b,qe(o,b)):(b.next=h.next,o.pending=h.next=b)}}function qe(r,o){var h=o.action,p=o.payload,y=r.state;if(o.isTransition){var b=he.T,L={};he.T=L;try{var V=h(y,p),J=he.S;J!==null&&J(L,V),Ee(r,o,V)}catch(ct){ji(r,o,ct)}finally{he.T=b}}else try{b=h(y,p),Ee(r,o,b)}catch(ct){ji(r,o,ct)}}function Ee(r,o,h){h!==null&&typeof h=="object"&&typeof h.then=="function"?h.then(function(p){Cn(r,o,p)},function(p){return ji(r,o,p)}):Cn(r,o,h)}function Cn(r,o,h){o.status="fulfilled",o.value=h,Rn(o),r.state=h,o=r.pending,o!==null&&(h=o.next,h===o?r.pending=null:(h=h.next,o.next=h,qe(r,h)))}function ji(r,o,h){var p=r.pending;if(r.pending=null,p!==null){p=p.next;do o.status="rejected",o.reason=h,Rn(o),o=o.next;while(o!==p)}r.action=null}function Rn(r){r=r.listeners;for(var o=0;o<r.length;o++)(0,r[o])()}function Bs(r,o){return o}function We(r,o){if(Ue){var h=Ye.formState;if(h!==null){t:{var p=Se;if(Ue){if(Ln){var y=U1(Ln,Qi);if(y){Ln=nv(y),p=N1(y);break t}}Vt(p)}p=!1}p&&(o=h[0])}}h=N(),h.memoizedState=h.baseState=o,p={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Bs,lastRenderedState:o},h.queue=p,h=wg.bind(null,Se,p),p.dispatch=h,p=Be(!1);var b=Tf.bind(null,Se,!1,p.queue);return p=N(),y={state:o,dispatch:null,action:r,pending:null},p.queue=y,h=ee.bind(null,Se,y,b,h),y.dispatch=h,p.memoizedState=r,[o,h,!1]}function Vn(r){var o=q();return Gn(o,Ve,r)}function Gn(r,o,h){o=kt(r,o,Bs)[0],r=Rt(xt)[0],o=typeof o=="object"&&o!==null&&typeof o.then=="function"?et(o):o;var p=q(),y=p.queue,b=y.dispatch;return h!==p.memoizedState&&(Se.flags|=2048,Ki(9,Mn.bind(null,y,h),{destroy:void 0},null)),[o,b,r]}function Mn(r,o){r.action=o}function bn(r){var o=q(),h=Ve;if(h!==null)return Gn(o,h,r);q(),o=o.memoizedState,h=q();var p=h.queue.dispatch;return h.memoizedState=r,[o,p,!1]}function Ki(r,o,h,p){return r={tag:r,create:o,inst:h,deps:p,next:null},o=Se.updateQueue,o===null&&(o=Ud(),Se.updateQueue=o),h=o.lastEffect,h===null?o.lastEffect=r.next=r:(p=h.next,h.next=r,r.next=p,o.lastEffect=r),r}function Ji(){return q().memoizedState}function mc(r,o,h,p){var y=N();Se.flags|=r,y.memoizedState=Ki(1|o,h,{destroy:void 0},p===void 0?null:p)}function gc(r,o,h,p){var y=q();p=p===void 0?null:p;var b=y.memoizedState.inst;Ve!==null&&p!==null&&ga(p,Ve.memoizedState.deps)?y.memoizedState=Ki(o,h,b,p):(Se.flags|=r,y.memoizedState=Ki(1|o,h,b,p))}function mg(r,o){mc(8390656,8,r,o)}function Sf(r,o){gc(2048,8,r,o)}function gg(r,o){return gc(4,2,r,o)}function vg(r,o){return gc(4,4,r,o)}function _g(r,o){if(typeof o=="function"){r=r();var h=o(r);return function(){typeof h=="function"?h():o(null)}}if(o!=null)return r=r(),o.current=r,function(){o.current=null}}function yg(r,o,h){h=h!=null?h.concat([r]):null,gc(4,4,_g.bind(null,o,r),h)}function Mf(){}function xg(r,o){var h=q();o=o===void 0?null:o;var p=h.memoizedState;return o!==null&&ga(o,p[1])?p[0]:(h.memoizedState=[r,o],r)}function Sg(r,o){var h=q();o=o===void 0?null:o;var p=h.memoizedState;if(o!==null&&ga(o,p[1]))return p[0];if(p=r(),Ur){Y(!0);try{r()}finally{Y(!1)}}return h.memoizedState=[p,o],p}function bf(r,o,h){return h===void 0||(js&1073741824)!==0?r.memoizedState=o:(r.memoizedState=h,r=v0(),Se.lanes|=r,Js|=r,h)}function Mg(r,o,h,p){return di(h,o)?h:Oa.current!==null?(r=bf(r,h,p),di(r,o)||(vn=!0),r):(js&42)===0?(vn=!0,r.memoizedState=h):(r=v0(),Se.lanes|=r,Js|=r,o)}function bg(r,o,h,p,y){var b=wr();$n(b!==0&&8>b?b:8);var L=he.T,V={};he.T=V,Tf(r,!1,o,h);try{var J=y(),ct=he.S;if(ct!==null&&ct(V,J),J!==null&&typeof J=="object"&&typeof J.then=="function"){var Et=Ct(J,p);Ho(r,o,Et,ci(r))}else Ho(r,o,p,ci(r))}catch(Pt){Ho(r,o,{then:function(){},status:"rejected",reason:Pt},ci())}finally{$n(b),he.T=L}}function Eg(r){var o=r.memoizedState;if(o!==null)return o;o={memoizedState:Ea,baseState:Ea,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:Ea},next:null};var h={};return o.next={memoizedState:h,baseState:h,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xt,lastRenderedState:h},next:null},r.memoizedState=o,r=r.alternate,r!==null&&(r.memoizedState=o),o}function Ef(){return Dn(Cr)}function Tg(){return q().memoizedState}function Ag(){return q().memoizedState}function _M(r){for(var o=r.return;o!==null;){switch(o.tag){case 24:case 3:var h=ci();r=ft(h);var p=Lt(o,r,h);p!==null&&(kn(p,o,h),$t(p,o,h)),o={cache:Bf()},r.payload=o;return}o=o.return}}function yM(r,o,h){var p=ci();h={lane:p,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null},vc(r)?Cg(o,h):(h=_t(r,o,h,p),h!==null&&(kn(h,r,p),Rg(h,o,p)))}function wg(r,o,h){var p=ci();Ho(r,o,h,p)}function Ho(r,o,h,p){var y={lane:p,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null};if(vc(r))Cg(o,y);else{var b=r.alternate;if(r.lanes===0&&(b===null||b.lanes===0)&&(b=o.lastRenderedReducer,b!==null))try{var L=o.lastRenderedState,V=b(L,h);if(y.hasEagerState=!0,y.eagerState=V,di(V,L))return Tt(r,o,y,0),Ye===null&&O(),!1}catch{}finally{}if(h=_t(r,o,y,p),h!==null)return kn(h,r,p),Rg(h,o,p),!0}return!1}function Tf(r,o,h,p){if(p={lane:2,revertLane:dt(),action:p,hasEagerState:!1,eagerState:null,next:null},vc(r)){if(o)throw Error(s(479))}else o=_t(r,h,p,2),o!==null&&kn(o,r,2)}function vc(r){var o=r.alternate;return r===Se||o!==null&&o===Se}function Cg(r,o){za=Hc=!0;var h=r.pending;h===null?o.next=o:(o.next=h.next,h.next=o),r.pending=o}function Rg(r,o,h){if((h&4194176)!==0){var p=o.lanes;p&=r.pendingLanes,h|=p,o.lanes=h,W(r,h)}}function Af(r,o,h,p){o=r.memoizedState,h=h(p,o),h=h==null?o:ld({},o,h),r.memoizedState=h,r.lanes===0&&(r.updateQueue.baseState=h)}function Dg(r,o,h,p,y,b,L){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(p,b,L):o.prototype&&o.prototype.isPureReactComponent?!yt(h,p)||!yt(y,b):!0}function Ug(r,o,h,p){r=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(h,p),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(h,p),o.state!==r&&Nd.enqueueReplaceState(o,o.state,null)}function Sr(r,o){var h=o;if("ref"in o){h={};for(var p in o)p!=="ref"&&(h[p]=o[p])}if(r=r.defaultProps){h===o&&(h=ld({},h));for(var y in r)h[y]===void 0&&(h[y]=r[y])}return h}function _c(r,o){try{var h=r.onUncaughtError;h(o.value,{componentStack:o.stack})}catch(p){setTimeout(function(){throw p})}}function Ng(r,o,h){try{var p=r.onCaughtError;p(h.value,{componentStack:h.stack,errorBoundary:o.tag===1?o.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function wf(r,o,h){return h=ft(h),h.tag=3,h.payload={element:null},h.callback=function(){_c(r,o)},h}function Lg(r){return r=ft(r),r.tag=3,r}function Pg(r,o,h,p){var y=h.type.getDerivedStateFromError;if(typeof y=="function"){var b=p.value;r.payload=function(){return y(b)},r.callback=function(){Ng(o,h,p)}}var L=h.stateNode;L!==null&&typeof L.componentDidCatch=="function"&&(r.callback=function(){Ng(o,h,p),typeof y!="function"&&(Qs===null?Qs=new Set([this]):Qs.add(this));var V=p.stack;this.componentDidCatch(p.value,{componentStack:V!==null?V:""})})}function xM(r,o,h,p,y){if(h.flags|=32768,p!==null&&typeof p=="object"&&typeof p.then=="function"){if(o=h.alternate,o!==null&&Go(o,h,y,!0),h=Ai.current,h!==null){switch(h.tag){case 13:return $i===null?ed():h.alternate===null&&nn===0&&(nn=3),h.flags&=-257,h.flags|=65536,h.lanes=y,p===Bc?h.flags|=16384:(o=h.updateQueue,o===null?h.updateQueue=new Set([p]):o.add(p),id(r,p,y)),!1;case 22:return h.flags|=65536,p===Bc?h.flags|=16384:(o=h.updateQueue,o===null?(o={transitions:null,markerInstances:null,retryQueue:new Set([p])},h.updateQueue=o):(h=o.retryQueue,h===null?o.retryQueue=new Set([p]):h.add(p)),id(r,p,y)),!1}throw Error(s(435,h.tag))}return id(r,p,y),ed(),!1}if(Ue)return o=Ai.current,o!==null?((o.flags&65536)===0&&(o.flags|=256),o.flags|=65536,o.lanes=y,p!==Ed&&(r=Error(s(422),{cause:p}),le(st(r,h)))):(p!==Ed&&(o=Error(s(423),{cause:p}),le(st(o,h))),r=r.current.alternate,r.flags|=65536,y&=-y,r.lanes|=y,p=st(p,h),y=wf(r.stateNode,p,y),te(r,y),nn!==4&&(nn=2)),!1;var b=Error(s(520),{cause:p});if(b=st(b,h),sl===null?sl=[b]:sl.push(b),nn!==4&&(nn=2),o===null)return!0;p=st(p,h),h=o;do{switch(h.tag){case 3:return h.flags|=65536,r=y&-y,h.lanes|=r,r=wf(h.stateNode,p,r),te(h,r),!1;case 1:if(o=h.type,b=h.stateNode,(h.flags&128)===0&&(typeof o.getDerivedStateFromError=="function"||b!==null&&typeof b.componentDidCatch=="function"&&(Qs===null||!Qs.has(b))))return h.flags|=65536,y&=-y,h.lanes|=y,y=Lg(y),Pg(y,r,h,p),te(h,y),!1}h=h.return}while(h!==null);return!1}function En(r,o,h,p){o.child=r===null?gv(o,null,h,p):Dr(o,r.child,h,p)}function Ig(r,o,h,p,y){h=h.render;var b=o.ref;if("ref"in p){var L={};for(var V in p)V!=="ref"&&(L[V]=p[V])}else L=p;return Mr(o),p=va(r,o,h,L,b,y),V=zo(),r!==null&&!vn?(Bo(r,o,y),fs(r,o,y)):(Ue&&V&&wt(o),o.flags|=1,En(r,o,p,y),o.child)}function Og(r,o,h,p,y){if(r===null){var b=h.type;return typeof b=="function"&&!sd(b)&&b.defaultProps===void 0&&h.compare===null?(o.tag=15,o.type=b,zg(r,o,b,p,y)):(r=Ac(h.type,null,p,o,o.mode,y),r.ref=o.ref,r.return=o,o.child=r)}if(b=r.child,!If(r,y)){var L=b.memoizedProps;if(h=h.compare,h=h!==null?h:yt,h(L,p)&&r.ref===o.ref)return fs(r,o,y)}return o.flags|=1,r=ks(b,p),r.ref=o.ref,r.return=o,o.child=r}function zg(r,o,h,p,y){if(r!==null){var b=r.memoizedProps;if(yt(b,p)&&r.ref===o.ref)if(vn=!1,o.pendingProps=p=b,If(r,y))(r.flags&131072)!==0&&(vn=!0);else return o.lanes=r.lanes,fs(r,o,y)}return Cf(r,o,h,p,y)}function Bg(r,o,h){var p=o.pendingProps,y=p.children,b=(o.stateNode._pendingVisibility&2)!==0,L=r!==null?r.memoizedState:null;if(Vo(r,o),p.mode==="hidden"||b){if((o.flags&128)!==0){if(p=L!==null?L.baseLanes|h:h,r!==null){for(y=o.child=r.child,b=0;y!==null;)b=b|y.lanes|y.childLanes,y=y.sibling;o.childLanes=b&~p}else o.childLanes=0,o.child=null;return Fg(r,o,p,h)}if((h&536870912)!==0)o.memoizedState={baseLanes:0,cachePool:null},r!==null&&Sc(o,L!==null?L.cachePool:null),L!==null?Io(o,L):ma(),Oo(o);else return o.lanes=o.childLanes=536870912,Fg(r,o,L!==null?L.baseLanes|h:h,h)}else L!==null?(Sc(o,L.cachePool),Io(o,L),Ii(),o.memoizedState=null):(r!==null&&Sc(o,null),ma(),Ii());return En(r,o,y,h),o.child}function Fg(r,o,h,p){var y=Ff();return y=y===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:y},o.memoizedState={baseLanes:h,cachePool:y},r!==null&&Sc(o,null),ma(),Oo(o),r!==null&&Go(r,o,p,!0),null}function Vo(r,o){var h=o.ref;if(h===null)r!==null&&r.ref!==null&&(o.flags|=2097664);else{if(typeof h!="function"&&typeof h!="object")throw Error(s(284));(r===null||r.ref!==h)&&(o.flags|=2097664)}}function Cf(r,o,h,p,y){return Mr(o),h=va(r,o,h,p,void 0,y),p=zo(),r!==null&&!vn?(Bo(r,o,y),fs(r,o,y)):(Ue&&p&&wt(o),o.flags|=1,En(r,o,h,y),o.child)}function Hg(r,o,h,p,y,b){return Mr(o),o.updateQueue=null,h=pc(o,p,h,y),dc(r),p=zo(),r!==null&&!vn?(Bo(r,o,b),fs(r,o,b)):(Ue&&p&&wt(o),o.flags|=1,En(r,o,h,b),o.child)}function Vg(r,o,h,p,y){if(Mr(o),o.stateNode===null){var b=Aa,L=h.contextType;typeof L=="object"&&L!==null&&(b=Dn(L)),b=new h(p,b),o.memoizedState=b.state!==null&&b.state!==void 0?b.state:null,b.updater=Nd,o.stateNode=b,b._reactInternals=o,b=o.stateNode,b.props=p,b.state=o.memoizedState,b.refs={},Gt(o),L=h.contextType,b.context=typeof L=="object"&&L!==null?Dn(L):Aa,b.state=o.memoizedState,L=h.getDerivedStateFromProps,typeof L=="function"&&(Af(o,h,L,p),b.state=o.memoizedState),typeof h.getDerivedStateFromProps=="function"||typeof b.getSnapshotBeforeUpdate=="function"||typeof b.UNSAFE_componentWillMount!="function"&&typeof b.componentWillMount!="function"||(L=b.state,typeof b.componentWillMount=="function"&&b.componentWillMount(),typeof b.UNSAFE_componentWillMount=="function"&&b.UNSAFE_componentWillMount(),L!==b.state&&Nd.enqueueReplaceState(b,b.state,null),ie(o,p,b,y),At(),b.state=o.memoizedState),typeof b.componentDidMount=="function"&&(o.flags|=4194308),p=!0}else if(r===null){b=o.stateNode;var V=o.memoizedProps,J=Sr(h,V);b.props=J;var ct=b.context,Et=h.contextType;L=Aa,typeof Et=="object"&&Et!==null&&(L=Dn(Et));var Pt=h.getDerivedStateFromProps;Et=typeof Pt=="function"||typeof b.getSnapshotBeforeUpdate=="function",V=o.pendingProps!==V,Et||typeof b.UNSAFE_componentWillReceiveProps!="function"&&typeof b.componentWillReceiveProps!="function"||(V||ct!==L)&&Ug(o,b,p,L),Zs=!1;var Bt=o.memoizedState;b.state=Bt,ie(o,p,b,y),At(),ct=o.memoizedState,V||Bt!==ct||Zs?(typeof Pt=="function"&&(Af(o,h,Pt,p),ct=o.memoizedState),(J=Zs||Dg(o,h,J,p,Bt,ct,L))?(Et||typeof b.UNSAFE_componentWillMount!="function"&&typeof b.componentWillMount!="function"||(typeof b.componentWillMount=="function"&&b.componentWillMount(),typeof b.UNSAFE_componentWillMount=="function"&&b.UNSAFE_componentWillMount()),typeof b.componentDidMount=="function"&&(o.flags|=4194308)):(typeof b.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=p,o.memoizedState=ct),b.props=p,b.state=ct,b.context=L,p=J):(typeof b.componentDidMount=="function"&&(o.flags|=4194308),p=!1)}else{b=o.stateNode,Yt(r,o),L=o.memoizedProps,Et=Sr(h,L),b.props=Et,Pt=o.pendingProps,Bt=b.context,ct=h.contextType,J=Aa,typeof ct=="object"&&ct!==null&&(J=Dn(ct)),V=h.getDerivedStateFromProps,(ct=typeof V=="function"||typeof b.getSnapshotBeforeUpdate=="function")||typeof b.UNSAFE_componentWillReceiveProps!="function"&&typeof b.componentWillReceiveProps!="function"||(L!==Pt||Bt!==J)&&Ug(o,b,p,J),Zs=!1,Bt=o.memoizedState,b.state=Bt,ie(o,p,b,y),At();var me=o.memoizedState;L!==Pt||Bt!==me||Zs||r!==null&&r.dependencies!==null&&yc(r.dependencies)?(typeof V=="function"&&(Af(o,h,V,p),me=o.memoizedState),(Et=Zs||Dg(o,h,Et,p,Bt,me,J)||r!==null&&r.dependencies!==null&&yc(r.dependencies))?(ct||typeof b.UNSAFE_componentWillUpdate!="function"&&typeof b.componentWillUpdate!="function"||(typeof b.componentWillUpdate=="function"&&b.componentWillUpdate(p,me,J),typeof b.UNSAFE_componentWillUpdate=="function"&&b.UNSAFE_componentWillUpdate(p,me,J)),typeof b.componentDidUpdate=="function"&&(o.flags|=4),typeof b.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof b.componentDidUpdate!="function"||L===r.memoizedProps&&Bt===r.memoizedState||(o.flags|=4),typeof b.getSnapshotBeforeUpdate!="function"||L===r.memoizedProps&&Bt===r.memoizedState||(o.flags|=1024),o.memoizedProps=p,o.memoizedState=me),b.props=p,b.state=me,b.context=J,p=Et):(typeof b.componentDidUpdate!="function"||L===r.memoizedProps&&Bt===r.memoizedState||(o.flags|=4),typeof b.getSnapshotBeforeUpdate!="function"||L===r.memoizedProps&&Bt===r.memoizedState||(o.flags|=1024),p=!1)}return b=p,Vo(r,o),p=(o.flags&128)!==0,b||p?(b=o.stateNode,h=p&&typeof h.getDerivedStateFromError!="function"?null:b.render(),o.flags|=1,r!==null&&p?(o.child=Dr(o,r.child,null,y),o.child=Dr(o,null,h,y)):En(r,o,h,y),o.memoizedState=b.state,r=o.child):r=fs(r,o,y),r}function Gg(r,o,h,p){return ye(),o.flags|=256,En(r,o,h,p),o.child}function Rf(r){return{baseLanes:r,cachePool:Zg()}}function Df(r,o,h){return r=r!==null?r.childLanes&~h:0,o&&(r|=wi),r}function kg(r,o,h){var p=o.pendingProps,y=!1,b=(o.flags&128)!==0,L;if((L=b)||(L=r!==null&&r.memoizedState===null?!1:(dn.current&2)!==0),L&&(y=!0,o.flags&=-129),L=(o.flags&32)!==0,o.flags&=-33,r===null){if(Ue){if(y?xi(o):Ii(),Ue){var V=Ln,J;(J=V)&&(V=z1(V,Qi),V!==null?(o.memoizedState={dehydrated:V,treeContext:Rr!==null?{id:vs,overflow:_s}:null,retryLane:536870912},J=e(18,null,null,0),J.stateNode=V,J.return=o,o.child=J,Wn=o,Ln=null,J=!0):J=!1),J||Vt(o)}if(V=o.memoizedState,V!==null&&(V=V.dehydrated,V!==null))return yd(V)?o.lanes=16:o.lanes=536870912,null;Jn(o)}return V=p.children,p=p.fallback,y?(Ii(),y=o.mode,V=Nf({mode:"hidden",children:V},y),p=Ar(p,y,h,null),V.return=o,p.return=o,V.sibling=p,o.child=V,y=o.child,y.memoizedState=Rf(h),y.childLanes=Df(r,L,h),o.memoizedState=Ld,p):(xi(o),Uf(o,V))}if(J=r.memoizedState,J!==null&&(V=J.dehydrated,V!==null)){if(b)o.flags&256?(xi(o),o.flags&=-257,o=Lf(r,o,h)):o.memoizedState!==null?(Ii(),o.child=r.child,o.flags|=128,o=null):(Ii(),y=p.fallback,V=o.mode,p=Nf({mode:"visible",children:p.children},V),y=Ar(y,V,h,null),y.flags|=2,p.return=o,y.return=o,p.sibling=y,o.child=p,Dr(o,r.child,null,h),p=o.child,p.memoizedState=Rf(h),p.childLanes=Df(r,L,h),o.memoizedState=Ld,o=y);else if(xi(o),yd(V))L=R1(V).digest,p=Error(s(419)),p.stack="",p.digest=L,le({value:p,source:null,stack:null}),o=Lf(r,o,h);else if(vn||Go(r,o,h,!1),L=(h&r.childLanes)!==0,vn||L){if(L=Ye,L!==null){if(p=h&-h,(p&42)!==0)p=1;else switch(p){case 2:p=1;break;case 8:p=4;break;case 32:p=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:p=64;break;case 268435456:p=134217728;break;default:p=0}if(p=(p&(L.suspendedLanes|h))!==0?0:p,p!==0&&p!==J.retryLane)throw J.retryLane=p,bt(r,p),kn(L,r,p),_v}_d(V)||ed(),o=Lf(r,o,h)}else _d(V)?(o.flags|=128,o.child=r.child,o=NM.bind(null,r),D1(V,o),o=null):(r=J.treeContext,Si&&(Ln=P1(V),Wn=o,Ue=!0,Bi=null,Qi=!1,r!==null&&(bi[Ei++]=vs,bi[Ei++]=_s,bi[Ei++]=Rr,vs=r.id,_s=r.overflow,Rr=o)),o=Uf(o,p.children),o.flags|=4096);return o}return y?(Ii(),y=p.fallback,V=o.mode,J=r.child,b=J.sibling,p=ks(J,{mode:"hidden",children:p.children}),p.subtreeFlags=J.subtreeFlags&31457280,b!==null?y=ks(b,y):(y=Ar(y,V,h,null),y.flags|=2),y.return=o,p.return=o,p.sibling=y,o.child=p,p=y,y=o.child,V=r.child.memoizedState,V===null?V=Rf(h):(J=V.cachePool,J!==null?(b=gs?tn._currentValue:tn._currentValue2,J=J.parent!==b?{parent:b,pool:b}:J):J=Zg(),V={baseLanes:V.baseLanes|h,cachePool:J}),y.memoizedState=V,y.childLanes=Df(r,L,h),o.memoizedState=Ld,p):(xi(o),h=r.child,r=h.sibling,h=ks(h,{mode:"visible",children:p.children}),h.return=o,h.sibling=null,r!==null&&(L=o.deletions,L===null?(o.deletions=[r],o.flags|=16):L.push(r)),o.child=h,o.memoizedState=null,h)}function Uf(r,o){return o=Nf({mode:"visible",children:o},r.mode),o.return=r,r.child=o}function Nf(r,o){return L0(r,o,0,null)}function Lf(r,o,h){return Dr(o,r.child,null,h),r=Uf(o,o.pendingProps.children),r.flags|=2,o.memoizedState=null,r}function Wg(r,o,h){r.lanes|=o;var p=r.alternate;p!==null&&(p.lanes|=o),Of(r.return,o,h)}function Pf(r,o,h,p,y){var b=r.memoizedState;b===null?r.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:p,tail:h,tailMode:y}:(b.isBackwards=o,b.rendering=null,b.renderingStartTime=0,b.last=p,b.tail=h,b.tailMode=y)}function Xg(r,o,h){var p=o.pendingProps,y=p.revealOrder,b=p.tail;if(En(r,o,p.children,h),p=dn.current,(p&2)!==0)p=p&1|2,o.flags|=128;else{if(r!==null&&(r.flags&128)!==0)t:for(r=o.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&Wg(r,h,o);else if(r.tag===19)Wg(r,h,o);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===o)break t;for(;r.sibling===null;){if(r.return===null||r.return===o)break t;r=r.return}r.sibling.return=r.return,r=r.sibling}p&=1}switch(E(dn,p),y){case"forwards":for(h=o.child,y=null;h!==null;)r=h.alternate,r!==null&&xr(r)===null&&(y=h),h=h.sibling;h=y,h===null?(y=o.child,o.child=null):(y=h.sibling,h.sibling=null),Pf(o,!1,y,h,b);break;case"backwards":for(h=null,y=o.child,o.child=null;y!==null;){if(r=y.alternate,r!==null&&xr(r)===null){o.child=y;break}r=y.sibling,y.sibling=h,h=y,y=r}Pf(o,!0,h,null,b);break;case"together":Pf(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function fs(r,o,h){if(r!==null&&(o.dependencies=r.dependencies),Js|=o.lanes,(h&o.childLanes)===0)if(r!==null){if(Go(r,o,h,!1),(h&o.childLanes)===0)return null}else return null;if(r!==null&&o.child!==r.child)throw Error(s(153));if(o.child!==null){for(r=o.child,h=ks(r,r.pendingProps),o.child=h,h.return=o;r.sibling!==null;)r=r.sibling,h=h.sibling=ks(r,r.pendingProps),h.return=o;h.sibling=null}return o.child}function If(r,o){return(r.lanes&o)!==0?!0:(r=r.dependencies,!!(r!==null&&yc(r)))}function SM(r,o,h){switch(o.tag){case 3:$(o,o.stateNode.containerInfo),Fs(o,tn,r.memoizedState.cache),ye();break;case 27:case 5:Wt(o);break;case 4:$(o,o.stateNode.containerInfo);break;case 10:Fs(o,o.type,o.memoizedProps.value);break;case 13:var p=o.memoizedState;if(p!==null)return p.dehydrated!==null?(xi(o),o.flags|=128,null):(h&o.child.childLanes)!==0?kg(r,o,h):(xi(o),r=fs(r,o,h),r!==null?r.sibling:null);xi(o);break;case 19:var y=(r.flags&128)!==0;if(p=(h&o.childLanes)!==0,p||(Go(r,o,h,!1),p=(h&o.childLanes)!==0),y){if(p)return Xg(r,o,h);o.flags|=128}if(y=o.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(dn,dn.current),p)break;return null;case 22:case 23:return o.lanes=0,Bg(r,o,h);case 24:Fs(o,tn,r.memoizedState.cache)}return fs(r,o,h)}function qg(r,o,h){if(r!==null)if(r.memoizedProps!==o.pendingProps)vn=!0;else{if(!If(r,h)&&(o.flags&128)===0)return vn=!1,SM(r,o,h);vn=(r.flags&131072)!==0}else vn=!1,Ue&&(o.flags&1048576)!==0&&mt(o,Pc,o.index);switch(o.lanes=0,o.tag){case 16:t:{r=o.pendingProps;var p=o.elementType,y=p._init;if(p=y(p._payload),o.type=p,typeof p=="function")sd(p)?(r=Sr(p,r),o.tag=1,o=Vg(null,o,p,r,h)):(o.tag=0,o=Cf(null,o,p,r,h));else{if(p!=null){if(y=p.$$typeof,y===ud){o.tag=11,o=Ig(null,o,p,r,h);break t}else if(y===dd){o.tag=14,o=Og(null,o,p,r,h);break t}}throw o=l(p)||p,Error(s(306,o,""))}}return o;case 0:return Cf(r,o,o.type,o.pendingProps,h);case 1:return p=o.type,y=Sr(p,o.pendingProps),Vg(r,o,p,y,h);case 3:t:{if($(o,o.stateNode.containerInfo),r===null)throw Error(s(387));var b=o.pendingProps;y=o.memoizedState,p=y.element,Yt(r,o),ie(o,b,null,h);var L=o.memoizedState;if(b=L.cache,Fs(o,tn,b),b!==y.cache&&zf(o,[tn],h,!0),At(),b=L.element,Si&&y.isDehydrated)if(y={element:b,isDehydrated:!1,cache:L.cache},o.updateQueue.baseState=y,o.memoizedState=y,o.flags&256){o=Gg(r,o,b,h);break t}else if(b!==p){p=st(Error(s(424)),o),le(p),o=Gg(r,o,b,h);break t}else for(Si&&(Ln=L1(o.stateNode.containerInfo),Wn=o,Ue=!0,Bi=null,Qi=!0),h=gv(o,null,b,h),o.child=h;h;)h.flags=h.flags&-3|4096,h=h.sibling;else{if(ye(),b===p){o=fs(r,o,h);break t}En(r,o,b,h)}o=o.child}return o;case 26:if(Mi)return Vo(r,o),r===null?(h=av(o.type,null,o.pendingProps,null))?o.memoizedState=h:Ue||(o.stateNode=j1(o.type,o.pendingProps,Ys.current,o)):o.memoizedState=av(o.type,r.memoizedProps,o.pendingProps,r.memoizedState),null;case 27:if(Nn)return Wt(o),r===null&&Nn&&Ue&&(p=o.stateNode=fv(o.type,o.pendingProps,Ys.current,Tn.current,!1),Wn=o,Qi=!0,Ln=iv(p)),p=o.pendingProps.children,r!==null||Ue?En(r,o,p,h):o.child=Dr(o,null,p,h),Vo(r,o),o.child;case 5:return r===null&&Ue&&(q1(o.type,o.pendingProps,Tn.current),(y=p=Ln)&&(p=I1(p,o.type,o.pendingProps,Qi),p!==null?(o.stateNode=p,Wn=o,Ln=iv(p),Qi=!1,y=!0):y=!1),y||Vt(o)),Wt(o),y=o.type,b=o.pendingProps,L=r!==null?r.memoizedProps:null,p=b.children,Rc(y,b)?p=null:L!==null&&Rc(y,L)&&(o.flags|=32),o.memoizedState!==null&&(y=va(r,o,xf,null,null,h),gs?Cr._currentValue=y:Cr._currentValue2=y),Vo(r,o),En(r,o,p,h),o.child;case 6:return r===null&&Ue&&(Y1(o.pendingProps,Tn.current),(r=h=Ln)&&(h=O1(h,o.pendingProps,Qi),h!==null?(o.stateNode=h,Wn=o,Ln=null,r=!0):r=!1),r||Vt(o)),null;case 13:return kg(r,o,h);case 4:return $(o,o.stateNode.containerInfo),p=o.pendingProps,r===null?o.child=Dr(o,null,p,h):En(r,o,p,h),o.child;case 11:return Ig(r,o,o.type,o.pendingProps,h);case 7:return En(r,o,o.pendingProps,h),o.child;case 8:return En(r,o,o.pendingProps.children,h),o.child;case 12:return En(r,o,o.pendingProps.children,h),o.child;case 10:return p=o.pendingProps,Fs(o,o.type,p.value),En(r,o,p.children,h),o.child;case 9:return y=o.type._context,p=o.pendingProps.children,Mr(o),y=Dn(y),p=p(y),o.flags|=1,En(r,o,p,h),o.child;case 14:return Og(r,o,o.type,o.pendingProps,h);case 15:return zg(r,o,o.type,o.pendingProps,h);case 19:return Xg(r,o,h);case 22:return Bg(r,o,h);case 24:return Mr(o),p=Dn(tn),r===null?(y=Ff(),y===null&&(y=Ye,b=Bf(),y.pooledCache=b,b.refCount++,b!==null&&(y.pooledCacheLanes|=h),y=b),o.memoizedState={parent:p,cache:y},Gt(o),Fs(o,tn,y)):((r.lanes&h)!==0&&(Yt(r,o),ie(o,null,null,h),At()),y=r.memoizedState,b=o.memoizedState,y.parent!==p?(y={parent:p,cache:p},o.memoizedState=y,o.lanes===0&&(o.memoizedState=o.updateQueue.baseState=y),Fs(o,tn,p)):(p=b.cache,Fs(o,tn,p),p!==y.cache&&zf(o,[tn],h,!0))),En(r,o,o.pendingProps.children,h),o.child;case 29:throw o.pendingProps}throw Error(s(156,o.tag))}function Fs(r,o,h){gs?(E(Gc,o._currentValue),o._currentValue=h):(E(Gc,o._currentValue2),o._currentValue2=h)}function ds(r){var o=Gc.current;gs?r._currentValue=o:r._currentValue2=o,_(Gc)}function Of(r,o,h){for(;r!==null;){var p=r.alternate;if((r.childLanes&o)!==o?(r.childLanes|=o,p!==null&&(p.childLanes|=o)):p!==null&&(p.childLanes&o)!==o&&(p.childLanes|=o),r===h)break;r=r.return}}function zf(r,o,h,p){var y=r.child;for(y!==null&&(y.return=r);y!==null;){var b=y.dependencies;if(b!==null){var L=y.child;b=b.firstContext;t:for(;b!==null;){var V=b;b=y;for(var J=0;J<o.length;J++)if(V.context===o[J]){b.lanes|=h,V=b.alternate,V!==null&&(V.lanes|=h),Of(b.return,h,r),p||(L=null);break t}b=V.next}}else if(y.tag===18){if(L=y.return,L===null)throw Error(s(341));L.lanes|=h,b=L.alternate,b!==null&&(b.lanes|=h),Of(L,h,r),L=null}else L=y.child;if(L!==null)L.return=y;else for(L=y;L!==null;){if(L===r){L=null;break}if(y=L.sibling,y!==null){y.return=L.return,L=y;break}L=L.return}y=L}}function Go(r,o,h,p){r=null;for(var y=o,b=!1;y!==null;){if(!b){if((y.flags&524288)!==0)b=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var L=y.alternate;if(L===null)throw Error(s(387));if(L=L.memoizedProps,L!==null){var V=y.type;di(y.pendingProps.value,L.value)||(r!==null?r.push(V):r=[V])}}else if(y===Ic.current){if(L=y.alternate,L===null)throw Error(s(387));L.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(r!==null?r.push(Cr):r=[Cr])}y=y.return}r!==null&&zf(o,r,h,p),o.flags|=262144}function yc(r){for(r=r.firstContext;r!==null;){var o=r.context;if(!di(gs?o._currentValue:o._currentValue2,r.memoizedValue))return!0;r=r.next}return!1}function Mr(r){Pr=r,ys=null,r=r.dependencies,r!==null&&(r.firstContext=null)}function Dn(r){return Yg(Pr,r)}function xc(r,o){return Pr===null&&Mr(r),Yg(r,o)}function Yg(r,o){var h=gs?o._currentValue:o._currentValue2;if(o={context:o,memoizedValue:h,next:null},ys===null){if(r===null)throw Error(s(308));ys=o,r.dependencies={lanes:0,firstContext:o},r.flags|=524288}else ys=ys.next=o;return h}function Bf(){return{controller:new fb,data:new Map,refCount:0}}function ko(r){r.refCount--,r.refCount===0&&db(pb,function(){r.controller.abort()})}function Ff(){var r=Ir.current;return r!==null?r:Ye.pooledCache}function Sc(r,o){o===null?E(Ir,Ir.current):E(Ir,o.pool)}function Zg(){var r=Ff();return r===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:r}}function ai(r){r.flags|=4}function jg(r,o){if(r!==null&&r.child===o.child)return!1;if((o.flags&16)!==0)return!0;for(r=o.child;r!==null;){if((r.flags&13878)!==0||(r.subtreeFlags&13878)!==0)return!0;r=r.sibling}return!1}function Hf(r,o,h,p){if(Un)for(h=o.child;h!==null;){if(h.tag===5||h.tag===6)gd(r,h.stateNode);else if(!(h.tag===4||Nn&&h.tag===27)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===o)break;for(;h.sibling===null;){if(h.return===null||h.return===o)return;h=h.return}h.sibling.return=h.return,h=h.sibling}else if(qs)for(var y=o.child;y!==null;){if(y.tag===5){var b=y.stateNode;h&&p&&(b=tv(b,y.type,y.memoizedProps)),gd(r,b)}else if(y.tag===6)b=y.stateNode,h&&p&&(b=ev(b,y.memoizedProps)),gd(r,b);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)b=y.child,b!==null&&(b.return=y),Hf(r,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Kg(r,o,h,p){if(qs)for(var y=o.child;y!==null;){if(y.tag===5){var b=y.stateNode;h&&p&&(b=tv(b,y.type,y.memoizedProps)),Q0(r,b)}else if(y.tag===6)b=y.stateNode,h&&p&&(b=ev(b,y.memoizedProps)),Q0(r,b);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)b=y.child,b!==null&&(b.return=y),Kg(r,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Jg(r,o){if(qs&&jg(r,o)){r=o.stateNode;var h=r.containerInfo,p=J0();Kg(p,o,!1,!1),r.pendingChildren=p,ai(o),C1(h,p)}}function Vf(r,o,h,p){if(Un)r.memoizedProps!==p&&ai(o);else if(qs){var y=r.stateNode,b=r.memoizedProps;if((r=jg(r,o))||b!==p){var L=Tn.current;b=w1(y,h,b,p,!r,null),b===y?o.stateNode=y:(X0(b,h,p,L)&&ai(o),o.stateNode=b,r?Hf(b,o,!1,!1):ai(o))}else o.stateNode=y}}function Gf(r,o,h){if(e1(o,h)){if(r.flags|=16777216,!Z0(o,h))if(M0())r.flags|=8192;else throw Pa=Bc,Dd}else r.flags&=-16777217}function Qg(r,o){if(J1(o)){if(r.flags|=16777216,!hv(o))if(M0())r.flags|=8192;else throw Pa=Bc,Dd}else r.flags&=-16777217}function Mc(r,o){o!==null&&(r.flags|=4),r.flags&16384&&(o=r.tag!==22?C():536870912,r.lanes|=o,Va|=o)}function Wo(r,o){if(!Ue)switch(r.tailMode){case"hidden":o=r.tail;for(var h=null;o!==null;)o.alternate!==null&&(h=o),o=o.sibling;h===null?r.tail=null:h.sibling=null;break;case"collapsed":h=r.tail;for(var p=null;h!==null;)h.alternate!==null&&(p=h),h=h.sibling;p===null?o||r.tail===null?r.tail=null:r.tail.sibling=null:p.sibling=null}}function Je(r){var o=r.alternate!==null&&r.alternate.child===r.child,h=0,p=0;if(o)for(var y=r.child;y!==null;)h|=y.lanes|y.childLanes,p|=y.subtreeFlags&31457280,p|=y.flags&31457280,y.return=r,y=y.sibling;else for(y=r.child;y!==null;)h|=y.lanes|y.childLanes,p|=y.subtreeFlags,p|=y.flags,y.return=r,y=y.sibling;return r.subtreeFlags|=p,r.childLanes=h,o}function MM(r,o,h){var p=o.pendingProps;switch(jt(o),o.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Je(o),null;case 1:return Je(o),null;case 3:return h=o.stateNode,p=null,r!==null&&(p=r.memoizedState.cache),o.memoizedState.cache!==p&&(o.flags|=2048),ds(tn),gt(),h.pendingContext&&(h.context=h.pendingContext,h.pendingContext=null),(r===null||r.child===null)&&(Pe(o)?ai(o):r===null||r.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,Bi!==null&&($f(Bi),Bi=null))),Jg(r,o),Je(o),null;case 26:if(Mi){h=o.type;var y=o.memoizedState;return r===null?(ai(o),y!==null?(Je(o),Qg(o,y)):(Je(o),Gf(o,h,p))):y?y!==r.memoizedState?(ai(o),Je(o),Qg(o,y)):(Je(o),o.flags&=-16777217):(Un?r.memoizedProps!==p&&ai(o):Vf(r,o,h,p),Je(o),Gf(o,h,p)),null}case 27:if(Nn){if(Dt(o),h=Ys.current,y=o.type,r!==null&&o.stateNode!=null)Un?r.memoizedProps!==p&&ai(o):Vf(r,o,y,p);else{if(!p){if(o.stateNode===null)throw Error(s(166));return Je(o),null}r=Tn.current,Pe(o)?fe(o,r):(r=fv(y,p,h,r,!0),o.stateNode=r,ai(o))}return Je(o),null}case 5:if(Dt(o),h=o.type,r!==null&&o.stateNode!=null)Vf(r,o,h,p);else{if(!p){if(o.stateNode===null)throw Error(s(166));return Je(o),null}r=Tn.current,Pe(o)?fe(o,r):(y=ZM(h,p,Ys.current,r,o),Hf(y,o,!1,!1),o.stateNode=y,X0(y,h,p,r)&&ai(o))}return Je(o),Gf(o,o.type,o.pendingProps),null;case 6:if(r&&o.stateNode!=null)h=r.memoizedProps,Un?h!==p&&ai(o):qs&&(h!==p?(o.stateNode=q0(p,Ys.current,Tn.current,o),ai(o)):o.stateNode=r.stateNode);else{if(typeof p!="string"&&o.stateNode===null)throw Error(s(166));if(r=Ys.current,h=Tn.current,Pe(o)){if(!Si)throw Error(s(176));if(r=o.stateNode,h=o.memoizedProps,p=null,y=Wn,y!==null)switch(y.tag){case 27:case 5:p=y.memoizedProps}F1(r,h,o,p)||Vt(o)}else o.stateNode=q0(p,r,h,o)}return Je(o),null;case 13:if(p=o.memoizedState,r===null||r.memoizedState!==null&&r.memoizedState.dehydrated!==null){if(y=Pe(o),p!==null&&p.dehydrated!==null){if(r===null){if(!y)throw Error(s(318));if(!Si)throw Error(s(344));if(y=o.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(s(317));H1(y,o)}else ye(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;Je(o),y=!1}else Bi!==null&&($f(Bi),Bi=null),y=!0;if(!y)return o.flags&256?(Jn(o),o):(Jn(o),null)}if(Jn(o),(o.flags&128)!==0)return o.lanes=h,o;if(h=p!==null,r=r!==null&&r.memoizedState!==null,h){p=o.child,y=null,p.alternate!==null&&p.alternate.memoizedState!==null&&p.alternate.memoizedState.cachePool!==null&&(y=p.alternate.memoizedState.cachePool.pool);var b=null;p.memoizedState!==null&&p.memoizedState.cachePool!==null&&(b=p.memoizedState.cachePool.pool),b!==y&&(p.flags|=2048)}return h!==r&&h&&(o.child.flags|=8192),Mc(o,o.updateQueue),Je(o),null;case 4:return gt(),Jg(r,o),r===null&&JM(o.stateNode.containerInfo),Je(o),null;case 10:return ds(o.type),Je(o),null;case 19:if(_(dn),y=o.memoizedState,y===null)return Je(o),null;if(p=(o.flags&128)!==0,b=y.rendering,b===null)if(p)Wo(y,!1);else{if(nn!==0||r!==null&&(r.flags&128)!==0)for(r=o.child;r!==null;){if(b=xr(r),b!==null){for(o.flags|=128,Wo(y,!1),r=b.updateQueue,o.updateQueue=r,Mc(o,r),o.subtreeFlags=0,r=h,h=o.child;h!==null;)N0(h,r),h=h.sibling;return E(dn,dn.current&1|2),o.child}r=r.sibling}y.tail!==null&&zi()>rl&&(o.flags|=128,p=!0,Wo(y,!1),o.lanes=4194304)}else{if(!p)if(r=xr(b),r!==null){if(o.flags|=128,p=!0,r=r.updateQueue,o.updateQueue=r,Mc(o,r),Wo(y,!0),y.tail===null&&y.tailMode==="hidden"&&!b.alternate&&!Ue)return Je(o),null}else 2*zi()-y.renderingStartTime>rl&&h!==536870912&&(o.flags|=128,p=!0,Wo(y,!1),o.lanes=4194304);y.isBackwards?(b.sibling=o.child,o.child=b):(r=y.last,r!==null?r.sibling=b:o.child=b,y.last=b)}return y.tail!==null?(o=y.tail,y.rendering=o,y.tail=o.sibling,y.renderingStartTime=zi(),o.sibling=null,r=dn.current,E(dn,p?r&1|2:r&1),o):(Je(o),null);case 22:case 23:return Jn(o),Pi(),p=o.memoizedState!==null,r!==null?r.memoizedState!==null!==p&&(o.flags|=8192):p&&(o.flags|=8192),p?(h&536870912)!==0&&(o.flags&128)===0&&(Je(o),o.subtreeFlags&6&&(o.flags|=8192)):Je(o),h=o.updateQueue,h!==null&&Mc(o,h.retryQueue),h=null,r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(h=r.memoizedState.cachePool.pool),p=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(p=o.memoizedState.cachePool.pool),p!==h&&(o.flags|=2048),r!==null&&_(Ir),null;case 24:return h=null,r!==null&&(h=r.memoizedState.cache),o.memoizedState.cache!==h&&(o.flags|=2048),ds(tn),Je(o),null;case 25:return null}throw Error(s(156,o.tag))}function bM(r,o){switch(jt(o),o.tag){case 1:return r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 3:return ds(tn),gt(),r=o.flags,(r&65536)!==0&&(r&128)===0?(o.flags=r&-65537|128,o):null;case 26:case 27:case 5:return Dt(o),null;case 13:if(Jn(o),r=o.memoizedState,r!==null&&r.dehydrated!==null){if(o.alternate===null)throw Error(s(340));ye()}return r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 19:return _(dn),null;case 4:return gt(),null;case 10:return ds(o.type),null;case 22:case 23:return Jn(o),Pi(),r!==null&&_(Ir),r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 24:return ds(tn),null;case 25:return null;default:return null}}function $g(r,o){switch(jt(o),o.tag){case 3:ds(tn),gt();break;case 26:case 27:case 5:Dt(o);break;case 4:gt();break;case 13:Jn(o);break;case 19:_(dn);break;case 10:ds(o.type);break;case 22:case 23:Jn(o),Pi(),r!==null&&_(Ir);break;case 24:ds(tn)}}function Xo(r,o){try{var h=o.updateQueue,p=h!==null?h.lastEffect:null;if(p!==null){var y=p.next;h=y;do{if((h.tag&r)===r){p=void 0;var b=h.create,L=h.inst;p=b(),L.destroy=p}h=h.next}while(h!==y)}}catch(V){Fe(o,o.return,V)}}function Hs(r,o,h){try{var p=o.updateQueue,y=p!==null?p.lastEffect:null;if(y!==null){var b=y.next;p=b;do{if((p.tag&r)===r){var L=p.inst,V=L.destroy;if(V!==void 0){L.destroy=void 0,y=o;var J=h;try{V()}catch(ct){Fe(y,J,ct)}}}p=p.next}while(p!==b)}}catch(ct){Fe(o,o.return,ct)}}function t0(r){var o=r.updateQueue;if(o!==null){var h=r.stateNode;try{Nt(o,h)}catch(p){Fe(r,r.return,p)}}}function e0(r,o,h){h.props=Sr(r.type,r.memoizedProps),h.state=r.memoizedState;try{h.componentWillUnmount()}catch(p){Fe(r,o,p)}}function br(r,o){try{var h=r.ref;if(h!==null){var p=r.stateNode;switch(r.tag){case 26:case 27:case 5:var y=Zo(p);break;default:y=p}typeof h=="function"?r.refCleanup=h(y):h.current=y}}catch(b){Fe(r,o,b)}}function oi(r,o){var h=r.ref,p=r.refCleanup;if(h!==null)if(typeof p=="function")try{p()}catch(y){Fe(r,o,y)}finally{r.refCleanup=null,r=r.alternate,r!=null&&(r.refCleanup=null)}else if(typeof h=="function")try{h(null)}catch(y){Fe(r,o,y)}else h.current=null}function n0(r){var o=r.type,h=r.memoizedProps,p=r.stateNode;try{g1(p,o,h,r)}catch(y){Fe(r,r.return,y)}}function i0(r,o,h){try{v1(r.stateNode,r.type,h,o,r)}catch(p){Fe(r,r.return,p)}}function s0(r){return r.tag===5||r.tag===3||(Mi?r.tag===26:!1)||(Nn?r.tag===27:!1)||r.tag===4}function kf(r){t:for(;;){for(;r.sibling===null;){if(r.return===null||s0(r.return))return null;r=r.return}for(r.sibling.return=r.return,r=r.sibling;r.tag!==5&&r.tag!==6&&(!Nn||r.tag!==27)&&r.tag!==18;){if(r.flags&2||r.child===null||r.tag===4)continue t;r.child.return=r,r=r.child}if(!(r.flags&2))return r.stateNode}}function Wf(r,o,h){var p=r.tag;if(p===5||p===6)r=r.stateNode,o?y1(h,r,o):p1(h,r);else if(!(p===4||Nn&&p===27)&&(r=r.child,r!==null))for(Wf(r,o,h),r=r.sibling;r!==null;)Wf(r,o,h),r=r.sibling}function bc(r,o,h){var p=r.tag;if(p===5||p===6)r=r.stateNode,o?_1(h,r,o):d1(h,r);else if(!(p===4||Nn&&p===27)&&(r=r.child,r!==null))for(bc(r,o,h),r=r.sibling;r!==null;)bc(r,o,h),r=r.sibling}function r0(r,o,h){r=r.containerInfo;try{$0(r,h)}catch(p){Fe(o,o.return,p)}}function EM(r,o){for(qM(r.containerInfo),_n=o;_n!==null;)if(r=_n,o=r.child,(r.subtreeFlags&1028)!==0&&o!==null)o.return=r,_n=o;else for(;_n!==null;){r=_n;var h=r.alternate;switch(o=r.flags,r.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&h!==null){o=void 0;var p=r,y=h.memoizedProps;h=h.memoizedState;var b=p.stateNode;try{var L=Sr(p.type,y,p.elementType===p.type);o=b.getSnapshotBeforeUpdate(L,h),b.__reactInternalSnapshotBeforeUpdate=o}catch(V){Fe(p,p.return,V)}}break;case 3:(o&1024)!==0&&Un&&A1(r.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(s(163))}if(o=r.sibling,o!==null){o.return=r.return,_n=o;break}_n=r.return}return L=Sv,Sv=!1,L}function a0(r,o,h){var p=h.flags;switch(h.tag){case 0:case 11:case 15:ps(r,h),p&4&&Xo(5,h);break;case 1:if(ps(r,h),p&4)if(r=h.stateNode,o===null)try{r.componentDidMount()}catch(V){Fe(h,h.return,V)}else{var y=Sr(h.type,o.memoizedProps);o=o.memoizedState;try{r.componentDidUpdate(y,o,r.__reactInternalSnapshotBeforeUpdate)}catch(V){Fe(h,h.return,V)}}p&64&&t0(h),p&512&&br(h,h.return);break;case 3:if(ps(r,h),p&64&&(p=h.updateQueue,p!==null)){if(r=null,h.child!==null)switch(h.child.tag){case 27:case 5:r=Zo(h.child.stateNode);break;case 1:r=h.child.stateNode}try{Nt(p,r)}catch(V){Fe(h,h.return,V)}}break;case 26:if(Mi){ps(r,h),p&512&&br(h,h.return);break}case 27:case 5:ps(r,h),o===null&&p&4&&n0(h),p&512&&br(h,h.return);break;case 12:ps(r,h);break;case 13:ps(r,h),p&4&&l0(r,h);break;case 22:if(y=h.memoizedState!==null||xs,!y){o=o!==null&&o.memoizedState!==null||en;var b=xs,L=en;xs=y,(en=o)&&!L?Vs(r,h,(h.subtreeFlags&8772)!==0):ps(r,h),xs=b,en=L}p&512&&(h.memoizedProps.mode==="manual"?br(h,h.return):oi(h,h.return));break;default:ps(r,h)}}function o0(r){var o=r.alternate;o!==null&&(r.alternate=null,o0(o)),r.child=null,r.deletions=null,r.sibling=null,r.tag===5&&(o=r.stateNode,o!==null&&t1(o)),r.stateNode=null,r.return=null,r.dependencies=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.stateNode=null,r.updateQueue=null}function Oi(r,o,h){for(h=h.child;h!==null;)Xf(r,o,h),h=h.sibling}function Xf(r,o,h){if(fi&&typeof fi.onCommitFiberUnmount=="function")try{fi.onCommitFiberUnmount(Jo,h)}catch{}switch(h.tag){case 26:if(Mi){en||oi(h,o),Oi(r,o,h),h.memoizedState?lv(h.memoizedState):h.stateNode&&uv(h.stateNode);break}case 27:if(Nn){en||oi(h,o);var p=ln,y=pi;ln=h.stateNode,Oi(r,o,h),eb(h.stateNode),ln=p,pi=y;break}case 5:en||oi(h,o);case 6:if(Un){if(p=ln,y=pi,ln=null,Oi(r,o,h),ln=p,pi=y,ln!==null)if(pi)try{S1(ln,h.stateNode)}catch(b){Fe(h,o,b)}else try{x1(ln,h.stateNode)}catch(b){Fe(h,o,b)}}else Oi(r,o,h);break;case 18:Un&&ln!==null&&(pi?X1(ln,h.stateNode):W1(ln,h.stateNode));break;case 4:Un?(p=ln,y=pi,ln=h.stateNode.containerInfo,pi=!0,Oi(r,o,h),ln=p,pi=y):(qs&&r0(h.stateNode,h,J0()),Oi(r,o,h));break;case 0:case 11:case 14:case 15:en||Hs(2,h,o),en||Hs(4,h,o),Oi(r,o,h);break;case 1:en||(oi(h,o),p=h.stateNode,typeof p.componentWillUnmount=="function"&&e0(h,o,p)),Oi(r,o,h);break;case 21:Oi(r,o,h);break;case 22:en||oi(h,o),en=(p=en)||h.memoizedState!==null,Oi(r,o,h),en=p;break;default:Oi(r,o,h)}}function l0(r,o){if(Si&&o.memoizedState===null&&(r=o.alternate,r!==null&&(r=r.memoizedState,r!==null&&(r=r.dehydrated,r!==null))))try{k1(r)}catch(h){Fe(o,o.return,h)}}function TM(r){switch(r.tag){case 13:case 19:var o=r.stateNode;return o===null&&(o=r.stateNode=new xv),o;case 22:return r=r.stateNode,o=r._retryCache,o===null&&(o=r._retryCache=new xv),o;default:throw Error(s(435,r.tag))}}function qf(r,o){var h=TM(r);o.forEach(function(p){var y=LM.bind(null,r,p);h.has(p)||(h.add(p),p.then(y,y))})}function Qn(r,o){var h=o.deletions;if(h!==null)for(var p=0;p<h.length;p++){var y=h[p],b=r,L=o;if(Un){var V=L;t:for(;V!==null;){switch(V.tag){case 27:case 5:ln=V.stateNode,pi=!1;break t;case 3:ln=V.stateNode.containerInfo,pi=!0;break t;case 4:ln=V.stateNode.containerInfo,pi=!0;break t}V=V.return}if(ln===null)throw Error(s(160));Xf(b,L,y),ln=null,pi=!1}else Xf(b,L,y);b=y.alternate,b!==null&&(b.return=null),y.return=null}if(o.subtreeFlags&13878)for(o=o.child;o!==null;)c0(o,r),o=o.sibling}function c0(r,o){var h=r.alternate,p=r.flags;switch(r.tag){case 0:case 11:case 14:case 15:Qn(o,r),li(r),p&4&&(Hs(3,r,r.return),Xo(3,r),Hs(5,r,r.return));break;case 1:Qn(o,r),li(r),p&512&&(en||h===null||oi(h,h.return)),p&64&&xs&&(r=r.updateQueue,r!==null&&(p=r.callbacks,p!==null&&(h=r.shared.hiddenCallbacks,r.shared.hiddenCallbacks=h===null?p:h.concat(p))));break;case 26:if(Mi){var y=Fi;Qn(o,r),li(r),p&512&&(en||h===null||oi(h,h.return)),p&4&&(p=h!==null?h.memoizedState:null,o=r.memoizedState,h===null?o===null?r.stateNode===null?r.stateNode=Z1(y,r.type,r.memoizedProps,r):cv(y,r.type,r.stateNode):r.stateNode=ov(y,o,r.memoizedProps):p!==o?(p===null?h.stateNode!==null&&uv(h.stateNode):lv(p),o===null?cv(y,r.type,r.stateNode):ov(y,o,r.memoizedProps)):o===null&&r.stateNode!==null&&i0(r,r.memoizedProps,h.memoizedProps));break}case 27:if(Nn&&p&4&&r.alternate===null){y=r.stateNode;var b=r.memoizedProps;try{$1(y),tb(r.type,b,y,r)}catch(Et){Fe(r,r.return,Et)}}case 5:if(Qn(o,r),li(r),p&512&&(en||h===null||oi(h,h.return)),Un){if(r.flags&32){o=r.stateNode;try{K0(o)}catch(Et){Fe(r,r.return,Et)}}p&4&&r.stateNode!=null&&(o=r.memoizedProps,i0(r,o,h!==null?h.memoizedProps:o)),p&1024&&(Pd=!0)}break;case 6:if(Qn(o,r),li(r),p&4&&Un){if(r.stateNode===null)throw Error(s(162));p=r.memoizedProps,h=h!==null?h.memoizedProps:p,o=r.stateNode;try{m1(o,h,p)}catch(Et){Fe(r,r.return,Et)}}break;case 3:if(Mi?(K1(),y=Fi,Fi=xd(o.containerInfo),Qn(o,r),Fi=y):Qn(o,r),li(r),p&4){if(Un&&Si&&h!==null&&h.memoizedState.isDehydrated)try{G1(o.containerInfo)}catch(Et){Fe(r,r.return,Et)}if(qs){p=o.containerInfo,h=o.pendingChildren;try{$0(p,h)}catch(Et){Fe(r,r.return,Et)}}}Pd&&(Pd=!1,u0(r));break;case 4:Mi?(h=Fi,Fi=xd(r.stateNode.containerInfo),Qn(o,r),li(r),Fi=h):(Qn(o,r),li(r)),p&4&&qs&&r0(r.stateNode,r,r.stateNode.pendingChildren);break;case 12:Qn(o,r),li(r);break;case 13:Qn(o,r),li(r),r.child.flags&8192&&r.memoizedState!==null!=(h!==null&&h.memoizedState!==null)&&(Bd=zi()),p&4&&(p=r.updateQueue,p!==null&&(r.updateQueue=null,qf(r,p)));break;case 22:p&512&&(en||h===null||oi(h,h.return)),y=r.memoizedState!==null;var L=h!==null&&h.memoizedState!==null,V=xs,J=en;if(xs=V||y,en=J||L,Qn(o,r),en=J,xs=V,li(r),o=r.stateNode,o._current=r,o._visibility&=-3,o._visibility|=o._pendingVisibility&2,p&8192&&(o._visibility=y?o._visibility&-2:o._visibility|1,y&&(o=xs||en,h===null||L||o||_a(r)),Un&&(r.memoizedProps===null||r.memoizedProps.mode!=="manual"))){t:if(h=null,Un)for(o=r;;){if(o.tag===5||Mi&&o.tag===26||Nn&&o.tag===27){if(h===null){L=h=o;try{b=L.stateNode,y?M1(b):E1(L.stateNode,L.memoizedProps)}catch(Et){Fe(L,L.return,Et)}}}else if(o.tag===6){if(h===null){L=o;try{var ct=L.stateNode;y?b1(ct):T1(ct,L.memoizedProps)}catch(Et){Fe(L,L.return,Et)}}}else if((o.tag!==22&&o.tag!==23||o.memoizedState===null||o===r)&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break t;for(;o.sibling===null;){if(o.return===null||o.return===r)break t;h===o&&(h=null),o=o.return}h===o&&(h=null),o.sibling.return=o.return,o=o.sibling}}p&4&&(p=r.updateQueue,p!==null&&(h=p.retryQueue,h!==null&&(p.retryQueue=null,qf(r,h))));break;case 19:Qn(o,r),li(r),p&4&&(p=r.updateQueue,p!==null&&(r.updateQueue=null,qf(r,p)));break;case 21:break;default:Qn(o,r),li(r)}}function li(r){var o=r.flags;if(o&2){try{if(Un&&(!Nn||r.tag!==27)){t:{for(var h=r.return;h!==null;){if(s0(h)){var p=h;break t}h=h.return}throw Error(s(160))}switch(p.tag){case 27:if(Nn){var y=p.stateNode,b=kf(r);bc(r,b,y);break}case 5:var L=p.stateNode;p.flags&32&&(K0(L),p.flags&=-33);var V=kf(r);bc(r,V,L);break;case 3:case 4:var J=p.stateNode.containerInfo,ct=kf(r);Wf(r,ct,J);break;default:throw Error(s(161))}}}catch(Et){Fe(r,r.return,Et)}r.flags&=-3}o&4096&&(r.flags&=-4097)}function u0(r){if(r.subtreeFlags&1024)for(r=r.child;r!==null;){var o=r;u0(o),o.tag===5&&o.flags&1024&&s1(o.stateNode),r=r.sibling}}function ps(r,o){if(o.subtreeFlags&8772)for(o=o.child;o!==null;)a0(r,o.alternate,o),o=o.sibling}function _a(r){for(r=r.child;r!==null;){var o=r;switch(o.tag){case 0:case 11:case 14:case 15:Hs(4,o,o.return),_a(o);break;case 1:oi(o,o.return);var h=o.stateNode;typeof h.componentWillUnmount=="function"&&e0(o,o.return,h),_a(o);break;case 26:case 27:case 5:oi(o,o.return),_a(o);break;case 22:oi(o,o.return),o.memoizedState===null&&_a(o);break;default:_a(o)}r=r.sibling}}function Vs(r,o,h){for(h=h&&(o.subtreeFlags&8772)!==0,o=o.child;o!==null;){var p=o.alternate,y=r,b=o,L=b.flags;switch(b.tag){case 0:case 11:case 15:Vs(y,b,h),Xo(4,b);break;case 1:if(Vs(y,b,h),p=b,y=p.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ct){Fe(p,p.return,ct)}if(p=b,y=p.updateQueue,y!==null){var V=p.stateNode;try{var J=y.shared.hiddenCallbacks;if(J!==null)for(y.shared.hiddenCallbacks=null,y=0;y<J.length;y++)X(J[y],V)}catch(ct){Fe(p,p.return,ct)}}h&&L&64&&t0(b),br(b,b.return);break;case 26:case 27:case 5:Vs(y,b,h),h&&p===null&&L&4&&n0(b),br(b,b.return);break;case 12:Vs(y,b,h);break;case 13:Vs(y,b,h),h&&L&4&&l0(y,b);break;case 22:b.memoizedState===null&&Vs(y,b,h),br(b,b.return);break;default:Vs(y,b,h)}o=o.sibling}}function Yf(r,o){var h=null;r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(h=r.memoizedState.cachePool.pool),r=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(r=o.memoizedState.cachePool.pool),r!==h&&(r!=null&&r.refCount++,h!=null&&ko(h))}function Zf(r,o){r=null,o.alternate!==null&&(r=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==r&&(o.refCount++,r!=null&&ko(r))}function Gs(r,o,h,p){if(o.subtreeFlags&10256)for(o=o.child;o!==null;)h0(r,o,h,p),o=o.sibling}function h0(r,o,h,p){var y=o.flags;switch(o.tag){case 0:case 11:case 15:Gs(r,o,h,p),y&2048&&Xo(9,o);break;case 3:Gs(r,o,h,p),y&2048&&(r=null,o.alternate!==null&&(r=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==r&&(o.refCount++,r!=null&&ko(r)));break;case 12:if(y&2048){Gs(r,o,h,p),r=o.stateNode;try{var b=o.memoizedProps,L=b.id,V=b.onPostCommit;typeof V=="function"&&V(L,o.alternate===null?"mount":"update",r.passiveEffectDuration,-0)}catch(J){Fe(o,o.return,J)}}else Gs(r,o,h,p);break;case 23:break;case 22:b=o.stateNode,o.memoizedState!==null?b._visibility&4?Gs(r,o,h,p):qo(r,o):b._visibility&4?Gs(r,o,h,p):(b._visibility|=4,ya(r,o,h,p,(o.subtreeFlags&10256)!==0)),y&2048&&Yf(o.alternate,o);break;case 24:Gs(r,o,h,p),y&2048&&Zf(o.alternate,o);break;default:Gs(r,o,h,p)}}function ya(r,o,h,p,y){for(y=y&&(o.subtreeFlags&10256)!==0,o=o.child;o!==null;){var b=r,L=o,V=h,J=p,ct=L.flags;switch(L.tag){case 0:case 11:case 15:ya(b,L,V,J,y),Xo(8,L);break;case 23:break;case 22:var Et=L.stateNode;L.memoizedState!==null?Et._visibility&4?ya(b,L,V,J,y):qo(b,L):(Et._visibility|=4,ya(b,L,V,J,y)),y&&ct&2048&&Yf(L.alternate,L);break;case 24:ya(b,L,V,J,y),y&&ct&2048&&Zf(L.alternate,L);break;default:ya(b,L,V,J,y)}o=o.sibling}}function qo(r,o){if(o.subtreeFlags&10256)for(o=o.child;o!==null;){var h=r,p=o,y=p.flags;switch(p.tag){case 22:qo(h,p),y&2048&&Yf(p.alternate,p);break;case 24:qo(h,p),y&2048&&Zf(p.alternate,p);break;default:qo(h,p)}o=o.sibling}}function Er(r){if(r.subtreeFlags&Fa)for(r=r.child;r!==null;)f0(r),r=r.sibling}function f0(r){switch(r.tag){case 26:Er(r),r.flags&Fa&&(r.memoizedState!==null?Q1(Fi,r.memoizedState,r.memoizedProps):j0(r.type,r.memoizedProps));break;case 5:Er(r),r.flags&Fa&&j0(r.type,r.memoizedProps);break;case 3:case 4:if(Mi){var o=Fi;Fi=xd(r.stateNode.containerInfo),Er(r),Fi=o}else Er(r);break;case 22:r.memoizedState===null&&(o=r.alternate,o!==null&&o.memoizedState!==null?(o=Fa,Fa=16777216,Er(r),Fa=o):Er(r));break;default:Er(r)}}function d0(r){var o=r.alternate;if(o!==null&&(r=o.child,r!==null)){o.child=null;do o=r.sibling,r.sibling=null,r=o;while(r!==null)}}function Yo(r){var o=r.deletions;if((r.flags&16)!==0){if(o!==null)for(var h=0;h<o.length;h++){var p=o[h];_n=p,m0(p,r)}d0(r)}if(r.subtreeFlags&10256)for(r=r.child;r!==null;)p0(r),r=r.sibling}function p0(r){switch(r.tag){case 0:case 11:case 15:Yo(r),r.flags&2048&&Hs(9,r,r.return);break;case 3:Yo(r);break;case 12:Yo(r);break;case 22:var o=r.stateNode;r.memoizedState!==null&&o._visibility&4&&(r.return===null||r.return.tag!==13)?(o._visibility&=-5,Ec(r)):Yo(r);break;default:Yo(r)}}function Ec(r){var o=r.deletions;if((r.flags&16)!==0){if(o!==null)for(var h=0;h<o.length;h++){var p=o[h];_n=p,m0(p,r)}d0(r)}for(r=r.child;r!==null;){switch(o=r,o.tag){case 0:case 11:case 15:Hs(8,o,o.return),Ec(o);break;case 22:h=o.stateNode,h._visibility&4&&(h._visibility&=-5,Ec(o));break;default:Ec(o)}r=r.sibling}}function m0(r,o){for(;_n!==null;){var h=_n;switch(h.tag){case 0:case 11:case 15:Hs(8,h,o);break;case 23:case 22:if(h.memoizedState!==null&&h.memoizedState.cachePool!==null){var p=h.memoizedState.cachePool.pool;p!=null&&p.refCount++}break;case 24:ko(h.memoizedState.cache)}if(p=h.child,p!==null)p.return=h,_n=p;else t:for(h=r;_n!==null;){p=_n;var y=p.sibling,b=p.return;if(o0(p),p===h){_n=null;break t}if(y!==null){y.return=b,_n=y;break t}_n=b}}}function jf(r){var o=Y0(r);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(s(364));return o}if(r=o1(r),r===null)throw Error(s(362));return r.stateNode.current}function Kf(r,o){var h=r.tag;switch(o.$$typeof){case kc:if(r.type===o.value)return!0;break;case Wc:t:{for(o=o.value,r=[r,0],h=0;h<r.length;){var p=r[h++],y=p.tag,b=r[h++],L=o[b];if(y!==5&&y!==26&&y!==27||!Ko(p)){for(;L!=null&&Kf(p,L);)b++,L=o[b];if(b===o.length){o=!0;break t}else for(p=p.child;p!==null;)r.push(p,b),p=p.sibling}}o=!1}return o;case Xc:if((h===5||h===26||h===27)&&u1(r.stateNode,o.value))return!0;break;case Yc:if((h===5||h===6||h===26||h===27)&&(r=c1(r),r!==null&&0<=r.indexOf(o.value)))return!0;break;case qc:if((h===5||h===26||h===27)&&(r=r.memoizedProps["data-testname"],typeof r=="string"&&r.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(s(365))}return!1}function Jf(r){switch(r.$$typeof){case kc:return"<"+(l(r.value)||"Unknown")+">";case Wc:return":has("+(Jf(r)||"")+")";case Xc:return'[role="'+r.value+'"]';case Yc:return'"'+r.value+'"';case qc:return'[data-testname="'+r.value+'"]';default:throw Error(s(365))}}function g0(r,o){var h=[];r=[r,0];for(var p=0;p<r.length;){var y=r[p++],b=y.tag,L=r[p++],V=o[L];if(b!==5&&b!==26&&b!==27||!Ko(y)){for(;V!=null&&Kf(y,V);)L++,V=o[L];if(L===o.length)h.push(y);else for(y=y.child;y!==null;)r.push(y,L),y=y.sibling}}return h}function Qf(r,o){if(!jo)throw Error(s(363));r=jf(r),r=g0(r,o),o=[],r=Array.from(r);for(var h=0;h<r.length;){var p=r[h++],y=p.tag;if(y===5||y===26||y===27)Ko(p)||o.push(p.stateNode);else for(p=p.child;p!==null;)r.push(p),p=p.sibling}return o}function ci(){if((Ge&2)!==0&&we!==0)return we&-we;if(he.T!==null){var r=Na;return r!==0?r:dt()}return QM()}function v0(){wi===0&&(wi=(we&536870912)===0||Ue?I():536870912);var r=Ai.current;return r!==null&&(r.flags|=32),wi}function kn(r,o,h){(r===Ye&&Ze===2||r.cancelPendingCommit!==null)&&(xa(r,0),ms(r,we,wi,!1)),z(r,h),((Ge&2)===0||r!==Ye)&&(r===Ye&&((Ge&2)===0&&(Or|=h),nn===4&&ms(r,we,wi,!1)),vt(r))}function _0(r,o,h){if((Ge&6)!==0)throw Error(s(327));var p=!h&&(o&60)===0&&(o&r.expiredLanes)===0||R(r,o),y=p?CM(r,o):nd(r,o,!0),b=p;do{if(y===0){Ha&&!p&&ms(r,o,0,!1);break}else if(y===6)ms(r,o,0,!Ss);else{if(h=r.current.alternate,b&&!AM(h)){y=nd(r,o,!1),b=!1;continue}if(y===2){if(b=o,r.errorRecoveryDisabledLanes&b)var L=0;else L=r.pendingLanes&-536870913,L=L!==0?L:L&536870912?536870912:0;if(L!==0){o=L;t:{var V=r;y=sl;var J=Si&&V.current.memoizedState.isDehydrated;if(J&&(xa(V,L).flags|=256),L=nd(V,L,!1),L!==2){if(Id&&!J){V.errorRecoveryDisabledLanes|=b,Or|=b,y=4;break t}b=es,es=y,b!==null&&$f(b)}y=L}if(b=!1,y!==2)continue}}if(y===1){xa(r,0),ms(r,o,0,!0);break}t:{switch(p=r,y){case 0:case 1:throw Error(s(345));case 4:if((o&4194176)===o){ms(p,o,wi,!Ss);break t}break;case 2:es=null;break;case 3:case 5:break;default:throw Error(s(329))}if(p.finishedWork=h,p.finishedLanes=o,(o&62914560)===o&&(b=Bd+300-zi(),10<b)){if(ms(p,o,wi,!Ss),U(p,0)!==0)break t;p.timeoutHandle=jM(y0.bind(null,p,h,es,Zc,zd,o,wi,Or,Va,Ss,2,-0,0),b);break t}y0(p,h,es,Zc,zd,o,wi,Or,Va,Ss,0,-0,0)}}break}while(!0);vt(r)}function $f(r){es===null?es=r:es.push.apply(es,r)}function y0(r,o,h,p,y,b,L,V,J,ct,Et,Pt,Bt){var me=o.subtreeFlags;if((me&8192||(me&16785408)===16785408)&&(n1(),f0(o),o=i1(),o!==null)){r.cancelPendingCommit=o(C0.bind(null,r,h,p,y,L,V,J,1,Pt,Bt)),ms(r,b,L,!ct);return}C0(r,h,p,y,L,V,J,Et,Pt,Bt)}function AM(r){for(var o=r;;){var h=o.tag;if((h===0||h===11||h===15)&&o.flags&16384&&(h=o.updateQueue,h!==null&&(h=h.stores,h!==null)))for(var p=0;p<h.length;p++){var y=h[p],b=y.getSnapshot;y=y.value;try{if(!di(b(),y))return!1}catch{return!1}}if(h=o.child,o.subtreeFlags&16384&&h!==null)h.return=o,o=h;else{if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function ms(r,o,h,p){o&=~Od,o&=~Or,r.suspendedLanes|=o,r.pingedLanes&=~o,p&&(r.warmLanes|=o),p=r.expirationTimes;for(var y=o;0<y;){var b=31-hi(y),L=1<<b;p[b]=-1,y&=~L}h!==0&&k(r,h,o)}function x0(){return(Ge&6)===0?(It(0),!1):!0}function td(){if(be!==null){if(Ze===0)var r=be.return;else r=be,ys=Pr=null,Fo(r),Ia=null,el=0,r=be;for(;r!==null;)$g(r.alternate,r),r=r.return;be=null}}function xa(r,o){r.finishedWork=null,r.finishedLanes=0;var h=r.timeoutHandle;h!==vd&&(r.timeoutHandle=vd,KM(h)),h=r.cancelPendingCommit,h!==null&&(r.cancelPendingCommit=null,h()),td(),Ye=r,be=h=ks(r.current,null),we=o,Ze=0,mi=null,Ss=!1,Ha=R(r,o),Id=!1,Va=wi=Od=Or=Js=nn=0,es=sl=null,zd=!1,(o&8)!==0&&(o|=o&32);var p=r.entangledLanes;if(p!==0)for(r=r.entanglements,p&=o;0<p;){var y=31-hi(p),b=1<<y;o|=r[y],p&=~b}return Ms=o,O(),h}function S0(r,o){Se=null,he.H=ts,o===tl?(o=Xt(),Ze=3):o===Dd?(o=Xt(),Ze=4):Ze=o===_v?8:o!==null&&typeof o=="object"&&typeof o.then=="function"?6:1,mi=o,be===null&&(nn=1,_c(r,st(o,r.current)))}function M0(){var r=Ai.current;return r===null?!0:(we&4194176)===we?$i===null:(we&62914560)===we||(we&536870912)!==0?r===$i:!1}function b0(){var r=he.H;return he.H=ts,r===null?ts:r}function E0(){var r=he.A;return he.A=mb,r}function ed(){nn=4,Ss||(we&4194176)!==we&&Ai.current!==null||(Ha=!0),(Js&134217727)===0&&(Or&134217727)===0||Ye===null||ms(Ye,we,wi,!1)}function nd(r,o,h){var p=Ge;Ge|=2;var y=b0(),b=E0();(Ye!==r||we!==o)&&(Zc=null,xa(r,o)),o=!1;var L=nn;t:do try{if(Ze!==0&&be!==null){var V=be,J=mi;switch(Ze){case 8:td(),L=6;break t;case 3:case 2:case 6:Ai.current===null&&(o=!0);var ct=Ze;if(Ze=0,mi=null,Sa(r,V,J,ct),h&&Ha){L=0;break t}break;default:ct=Ze,Ze=0,mi=null,Sa(r,V,J,ct)}}wM(),L=nn;break}catch(Et){S0(r,Et)}while(!0);return o&&r.shellSuspendCounter++,ys=Pr=null,Ge=p,he.H=y,he.A=b,be===null&&(Ye=null,we=0,O()),L}function wM(){for(;be!==null;)T0(be)}function CM(r,o){var h=Ge;Ge|=2;var p=b0(),y=E0();Ye!==r||we!==o?(Zc=null,rl=zi()+500,xa(r,o)):Ha=R(r,o);t:do try{if(Ze!==0&&be!==null){o=be;var b=mi;e:switch(Ze){case 1:Ze=0,mi=null,Sa(r,o,b,1);break;case 2:if(Ht(b)){Ze=0,mi=null,A0(o);break}o=function(){Ze===2&&Ye===r&&(Ze=7),vt(r)},b.then(o,o);break t;case 3:Ze=7;break t;case 4:Ze=5;break t;case 7:Ht(b)?(Ze=0,mi=null,A0(o)):(Ze=0,mi=null,Sa(r,o,b,7));break;case 5:var L=null;switch(be.tag){case 26:L=be.memoizedState;case 5:case 27:var V=be,J=V.type,ct=V.pendingProps;if(L?hv(L):Z0(J,ct)){Ze=0,mi=null;var Et=V.sibling;if(Et!==null)be=Et;else{var Pt=V.return;Pt!==null?(be=Pt,Tc(Pt)):be=null}break e}}Ze=0,mi=null,Sa(r,o,b,5);break;case 6:Ze=0,mi=null,Sa(r,o,b,6);break;case 8:td(),nn=6;break t;default:throw Error(s(462))}}RM();break}catch(Bt){S0(r,Bt)}while(!0);return ys=Pr=null,he.H=p,he.A=y,Ge=h,be!==null?0:(Ye=null,we=0,O(),nn)}function RM(){for(;be!==null&&!sb();)T0(be)}function T0(r){var o=qg(r.alternate,r,Ms);r.memoizedProps=r.pendingProps,o===null?Tc(r):be=o}function A0(r){var o=r,h=o.alternate;switch(o.tag){case 15:case 0:o=Hg(h,o,o.pendingProps,o.type,void 0,we);break;case 11:o=Hg(h,o,o.pendingProps,o.type.render,o.ref,we);break;case 5:Fo(o);default:$g(h,o),o=be=N0(o,Ms),o=qg(h,o,Ms)}r.memoizedProps=r.pendingProps,o===null?Tc(r):be=o}function Sa(r,o,h,p){ys=Pr=null,Fo(o),Ia=null,el=0;var y=o.return;try{if(xM(r,y,o,h,we)){nn=1,_c(r,st(h,r.current)),be=null;return}}catch(b){if(y!==null)throw be=y,b;nn=1,_c(r,st(h,r.current)),be=null;return}o.flags&32768?(Ue||p===1?r=!0:Ha||(we&536870912)!==0?r=!1:(Ss=r=!0,(p===2||p===3||p===6)&&(p=Ai.current,p!==null&&p.tag===13&&(p.flags|=16384))),w0(o,r)):Tc(o)}function Tc(r){var o=r;do{if((o.flags&32768)!==0){w0(o,Ss);return}r=o.return;var h=MM(o.alternate,o,Ms);if(h!==null){be=h;return}if(o=o.sibling,o!==null){be=o;return}be=o=r}while(o!==null);nn===0&&(nn=5)}function w0(r,o){do{var h=bM(r.alternate,r);if(h!==null){h.flags&=32767,be=h;return}if(h=r.return,h!==null&&(h.flags|=32768,h.subtreeFlags=0,h.deletions=null),!o&&(r=r.sibling,r!==null)){be=r;return}be=r=h}while(r!==null);nn=6,be=null}function C0(r,o,h,p,y,b,L,V,J,ct){var Et=he.T,Pt=wr();try{$n(2),he.T=null,DM(r,o,h,p,Pt,y,b,L,V,J,ct)}finally{he.T=Et,$n(Pt)}}function DM(r,o,h,p,y,b,L,V){do Tr();while(zr!==null);if((Ge&6)!==0)throw Error(s(327));var J=r.finishedWork;if(p=r.finishedLanes,J===null)return null;if(r.finishedWork=null,r.finishedLanes=0,J===r.current)throw Error(s(177));r.callbackNode=null,r.callbackPriority=0,r.cancelPendingCommit=null;var ct=J.lanes|J.childLanes;if(ct|=Td,Z(r,p,ct,b,L,V),r===Ye&&(be=Ye=null,we=0),(J.subtreeFlags&10256)===0&&(J.flags&10256)===0||jc||(jc=!0,Fd=ct,Hd=h,PM(bd,function(){return Tr(),null})),h=(J.flags&15990)!==0,(J.subtreeFlags&15990)!==0||h?(h=he.T,he.T=null,b=wr(),$n(2),L=Ge,Ge|=4,EM(r,J),c0(J,r),YM(r.containerInfo),r.current=J,a0(r,J.alternate,J),rb(),Ge=L,$n(b),he.T=h):r.current=J,jc?(jc=!1,zr=r,al=p):R0(r,ct),ct=r.pendingLanes,ct===0&&(Qs=null),H(J.stateNode),vt(r),o!==null)for(y=r.onRecoverableError,J=0;J<o.length;J++)ct=o[J],y(ct.value,{componentStack:ct.stack});return(al&3)!==0&&Tr(),ct=r.pendingLanes,(p&4194218)!==0&&(ct&42)!==0?r===Vd?ol++:(ol=0,Vd=r):ol=0,It(0),null}function R0(r,o){(r.pooledCacheLanes&=o)===0&&(o=r.pooledCache,o!=null&&(r.pooledCache=null,ko(o)))}function Tr(){if(zr!==null){var r=zr,o=Fd;Fd=0;var h=rt(al),p=32>h?32:h;h=he.T;var y=wr();try{if($n(p),he.T=null,zr===null)var b=!1;else{p=Hd,Hd=null;var L=zr,V=al;if(zr=null,al=0,(Ge&6)!==0)throw Error(s(331));var J=Ge;if(Ge|=4,p0(L.current),h0(L,L.current,V,p),Ge=J,It(0,!1),fi&&typeof fi.onPostCommitFiberRoot=="function")try{fi.onPostCommitFiberRoot(Jo,L)}catch{}b=!0}return b}finally{$n(y),he.T=h,R0(r,o)}}return!1}function D0(r,o,h){o=st(h,o),o=wf(r.stateNode,o,2),r=Lt(r,o,2),r!==null&&(z(r,2),vt(r))}function Fe(r,o,h){if(r.tag===3)D0(r,r,h);else for(;o!==null;){if(o.tag===3){D0(o,r,h);break}else if(o.tag===1){var p=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof p.componentDidCatch=="function"&&(Qs===null||!Qs.has(p))){r=st(h,r),h=Lg(2),p=Lt(o,h,2),p!==null&&(Pg(h,p,o,r),z(p,2),vt(p));break}}o=o.return}}function id(r,o,h){var p=r.pingCache;if(p===null){p=r.pingCache=new gb;var y=new Set;p.set(o,y)}else y=p.get(o),y===void 0&&(y=new Set,p.set(o,y));y.has(h)||(Id=!0,y.add(h),r=UM.bind(null,r,o,h),o.then(r,r))}function UM(r,o,h){var p=r.pingCache;p!==null&&p.delete(o),r.pingedLanes|=r.suspendedLanes&h,r.warmLanes&=~h,Ye===r&&(we&h)===h&&(nn===4||nn===3&&(we&62914560)===we&&300>zi()-Bd?(Ge&2)===0&&xa(r,0):Od|=h,Va===we&&(Va=0)),vt(r)}function U0(r,o){o===0&&(o=C()),r=bt(r,o),r!==null&&(z(r,o),vt(r))}function NM(r){var o=r.memoizedState,h=0;o!==null&&(h=o.retryLane),U0(r,h)}function LM(r,o){var h=0;switch(r.tag){case 13:var p=r.stateNode,y=r.memoizedState;y!==null&&(h=y.retryLane);break;case 19:p=r.stateNode;break;case 22:p=r.stateNode._retryCache;break;default:throw Error(s(314))}p!==null&&p.delete(o),U0(r,h)}function PM(r,o){return Nc(r,o)}function IM(r,o,h,p){this.tag=r,this.key=h,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=p,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function sd(r){return r=r.prototype,!(!r||!r.isReactComponent)}function ks(r,o){var h=r.alternate;return h===null?(h=e(r.tag,o,r.key,r.mode),h.elementType=r.elementType,h.type=r.type,h.stateNode=r.stateNode,h.alternate=r,r.alternate=h):(h.pendingProps=o,h.type=r.type,h.flags=0,h.subtreeFlags=0,h.deletions=null),h.flags=r.flags&31457280,h.childLanes=r.childLanes,h.lanes=r.lanes,h.child=r.child,h.memoizedProps=r.memoizedProps,h.memoizedState=r.memoizedState,h.updateQueue=r.updateQueue,o=r.dependencies,h.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},h.sibling=r.sibling,h.index=r.index,h.ref=r.ref,h.refCleanup=r.refCleanup,h}function N0(r,o){r.flags&=31457282;var h=r.alternate;return h===null?(r.childLanes=0,r.lanes=o,r.child=null,r.subtreeFlags=0,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=h.childLanes,r.lanes=h.lanes,r.child=h.child,r.subtreeFlags=0,r.deletions=null,r.memoizedProps=h.memoizedProps,r.memoizedState=h.memoizedState,r.updateQueue=h.updateQueue,r.type=h.type,o=h.dependencies,r.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),r}function Ac(r,o,h,p,y,b){var L=0;if(p=r,typeof r=="function")sd(r)&&(L=1);else if(typeof r=="string")L=Mi&&Nn?rv(r,h,Tn.current)?26:dv(r)?27:5:Mi?rv(r,h,Tn.current)?26:5:Nn&&dv(r)?27:5;else t:switch(r){case ba:return Ar(h.children,y,b,o);case F0:L=8,y|=24;break;case cd:return r=e(12,h,o,y|2),r.elementType=cd,r.lanes=b,r;case hd:return r=e(13,h,o,y),r.elementType=hd,r.lanes=b,r;case fd:return r=e(19,h,o,y),r.elementType=fd,r.lanes=b,r;case V0:return L0(h,y,b,o);default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case FM:case Ws:L=10;break t;case H0:L=9;break t;case ud:L=11;break t;case dd:L=14;break t;case Xs:L=16,p=null;break t}L=29,h=Error(s(130,r===null?"null":typeof r,"")),p=null}return o=e(L,h,o,y),o.elementType=r,o.type=p,o.lanes=b,o}function Ar(r,o,h,p){return r=e(7,r,p,o),r.lanes=h,r}function L0(r,o,h,p){r=e(22,r,p,o),r.elementType=V0,r.lanes=h;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var b=y._current;if(b===null)throw Error(s(456));if((y._pendingVisibility&2)===0){var L=bt(b,2);L!==null&&(y._pendingVisibility|=2,kn(L,b,2))}},attach:function(){var b=y._current;if(b===null)throw Error(s(456));if((y._pendingVisibility&2)!==0){var L=bt(b,2);L!==null&&(y._pendingVisibility&=-3,kn(L,b,2))}}};return r.stateNode=y,r}function rd(r,o,h){return r=e(6,r,null,o),r.lanes=h,r}function ad(r,o,h){return o=e(4,r.children!==null?r.children:[],r.key,o),o.lanes=h,o.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},o}function OM(r,o,h,p,y,b,L,V){this.tag=1,this.containerInfo=r,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=vd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=p,this.onUncaughtError=y,this.onCaughtError=b,this.onRecoverableError=L,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=V,this.incompleteTransitions=new Map}function P0(r,o,h,p,y,b,L,V,J,ct,Et,Pt){return r=new OM(r,o,h,L,V,J,ct,Pt),o=1,b===!0&&(o|=24),b=e(3,null,null,o),r.current=b,b.stateNode=r,o=Bf(),o.refCount++,r.pooledCache=o,o.refCount++,b.memoizedState={element:p,isDehydrated:h,cache:o},Gt(b),r}function I0(r){return r?(r=Aa,r):Aa}function O0(r){var o=r._reactInternals;if(o===void 0)throw typeof r.render=="function"?Error(s(188)):(r=Object.keys(r).join(","),Error(s(268,r)));return r=v(o),r=r!==null?x(r):null,r===null?null:Zo(r.stateNode)}function z0(r,o,h,p,y,b){y=I0(y),p.context===null?p.context=y:p.pendingContext=y,p=ft(o),p.payload={element:h},b=b===void 0?null:b,b!==null&&(p.callback=b),h=Lt(r,p,o),h!==null&&(kn(h,r,o),$t(h,r,o))}function B0(r,o){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var h=r.retryLane;r.retryLane=h!==0&&h<o?h:o}}function od(r,o){B0(r,o),(r=r.alternate)&&B0(r,o)}var Me={},zM=Em(),ui=tD(),ld=Object.assign,BM=Symbol.for("react.element"),wc=Symbol.for("react.transitional.element"),Ma=Symbol.for("react.portal"),ba=Symbol.for("react.fragment"),F0=Symbol.for("react.strict_mode"),cd=Symbol.for("react.profiler"),FM=Symbol.for("react.provider"),H0=Symbol.for("react.consumer"),Ws=Symbol.for("react.context"),ud=Symbol.for("react.forward_ref"),hd=Symbol.for("react.suspense"),fd=Symbol.for("react.suspense_list"),dd=Symbol.for("react.memo"),Xs=Symbol.for("react.lazy"),V0=Symbol.for("react.offscreen"),HM=Symbol.for("react.memo_cache_sentinel"),G0=Symbol.iterator,VM=Symbol.for("react.client.reference"),he=zM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,pd,k0,md=!1,Cc=Array.isArray,GM=t.rendererVersion,kM=t.rendererPackageName,W0=t.extraDevToolsConfig,Zo=t.getPublicInstance,WM=t.getRootHostContext,XM=t.getChildHostContext,qM=t.prepareForCommit,YM=t.resetAfterCommit,ZM=t.createInstance,gd=t.appendInitialChild,X0=t.finalizeInitialChildren,Rc=t.shouldSetTextContent,q0=t.createTextInstance,jM=t.scheduleTimeout,KM=t.cancelTimeout,vd=t.noTimeout,gs=t.isPrimaryRenderer;t.warnsIfNotActing;var Un=t.supportsMutation,qs=t.supportsPersistence,Si=t.supportsHydration,Y0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var JM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var $n=t.setCurrentUpdatePriority,wr=t.getCurrentUpdatePriority,QM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var $M=t.shouldAttemptEagerTransition,t1=t.detachDeletedInstance;t.requestPostPaintCallback;var e1=t.maySuspendCommit,Z0=t.preloadInstance,n1=t.startSuspendingCommit,j0=t.suspendInstance,i1=t.waitForCommitToBeReady,Ea=t.NotPendingTransition,Cr=t.HostTransitionContext,s1=t.resetFormInstance;t.bindToConsole;var r1=t.supportsMicrotasks,a1=t.scheduleMicrotask,jo=t.supportsTestSelectors,o1=t.findFiberRoot,l1=t.getBoundingRect,c1=t.getTextContent,Ko=t.isHiddenSubtree,u1=t.matchAccessibilityRole,h1=t.setFocusIfFocusable,f1=t.setupIntersectionObserver,d1=t.appendChild,p1=t.appendChildToContainer,m1=t.commitTextUpdate,g1=t.commitMount,v1=t.commitUpdate,_1=t.insertBefore,y1=t.insertInContainerBefore,x1=t.removeChild,S1=t.removeChildFromContainer,K0=t.resetTextContent,M1=t.hideInstance,b1=t.hideTextInstance,E1=t.unhideInstance,T1=t.unhideTextInstance,A1=t.clearContainer,w1=t.cloneInstance,J0=t.createContainerChildSet,Q0=t.appendChildToContainerChildSet,C1=t.finalizeContainerChildren,$0=t.replaceContainerChildren,tv=t.cloneHiddenInstance,ev=t.cloneHiddenTextInstance,_d=t.isSuspenseInstancePending,yd=t.isSuspenseInstanceFallback,R1=t.getSuspenseInstanceFallbackErrorDetails,D1=t.registerSuspenseInstanceRetry,U1=t.canHydrateFormStateMarker,N1=t.isFormStateMarkerMatching,nv=t.getNextHydratableSibling,iv=t.getFirstHydratableChild,L1=t.getFirstHydratableChildWithinContainer,P1=t.getFirstHydratableChildWithinSuspenseInstance,I1=t.canHydrateInstance,O1=t.canHydrateTextInstance,z1=t.canHydrateSuspenseInstance,B1=t.hydrateInstance,F1=t.hydrateTextInstance,H1=t.hydrateSuspenseInstance,V1=t.getNextHydratableInstanceAfterSuspenseInstance,G1=t.commitHydratedContainer,k1=t.commitHydratedSuspenseInstance,W1=t.clearSuspenseBoundary,X1=t.clearSuspenseBoundaryFromContainer,sv=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var q1=t.validateHydratableInstance,Y1=t.validateHydratableTextInstance,Mi=t.supportsResources,rv=t.isHostHoistableType,xd=t.getHoistableRoot,av=t.getResource,ov=t.acquireResource,lv=t.releaseResource,Z1=t.hydrateHoistable,cv=t.mountHoistable,uv=t.unmountHoistable,j1=t.createHoistableInstance,K1=t.prepareToCommitHoistables,J1=t.mayResourceSuspendCommit,hv=t.preloadResource,Q1=t.suspendResource,Nn=t.supportsSingletons,fv=t.resolveSingletonInstance,$1=t.clearSingleton,tb=t.acquireSingletonInstance,eb=t.releaseSingletonInstance,dv=t.isHostSingletonType,Sd=[],Ta=-1,Aa={},hi=Math.clz32?Math.clz32:A,nb=Math.log,ib=Math.LN2,Dc=128,Uc=4194304,Nc=ui.unstable_scheduleCallback,Md=ui.unstable_cancelCallback,sb=ui.unstable_shouldYield,rb=ui.unstable_requestPaint,zi=ui.unstable_now,pv=ui.unstable_ImmediatePriority,ab=ui.unstable_UserBlockingPriority,bd=ui.unstable_NormalPriority,ob=ui.unstable_IdlePriority,lb=ui.log,cb=ui.unstable_setDisableYieldValue,Jo=null,fi=null,di=typeof Object.is=="function"?Object.is:G,mv=new WeakMap,wa=[],Ca=0,Lc=null,Pc=0,bi=[],Ei=0,Rr=null,vs=1,_s="",Tn=S(null),Qo=S(null),Ys=S(null),Ic=S(null),Wn=null,Ln=null,Ue=!1,Bi=null,Qi=!1,Ed=Error(s(519)),Ti=[],Ra=0,Td=0,Oc=null,Da=null,Ad=!1,zc=!1,wd=!1,Ua=0,$o=null,Cd=0,Na=0,La=null,Zs=!1,Rd=!1,ub=Object.prototype.hasOwnProperty,tl=Error(s(460)),Dd=Error(s(474)),Bc={then:function(){}},Pa=null,Ia=null,el=0,Dr=yi(!0),gv=yi(!1),Oa=S(null),Fc=S(0),Ai=S(null),$i=null,dn=S(0),js=0,Se=null,Ve=null,on=null,Hc=!1,za=!1,Ur=!1,Vc=0,nl=0,Ba=null,hb=0,Ud=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},ts={readContext:Dn,use:nt,useCallback:Xe,useContext:Xe,useEffect:Xe,useImperativeHandle:Xe,useLayoutEffect:Xe,useInsertionEffect:Xe,useMemo:Xe,useReducer:Xe,useRef:Xe,useState:Xe,useDebugValue:Xe,useDeferredValue:Xe,useTransition:Xe,useSyncExternalStore:Xe,useId:Xe};ts.useCacheRefresh=Xe,ts.useMemoCache=Xe,ts.useHostTransitionStatus=Xe,ts.useFormState=Xe,ts.useActionState=Xe,ts.useOptimistic=Xe;var Nr={readContext:Dn,use:nt,useCallback:function(r,o){return N().memoizedState=[r,o===void 0?null:o],r},useContext:Dn,useEffect:mg,useImperativeHandle:function(r,o,h){h=h!=null?h.concat([r]):null,mc(4194308,4,_g.bind(null,o,r),h)},useLayoutEffect:function(r,o){return mc(4194308,4,r,o)},useInsertionEffect:function(r,o){mc(4,2,r,o)},useMemo:function(r,o){var h=N();o=o===void 0?null:o;var p=r();if(Ur){Y(!0);try{r()}finally{Y(!1)}}return h.memoizedState=[p,o],p},useReducer:function(r,o,h){var p=N();if(h!==void 0){var y=h(o);if(Ur){Y(!0);try{h(o)}finally{Y(!1)}}}else y=o;return p.memoizedState=p.baseState=y,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:r,lastRenderedState:y},p.queue=r,r=r.dispatch=yM.bind(null,Se,r),[p.memoizedState,r]},useRef:function(r){var o=N();return r={current:r},o.memoizedState=r},useState:function(r){r=Be(r);var o=r.queue,h=wg.bind(null,Se,o);return o.dispatch=h,[r.memoizedState,h]},useDebugValue:Mf,useDeferredValue:function(r,o){var h=N();return bf(h,r,o)},useTransition:function(){var r=Be(!1);return r=bg.bind(null,Se,r.queue,!0,!1),N().memoizedState=r,[!1,r]},useSyncExternalStore:function(r,o,h){var p=Se,y=N();if(Ue){if(h===void 0)throw Error(s(407));h=h()}else{if(h=o(),Ye===null)throw Error(s(349));(we&60)!==0||oe(p,o,h)}y.memoizedState=h;var b={value:h,getSnapshot:o};return y.queue=b,mg(xe.bind(null,p,b,r),[r]),p.flags|=2048,Ki(9,Kt.bind(null,p,b,h,o),{destroy:void 0},null),h},useId:function(){var r=N(),o=Ye.identifierPrefix;if(Ue){var h=_s,p=vs;h=(p&~(1<<32-hi(p)-1)).toString(32)+h,o=":"+o+"R"+h,h=Vc++,0<h&&(o+="H"+h.toString(32)),o+=":"}else h=hb++,o=":"+o+"r"+h.toString(32)+":";return r.memoizedState=o},useCacheRefresh:function(){return N().memoizedState=_M.bind(null,Se)}};Nr.useMemoCache=j,Nr.useHostTransitionStatus=Ef,Nr.useFormState=We,Nr.useActionState=We,Nr.useOptimistic=function(r){var o=N();o.memoizedState=o.baseState=r;var h={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return o.queue=h,o=Tf.bind(null,Se,!0,h),h.dispatch=o,[r,o]};var Ks={readContext:Dn,use:nt,useCallback:xg,useContext:Dn,useEffect:Sf,useImperativeHandle:yg,useInsertionEffect:gg,useLayoutEffect:vg,useMemo:Sg,useReducer:Rt,useRef:Ji,useState:function(){return Rt(xt)},useDebugValue:Mf,useDeferredValue:function(r,o){var h=q();return Mg(h,Ve.memoizedState,r,o)},useTransition:function(){var r=Rt(xt)[0],o=q().memoizedState;return[typeof r=="boolean"?r:et(r),o]},useSyncExternalStore:se,useId:Tg};Ks.useCacheRefresh=Ag,Ks.useMemoCache=j,Ks.useHostTransitionStatus=Ef,Ks.useFormState=Vn,Ks.useActionState=Vn,Ks.useOptimistic=function(r,o){var h=q();return ze(h,Ve,r,o)};var Lr={readContext:Dn,use:nt,useCallback:xg,useContext:Dn,useEffect:Sf,useImperativeHandle:yg,useInsertionEffect:gg,useLayoutEffect:vg,useMemo:Sg,useReducer:Ft,useRef:Ji,useState:function(){return Ft(xt)},useDebugValue:Mf,useDeferredValue:function(r,o){var h=q();return Ve===null?bf(h,r,o):Mg(h,Ve.memoizedState,r,o)},useTransition:function(){var r=Ft(xt)[0],o=q().memoizedState;return[typeof r=="boolean"?r:et(r),o]},useSyncExternalStore:se,useId:Tg};Lr.useCacheRefresh=Ag,Lr.useMemoCache=j,Lr.useHostTransitionStatus=Ef,Lr.useFormState=bn,Lr.useActionState=bn,Lr.useOptimistic=function(r,o){var h=q();return Ve!==null?ze(h,Ve,r,o):(h.baseState=r,[r,h.queue.dispatch])};var Nd={isMounted:function(r){return(r=r._reactInternals)?m(r)===r:!1},enqueueSetState:function(r,o,h){r=r._reactInternals;var p=ci(),y=ft(p);y.payload=o,h!=null&&(y.callback=h),o=Lt(r,y,p),o!==null&&(kn(o,r,p),$t(o,r,p))},enqueueReplaceState:function(r,o,h){r=r._reactInternals;var p=ci(),y=ft(p);y.tag=1,y.payload=o,h!=null&&(y.callback=h),o=Lt(r,y,p),o!==null&&(kn(o,r,p),$t(o,r,p))},enqueueForceUpdate:function(r,o){r=r._reactInternals;var h=ci(),p=ft(h);p.tag=2,o!=null&&(p.callback=o),o=Lt(r,p,h),o!==null&&(kn(o,r,h),$t(o,r,h))}},vv=typeof reportError=="function"?reportError:function(r){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var o=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof r=="object"&&r!==null&&typeof r.message=="string"?String(r.message):String(r),error:r});if(!window.dispatchEvent(o))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",r);return}console.error(r)},_v=Error(s(461)),vn=!1,Ld={dehydrated:null,treeContext:null,retryLane:0},Gc=S(null),Pr=null,ys=null,fb=typeof AbortController<"u"?AbortController:function(){var r=[],o=this.signal={aborted:!1,addEventListener:function(h,p){r.push(p)}};this.abort=function(){o.aborted=!0,r.forEach(function(h){return h()})}},db=ui.unstable_scheduleCallback,pb=ui.unstable_NormalPriority,tn={$$typeof:Ws,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},yv=he.S;he.S=function(r,o){typeof o=="object"&&o!==null&&typeof o.then=="function"&&ot(r,o),yv!==null&&yv(r,o)};var Ir=S(null),xs=!1,en=!1,Pd=!1,xv=typeof WeakSet=="function"?WeakSet:Set,_n=null,Sv=!1,ln=null,pi=!1,Fi=null,Fa=8192,mb={getCacheForType:function(r){var o=Dn(tn),h=o.data.get(r);return h===void 0&&(h=r(),o.data.set(r,h)),h}},kc=0,Wc=1,Xc=2,qc=3,Yc=4;if(typeof Symbol=="function"&&Symbol.for){var il=Symbol.for;kc=il("selector.component"),Wc=il("selector.has_pseudo_class"),Xc=il("selector.role"),qc=il("selector.test_id"),Yc=il("selector.text")}var gb=typeof WeakMap=="function"?WeakMap:Map,Ge=0,Ye=null,be=null,we=0,Ze=0,mi=null,Ss=!1,Ha=!1,Id=!1,Ms=0,nn=0,Js=0,Or=0,Od=0,wi=0,Va=0,sl=null,es=null,zd=!1,Bd=0,rl=1/0,Zc=null,Qs=null,jc=!1,zr=null,al=0,Fd=0,Hd=null,ol=0,Vd=null;return Me.attemptContinuousHydration=function(r){if(r.tag===13){var o=bt(r,67108864);o!==null&&kn(o,r,67108864),od(r,67108864)}},Me.attemptHydrationAtCurrentPriority=function(r){if(r.tag===13){var o=ci(),h=bt(r,o);h!==null&&kn(h,r,o),od(r,o)}},Me.attemptSynchronousHydration=function(r){switch(r.tag){case 3:if(r=r.stateNode,r.current.memoizedState.isDehydrated){var o=T(r.pendingLanes);if(o!==0){for(r.pendingLanes|=2,r.entangledLanes|=2;o;){var h=1<<31-hi(o);r.entanglements[1]|=h,o&=~h}vt(r),(Ge&6)===0&&(rl=zi()+500,It(0))}}break;case 13:o=bt(r,2),o!==null&&kn(o,r,2),x0(),od(r,2)}},Me.batchedUpdates=function(r,o){return r(o)},Me.createComponentSelector=function(r){return{$$typeof:kc,value:r}},Me.createContainer=function(r,o,h,p,y,b,L,V,J,ct){return P0(r,o,!1,null,h,p,b,L,V,J,ct,null)},Me.createHasPseudoClassSelector=function(r){return{$$typeof:Wc,value:r}},Me.createHydrationContainer=function(r,o,h,p,y,b,L,V,J,ct,Et,Pt,Bt){return r=P0(h,p,!0,r,y,b,V,J,ct,Et,Pt,Bt),r.context=I0(null),h=r.current,p=ci(),y=ft(p),y.callback=o??null,Lt(h,y,p),r.current.lanes=p,z(r,p),vt(r),r},Me.createPortal=function(r,o,h){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Ma,key:p==null?null:""+p,children:r,containerInfo:o,implementation:h}},Me.createRoleSelector=function(r){return{$$typeof:Xc,value:r}},Me.createTestNameSelector=function(r){return{$$typeof:qc,value:r}},Me.createTextSelector=function(r){return{$$typeof:Yc,value:r}},Me.defaultOnCaughtError=function(r){console.error(r)},Me.defaultOnRecoverableError=function(r){vv(r)},Me.defaultOnUncaughtError=function(r){vv(r)},Me.deferredUpdates=function(r){var o=he.T,h=wr();try{return $n(32),he.T=null,r()}finally{$n(h),he.T=o}},Me.discreteUpdates=function(r,o,h,p,y){var b=he.T,L=wr();try{return $n(2),he.T=null,r(o,h,p,y)}finally{$n(L),he.T=b,Ge===0&&(rl=zi()+500)}},Me.findAllNodes=Qf,Me.findBoundingRects=function(r,o){if(!jo)throw Error(s(363));o=Qf(r,o),r=[];for(var h=0;h<o.length;h++)r.push(l1(o[h]));for(o=r.length-1;0<o;o--){h=r[o];for(var p=h.x,y=p+h.width,b=h.y,L=b+h.height,V=o-1;0<=V;V--)if(o!==V){var J=r[V],ct=J.x,Et=ct+J.width,Pt=J.y,Bt=Pt+J.height;if(p>=ct&&b>=Pt&&y<=Et&&L<=Bt){r.splice(o,1);break}else if(p!==ct||h.width!==J.width||Bt<b||Pt>L){if(!(b!==Pt||h.height!==J.height||Et<p||ct>y)){ct>p&&(J.width+=ct-p,J.x=p),Et<y&&(J.width=y-ct),r.splice(o,1);break}}else{Pt>b&&(J.height+=Pt-b,J.y=b),Bt<L&&(J.height=L-Pt),r.splice(o,1);break}}}return r},Me.findHostInstance=O0,Me.findHostInstanceWithNoPortals=function(r){return r=v(r),r=r!==null?M(r):null,r===null?null:Zo(r.stateNode)},Me.findHostInstanceWithWarning=function(r){return O0(r)},Me.flushPassiveEffects=Tr,Me.flushSyncFromReconciler=function(r){var o=Ge;Ge|=1;var h=he.T,p=wr();try{if($n(2),he.T=null,r)return r()}finally{$n(p),he.T=h,Ge=o,(Ge&6)===0&&It(0)}},Me.flushSyncWork=x0,Me.focusWithin=function(r,o){if(!jo)throw Error(s(363));for(r=jf(r),o=g0(r,o),o=Array.from(o),r=0;r<o.length;){var h=o[r++],p=h.tag;if(!Ko(h)){if((p===5||p===26||p===27)&&h1(h.stateNode))return!0;for(h=h.child;h!==null;)o.push(h),h=h.sibling}}return!1},Me.getFindAllNodesFailureDescription=function(r,o){if(!jo)throw Error(s(363));var h=0,p=[];r=[jf(r),0];for(var y=0;y<r.length;){var b=r[y++],L=b.tag,V=r[y++],J=o[V];if((L!==5&&L!==26&&L!==27||!Ko(b))&&(Kf(b,J)&&(p.push(Jf(J)),V++,V>h&&(h=V)),V<o.length))for(b=b.child;b!==null;)r.push(b,V),b=b.sibling}if(h<o.length){for(r=[];h<o.length;h++)r.push(Jf(o[h]));return`findAllNodes was able to match part of the selector:
  `+(p.join(" > ")+`

No matching component was found for:
  `)+r.join(" > ")}return null},Me.getPublicRootInstance=function(r){if(r=r.current,!r.child)return null;switch(r.child.tag){case 27:case 5:return Zo(r.child.stateNode);default:return r.child.stateNode}},Me.injectIntoDevTools=function(){var r={bundleType:0,version:GM,rendererPackageName:kM,currentDispatcherRef:he,findFiberByHostInstance:Y0,reconcilerVersion:"19.0.0"};if(W0!==null&&(r.rendererConfig=W0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")r=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)r=!0;else{try{Jo=o.inject(r),fi=o}catch{}r=!!o.checkDCE}}return r},Me.isAlreadyRendering=function(){return!1},Me.observeVisibleRects=function(r,o,h,p){if(!jo)throw Error(s(363));r=Qf(r,o);var y=f1(r,h,p).disconnect;return{disconnect:function(){y()}}},Me.shouldError=function(){return null},Me.shouldSuspend=function(){return!1},Me.startHostTransition=function(r,o,h,p){if(r.tag!==5)throw Error(s(476));var y=Eg(r).queue;bg(r,y,o,Ea,h===null?n:function(){var b=Eg(r).next.queue;return Ho(r,b,{},ci()),h(p)})},Me.updateContainer=function(r,o,h,p){var y=o.current,b=ci();return z0(y,b,r,o,h,p),b},Me.updateContainerSync=function(r,o,h,p){return o.tag===0&&Tr(),z0(o.current,2,r,o,h,p),2},Me},i.exports.default=i.exports,Object.defineProperty(i.exports,"__esModule",{value:!0})}(Bp)),Bp.exports}var hy;function nD(){return hy||(hy=1,zp.exports=eD()),zp.exports}var iD=nD();const sD=Vy(iD);var Vp={exports:{}},Gp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fy;function rD(){return fy||(fy=1,function(i){function t(H,Y){var G=H.length;H.push(Y);t:for(;0<G;){var st=G-1>>>1,lt=H[st];if(0<s(lt,Y))H[st]=Y,H[G]=lt,G=st;else break t}}function e(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var Y=H[0],G=H.pop();if(G!==Y){H[0]=G;t:for(var st=0,lt=H.length,mt=lt>>>1;st<mt;){var wt=2*(st+1)-1,jt=H[wt],$=wt+1,gt=H[$];if(0>s(jt,G))$<lt&&0>s(gt,jt)?(H[st]=gt,H[$]=G,st=$):(H[st]=jt,H[wt]=G,st=wt);else if($<lt&&0>s(gt,G))H[st]=gt,H[$]=G,st=$;else break t}}return Y}function s(H,Y){var G=H.sortIndex-Y.sortIndex;return G!==0?G:H.id-Y.id}if(i.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var a=performance;i.unstable_now=function(){return a.now()}}else{var l=Date,c=l.now();i.unstable_now=function(){return l.now()-c}}var u=[],f=[],d=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(H){for(var Y=e(f);Y!==null;){if(Y.callback===null)n(f);else if(Y.startTime<=H)n(f),Y.sortIndex=Y.expirationTime,t(u,Y);else break;Y=e(f)}}function T(H){if(M=!1,A(H),!x)if(e(u)!==null)x=!0,W();else{var Y=e(f);Y!==null&&rt(T,Y.startTime-H)}}var U=!1,R=-1,P=5,I=-1;function C(){return!(i.unstable_now()-I<P)}function w(){if(U){var H=i.unstable_now();I=H;var Y=!0;try{t:{x=!1,M&&(M=!1,_(R),R=-1),v=!0;var G=g;try{e:{for(A(H),m=e(u);m!==null&&!(m.expirationTime>H&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var lt=st(m.expirationTime<=H);if(H=i.unstable_now(),typeof lt=="function"){m.callback=lt,A(H),Y=!0;break e}m===e(u)&&n(u),A(H)}else n(u);m=e(u)}if(m!==null)Y=!0;else{var mt=e(f);mt!==null&&rt(T,mt.startTime-H),Y=!1}}break t}finally{m=null,g=G,v=!1}Y=void 0}}finally{Y?z():U=!1}}}var z;if(typeof E=="function")z=function(){E(w)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,k=Z.port2;Z.port1.onmessage=w,z=function(){k.postMessage(null)}}else z=function(){S(w,0)};function W(){U||(U=!0,z())}function rt(H,Y){R=S(function(){H(i.unstable_now())},Y)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(H){H.callback=null},i.unstable_continueExecution=function(){x||v||(x=!0,W())},i.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<H?Math.floor(1e3/H):5},i.unstable_getCurrentPriorityLevel=function(){return g},i.unstable_getFirstCallbackNode=function(){return e(u)},i.unstable_next=function(H){switch(g){case 1:case 2:case 3:var Y=3;break;default:Y=g}var G=g;g=Y;try{return H()}finally{g=G}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(H,Y){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var G=g;g=H;try{return Y()}finally{g=G}},i.unstable_scheduleCallback=function(H,Y,G){var st=i.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,H){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,H={id:d++,callback:Y,priorityLevel:H,startTime:G,expirationTime:lt,sortIndex:-1},G>st?(H.sortIndex=G,t(f,H),e(u)===null&&H===e(f)&&(M?(_(R),R=-1):M=!0,rt(T,G-st))):(H.sortIndex=lt,t(u,H),x||v||(x=!0,W())),H},i.unstable_shouldYield=C,i.unstable_wrapCallback=function(H){var Y=g;return function(){var G=g;g=Y;try{return H.apply(this,arguments)}finally{g=G}}}}(Gp)),Gp}var dy;function aD(){return dy||(dy=1,Vp.exports=rD()),Vp.exports}var py=aD();function fg(i,t,e){if(!i)return;if(e(i)===!0)return i;let n=t?i.return:i.child;for(;n;){const s=fg(n,t,e);if(s)return s;n=t?null:n.sibling}}function WS(i){try{return Object.defineProperties(i,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return i}}const dg=WS(ne.createContext(null));class XS extends ne.Component{render(){return ne.createElement(dg.Provider,{value:this._reactInternals},this.props.children)}}function qS(){const i=ne.useContext(dg);if(i===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=ne.useId();return ne.useMemo(()=>{for(const e of[i,i==null?void 0:i.alternate]){if(!e)continue;const n=fg(e,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===t)return!0;a=a.next}});if(n)return n}},[i,t])}const oD=Symbol.for("react.context"),lD=i=>i!==null&&typeof i=="object"&&"$$typeof"in i&&i.$$typeof===oD;function cD(){const i=qS(),[t]=ne.useState(()=>new Map);t.clear();let e=i;for(;e;){const n=e.type;lD(n)&&n!==dg&&!t.has(n)&&t.set(n,ne.use(WS(n))),e=e.return}return t}function uD(){const i=cD();return ne.useMemo(()=>Array.from(i.keys()).reduce((t,e)=>n=>ne.createElement(t,null,ne.createElement(e.Provider,{...n,value:i.get(e)})),t=>ne.createElement(XS,{...t})),[i])}function YS(i){let t=i.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const ZS=i=>i&&i.isOrthographicCamera,hD=i=>i&&i.hasOwnProperty("current"),fD=i=>i!=null&&(typeof i=="string"||typeof i=="number"||i.isColor),fc=((i,t)=>typeof window<"u"&&(((i=window.document)==null?void 0:i.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?ne.useLayoutEffect:ne.useEffect;function jS(i){const t=ne.useRef(i);return fc(()=>void(t.current=i),[i]),t}function dD(){const i=qS(),t=uD();return ne.useMemo(()=>({children:e})=>{const s=!!fg(i,!0,a=>a.type===ne.StrictMode)?ne.StrictMode:ne.Fragment;return un.jsx(s,{children:un.jsx(t,{children:e})})},[i,t])}function pD({set:i}){return fc(()=>(i(new Promise(()=>null)),()=>i(!1)),[i]),null}const mD=(i=>(i=class extends ne.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},i.getDerivedStateFromError=()=>({error:!0}),i))();function KS(i){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(i)?Math.min(Math.max(i[0],e),i[1]):i}function oo(i){var t;return(t=i.__r3f)==null?void 0:t.root.getState()}const Qe={obj:i=>i===Object(i)&&!Qe.arr(i)&&typeof i!="function",fun:i=>typeof i=="function",str:i=>typeof i=="string",num:i=>typeof i=="number",boo:i=>typeof i=="boolean",und:i=>i===void 0,nul:i=>i===null,arr:i=>Array.isArray(i),equ(i,t,{arrays:e="shallow",objects:n="reference",strict:s=!0}={}){if(typeof i!=typeof t||!!i!=!!t)return!1;if(Qe.str(i)||Qe.num(i)||Qe.boo(i))return i===t;const a=Qe.obj(i);if(a&&n==="reference")return i===t;const l=Qe.arr(i);if(l&&e==="reference")return i===t;if((l||a)&&i===t)return!0;let c;for(c in i)if(!(c in t))return!1;if(a&&e==="shallow"&&n==="shallow"){for(c in s?t:i)if(!Qe.equ(i[c],t[c],{strict:s,objects:"reference"}))return!1}else for(c in s?t:i)if(i[c]!==t[c])return!1;if(Qe.und(c)){if(l&&i.length===0&&t.length===0||a&&Object.keys(i).length===0&&Object.keys(t).length===0)return!0;if(i!==t)return!1}return!0}};function gD(i){i.type!=="Scene"&&(i.dispose==null||i.dispose());for(const t in i){const e=i[t];(e==null?void 0:e.type)!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const JS=["children","key","ref"];function vD(i){const t={};for(const e in i)JS.includes(e)||(t[e]=i[e]);return t}function Ph(i,t,e,n){const s=i;let a=s==null?void 0:s.__r3f;return a||(a={root:t,type:e,parent:null,children:[],props:vD(n),object:s,eventCount:0,handlers:{},isHidden:!1},s&&(s.__r3f=a)),a}function ec(i,t){let e=i[t];if(!t.includes("-"))return{root:i,key:t,target:e};e=i;for(const s of t.split("-")){var n;t=s,i=e,e=(n=e)==null?void 0:n[t]}return{root:i,key:t,target:e}}const my=/-\d+$/;function Ih(i,t){if(Qe.str(t.props.attach)){if(my.test(t.props.attach)){const s=t.props.attach.replace(my,""),{root:a,key:l}=ec(i.object,s);Array.isArray(a[l])||(a[l]=[])}const{root:e,key:n}=ec(i.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else Qe.fun(t.props.attach)&&(t.previousAttach=t.props.attach(i.object,t.object))}function Oh(i,t){if(Qe.str(t.props.attach)){const{root:e,key:n}=ec(i.object,t.props.attach),s=t.previousAttach;s===void 0?delete e[n]:e[n]=s}else t.previousAttach==null||t.previousAttach(i.object,t.object);delete t.previousAttach}const gm=[...JS,"args","dispose","attach","object","onUpdate","dispose"],gy=new Map;function _D(i){let t=gy.get(i.constructor);try{t||(t=new i.constructor,gy.set(i.constructor,t))}catch{}return t}function yD(i,t){const e={};for(const n in t)if(!gm.includes(n)&&!Qe.equ(t[n],i.props[n])){e[n]=t[n];for(const s in t)s.startsWith(`${n}-`)&&(e[s]=t[s])}for(const n in i.props){if(gm.includes(n)||t.hasOwnProperty(n))continue;const{root:s,key:a}=ec(i.object,n);if(s.constructor&&s.constructor.length===0){const l=_D(s);Qe.und(l)||(e[a]=l[a])}else e[a]=0}return e}const xD=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],SD=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ur(i,t){var e;const n=i.__r3f,s=n&&YS(n).getState(),a=n==null?void 0:n.eventCount;for(const c in t){let u=t[c];if(gm.includes(c))continue;if(n&&SD.test(c)){typeof u=="function"?n.handlers[c]=u:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(u===void 0)continue;let{root:f,key:d,target:m}=ec(i,c);if(m instanceof bo&&u instanceof bo)m.mask=u.mask;else if(m instanceof Ot&&fD(u))m.set(u);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&u!=null&&u.constructor&&m.constructor===u.constructor)m.copy(u);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(u))typeof m.fromArray=="function"?m.fromArray(u):m.set(...u);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof u=="number")typeof m.setScalar=="function"?m.setScalar(u):m.set(u);else{var l;f[d]=u,s&&!s.linear&&xD.includes(d)&&(l=f[d])!=null&&l.isTexture&&f[d].format===Bn&&f[d].type===Ni&&(f[d].colorSpace=zn)}}if(n!=null&&n.parent&&s!=null&&s.internal&&(e=n.object)!=null&&e.isObject3D&&a!==n.eventCount){const c=n.object,u=s.internal.interaction.indexOf(c);u>-1&&s.internal.interaction.splice(u,1),n.eventCount&&c.raycast!==null&&s.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Po(n),i}function Po(i){var t;if(!i.parent)return;i.props.onUpdate==null||i.props.onUpdate(i.object);const e=(t=i.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function MD(i,t){i.manual||(ZS(i)?(i.left=t.width/-2,i.right=t.width/2,i.top=t.height/2,i.bottom=t.height/-2):i.aspect=t.width/t.height,i.updateProjectionMatrix())}const ni=i=>i==null?void 0:i.isObject3D;function Vu(i){return(i.eventObject||i.object).uuid+"/"+i.index+i.instanceId}function QS(i,t,e,n){const s=e.get(t);s&&(e.delete(t),e.size===0&&(i.delete(n),s.target.releasePointerCapture(n)))}function bD(i,t){const{internal:e}=i.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,s)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(s)}),e.capturedMap.forEach((n,s)=>{QS(e.capturedMap,t,n,s)})}function ED(i){function t(u){const{internal:f}=i.getState(),d=u.offsetX-f.initialClick[0],m=u.offsetY-f.initialClick[1];return Math.round(Math.sqrt(d*d+m*m))}function e(u){return u.filter(f=>["Move","Over","Enter","Out","Leave"].some(d=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+d]}))}function n(u,f){const d=i.getState(),m=new Set,g=[],v=f?f(d.internal.interaction):d.internal.interaction;for(let _=0;_<v.length;_++){const E=oo(v[_]);E&&(E.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function x(_){const E=oo(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(u,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let M=v.flatMap(x).sort((_,E)=>{const A=oo(_.object),T=oo(E.object);return!A||!T?_.distance-E.distance:T.events.priority-A.events.priority||_.distance-E.distance}).filter(_=>{const E=Vu(_);return m.has(E)?!1:(m.add(E),!0)});d.events.filter&&(M=d.events.filter(M,d));for(const _ of M){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let _ of d.internal.capturedMap.get(u.pointerId).values())m.has(Vu(_.intersection))||g.push(_.intersection);return g}function s(u,f,d,m){if(u.length){const g={stopped:!1};for(const v of u){let x=oo(v.object);if(x||v.object.traverseAncestors(M=>{const S=oo(M);if(S)return x=S,!1}),x){const{raycaster:M,pointer:S,camera:_,internal:E}=x,A=new B(S.x,S.y,0).unproject(_),T=C=>{var w,z;return(w=(z=E.capturedMap.get(C))==null?void 0:z.has(v.eventObject))!=null?w:!1},U=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},R=C=>{const w=E.capturedMap.get(C);w&&QS(E.capturedMap,v.eventObject,w,C)};let P={};for(let C in f){let w=f[C];typeof w!="function"&&(P[C]=w)}let I={...v,...P,pointer:S,intersections:u,stopped:g.stopped,delta:d,unprojectedPoint:A,ray:M.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(I.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=u.slice(0,u.indexOf(v));a([...w,v])}},target:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:R},currentTarget:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:R},nativeEvent:f};if(m(I),g.stopped===!0)break}}}return u}function a(u){const{internal:f}=i.getState();for(const d of f.hovered.values())if(!u.length||!u.find(m=>m.object===d.object&&m.index===d.index&&m.instanceId===d.instanceId)){const g=d.eventObject.__r3f;if(f.hovered.delete(Vu(d)),g!=null&&g.eventCount){const v=g.handlers,x={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(u,f){for(let d=0;d<f.length;d++){const m=f[d].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>a([]);case"onLostPointerCapture":return f=>{const{internal:d}=i.getState();"pointerId"in f&&d.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(f.pointerId)&&(d.capturedMap.delete(f.pointerId),a([]))})}}return function(d){const{onPointerMissed:m,internal:g}=i.getState();g.lastEvent.current=d;const v=u==="onPointerMove",x=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",S=n(d,v?e:void 0),_=x?t(d):0;u==="onPointerDown"&&(g.initialClick=[d.offsetX,d.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(d,g.interaction),m&&m(d)),v&&a(S);function E(A){const T=A.eventObject,U=T.__r3f;if(!(U!=null&&U.eventCount))return;const R=U.handlers;if(v){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const P=Vu(A),I=g.hovered.get(P);I?I.stopped&&A.stopPropagation():(g.hovered.set(P,A),R.onPointerOver==null||R.onPointerOver(A),R.onPointerEnter==null||R.onPointerEnter(A))}R.onPointerMove==null||R.onPointerMove(A)}else{const P=R[u];P?(!x||g.initialHits.includes(T))&&(l(d,g.interaction.filter(I=>!g.initialHits.includes(I))),P(A)):x&&g.initialHits.includes(T)&&l(d,g.interaction.filter(I=>!g.initialHits.includes(I)))}}s(S,d,_,E)}}return{handlePointer:c}}const vy=i=>!!(i!=null&&i.render),$S=ne.createContext(null),TD=(i,t)=>{const e=Q3((c,u)=>{const f=new B,d=new B,m=new B;function g(_=u().camera,E=d,A=u().size){const{width:T,height:U,top:R,left:P}=A,I=T/U;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(ZS(_))return{width:T/_.zoom,height:U/_.zoom,top:R,left:P,factor:1,distance:C,aspect:I};{const w=_.fov*Math.PI/180,z=2*Math.tan(w/2)*C,Z=z*(T/U);return{width:Z,height:z,top:R,left:P,factor:T/Z,distance:C,aspect:I}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),M=new pt;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>i(u(),_),advance:(_,E)=>t(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new ag,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,A=0,T=0)=>{const U=u().camera,R={width:_,height:E,top:A,left:T};c(P=>({size:R,viewport:{...P.viewport,...g(U,d,R)}}))},setDpr:_=>c(E=>{const A=KS(_);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:ne.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,A)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:A}),T.subscribers=T.subscribers.sort((U,R)=>U.priority-R.priority),()=>{const U=u().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(R=>R.ref!==_))}}}}}),n=e.getState();let s=n.size,a=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:u,viewport:f,gl:d,set:m}=e.getState();if(u.width!==s.width||u.height!==s.height||f.dpr!==a){s=u,a=f.dpr,MD(c,u),f.dpr>0&&d.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>i(c)),e};function tM(){const i=ne.useContext($S);if(!i)throw new Error("R3F: Hooks can only be used within the Canvas component!");return i}function AD(i=e=>e,t){return tM()(i,t)}function wD(i,t=0){const e=tM(),n=e.getState().internal.subscribe,s=jS(i);return fc(()=>n(s,t,e),[t,n,e]),null}function CD(i){const t=sD(i);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ne.version}),t}const eM=0,wo={},RD=/^three(?=[A-Z])/,yf=i=>`${i[0].toUpperCase()}${i.slice(1)}`;let DD=0;const UD=i=>typeof i=="function";function ND(i){if(UD(i)){const t=`${DD++}`;return wo[t]=i,t}else Object.assign(wo,i)}function nM(i,t){const e=yf(i),n=wo[e];if(i!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(i==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function LD(i,t,e){var n;return i=yf(i)in wo?i:i.replace(RD,""),nM(i,t),i==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Ph(t.object,e,i,t)}function PD(i){if(!i.isHidden){var t;i.props.attach&&(t=i.parent)!=null&&t.object?Oh(i.parent,i):ni(i.object)&&(i.object.visible=!1),i.isHidden=!0,Po(i)}}function iM(i){if(i.isHidden){var t;i.props.attach&&(t=i.parent)!=null&&t.object?Ih(i.parent,i):ni(i.object)&&i.props.visible!==!1&&(i.object.visible=!0),i.isHidden=!1,Po(i)}}function pg(i,t,e){const n=t.root.getState();if(!(!i.parent&&i.object!==n.scene)){if(!t.object){var s,a;const l=wo[yf(t.type)];t.object=(s=t.props.object)!=null?s:new l(...(a=t.props.args)!=null?a:[]),t.object.__r3f=t}if(ur(t.object,t.props),t.props.attach)Ih(i,t);else if(ni(t.object)&&ni(i.object)){const l=i.object.children.indexOf(e==null?void 0:e.object);if(e&&l!==-1){const c=i.object.children.indexOf(t.object);if(c!==-1){i.object.children.splice(c,1);const u=c<l?l-1:l;i.object.children.splice(u,0,t.object)}else t.object.parent=i.object,i.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),i.object.dispatchEvent({type:"childadded",child:t.object})}else i.object.add(t.object)}for(const l of t.children)pg(t,l);Po(t)}}function kp(i,t){t&&(t.parent=i,i.children.push(t),pg(i,t))}function _y(i,t,e){if(!t||!e)return;t.parent=i;const n=i.children.indexOf(e);n!==-1?i.children.splice(n,0,t):i.children.push(t),pg(i,t,e)}function sM(i){if(typeof i.dispose=="function"){const t=()=>{try{i.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():py.unstable_scheduleCallback(py.unstable_IdlePriority,t)}}function vm(i,t,e){if(!t)return;t.parent=null;const n=i.children.indexOf(t);n!==-1&&i.children.splice(n,1),t.props.attach?Oh(i,t):ni(t.object)&&ni(i.object)&&(i.object.remove(t.object),bD(YS(t),t.object));const s=t.props.dispose!==null&&e!==!1;for(let a=t.children.length-1;a>=0;a--){const l=t.children[a];vm(t,l,s)}t.children.length=0,delete t.object.__r3f,s&&t.type!=="primitive"&&t.object.type!=="Scene"&&sM(t.object),e===void 0&&Po(t)}function ID(i,t){for(const e of[i,i.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const Yu=[];function OD(){for(const[e]of Yu){const n=e.parent;if(n){e.props.attach?Oh(n,e):ni(e.object)&&ni(n.object)&&n.object.remove(e.object);for(const s of e.children)s.props.attach?Oh(e,s):ni(s.object)&&ni(e.object)&&e.object.remove(s.object)}e.isHidden&&iM(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&sM(e.object)}for(const[e,n,s]of Yu){e.props=n;const a=e.parent;if(a){var i,t;const l=wo[yf(e.type)];e.object=(i=e.props.object)!=null?i:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,ID(s,e.object),ur(e.object,e.props),e.props.attach?Ih(a,e):ni(e.object)&&ni(a.object)&&a.object.add(e.object);for(const c of e.children)c.props.attach?Ih(e,c):ni(c.object)&&ni(e.object)&&e.object.add(c.object);Po(e)}}Yu.length=0}const Wp=()=>{},yy={};let Gu=eM;const zD=0,BD=4,_m=CD({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:LD,removeChild:vm,appendChild:kp,appendInitialChild:kp,insertBefore:_y,appendChildToContainer(i,t){const e=i.getState().scene.__r3f;!t||!e||kp(e,t)},removeChildFromContainer(i,t){const e=i.getState().scene.__r3f;!t||!e||vm(e,t)},insertInContainerBefore(i,t,e){const n=i.getState().scene.__r3f;!t||!e||!n||_y(n,t,e)},getRootHostContext:()=>yy,getChildHostContext:()=>yy,commitUpdate(i,t,e,n,s){var a,l,c;nM(t,n);let u=!1;if((i.type==="primitive"&&e.object!==n.object||((a=n.args)==null?void 0:a.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((d,m)=>{var g;return d!==((g=e.args)==null?void 0:g[m])}))&&(u=!0),u)Yu.push([i,{...n},s]);else{const d=yD(i,n);Object.keys(d).length&&(Object.assign(i.props,d),ur(i.object,d))}(s.sibling===null||(s.flags&BD)===zD)&&OD()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:i=>i==null?void 0:i.object,prepareForCommit:()=>null,preparePortalMount:i=>Ph(i.getState().scene,i,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:PD,unhideInstance:iM,createTextInstance:Wp,hideTextInstance:Wp,unhideTextInstance:Wp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:ne.createContext(null),setCurrentUpdatePriority(i){Gu=i},getCurrentUpdatePriority(){return Gu},resolveUpdatePriority(){var i;if(Gu!==eM)return Gu;switch(typeof window<"u"&&((i=window.event)==null?void 0:i.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return qu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return qu.ContinuousEventPriority;default:return qu.DefaultEventPriority}},resetFormInstance(){}}),ha=new Map,lo={objects:"shallow",strict:!1};function FD(i,t){if(!t&&typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement&&i.parentElement){const{width:e,height:n,top:s,left:a}=i.parentElement.getBoundingClientRect();return{width:e,height:n,top:s,left:a}}else if(!t&&typeof OffscreenCanvas<"u"&&i instanceof OffscreenCanvas)return{width:i.width,height:i.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function HD(i){const t=ha.get(i),e=t==null?void 0:t.fiber,n=t==null?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");const s=typeof reportError=="function"?reportError:console.error,a=n||TD(Sm,Sy),l=e||_m.createContainer(a,qu.ConcurrentRoot,null,!1,null,"",s,s,s,null);t||ha.set(i,{fiber:l,store:a});let c,u,f=!1,d=null;return{async configure(m={}){let g;d=new Promise(mt=>g=mt);let{gl:v,size:x,scene:M,events:S,onCreated:_,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:U=!1,orthographic:R=!1,frameloop:P="always",dpr:I=[1,2],performance:C,raycaster:w,camera:z,onPointerMissed:Z}=m,k=a.getState(),W=k.gl;if(!k.gl){const mt={canvas:i,powerPreference:"high-performance",antialias:!0,alpha:!0},wt=typeof v=="function"?await v(mt):v;vy(wt)?W=wt:W=new kS({...mt,...v}),k.set({gl:W})}let rt=k.raycaster;rt||k.set({raycaster:rt=new IS});const{params:H,...Y}=w||{};if(Qe.equ(Y,rt,lo)||ur(rt,{...Y}),Qe.equ(H,rt.params,lo)||ur(rt,{params:{...rt.params,...H}}),!k.camera||k.camera===u&&!Qe.equ(u,z,lo)){u=z;const mt=z==null?void 0:z.isCamera,wt=mt?z:R?new hc(0,0,0,0,.1,1e3):new Sn(75,0,.1,1e3);mt||(wt.position.z=5,z&&(ur(wt,z),wt.manual||("aspect"in z||"left"in z||"right"in z||"bottom"in z||"top"in z)&&(wt.manual=!0,wt.updateProjectionMatrix())),!k.camera&&!(z!=null&&z.rotation)&&wt.lookAt(0,0,0)),k.set({camera:wt}),rt.camera=wt}if(!k.scene){let mt;M!=null&&M.isScene?(mt=M,Ph(mt,a,"",{})):(mt=new Hm,Ph(mt,a,"",{}),M&&ur(mt,M)),k.set({scene:mt})}S&&!k.events.handlers&&k.set({events:S(a)});const G=FD(i,x);if(Qe.equ(G,k.size,lo)||k.setSize(G.width,G.height,G.top,G.left),I&&k.viewport.dpr!==KS(I)&&k.setDpr(I),k.frameloop!==P&&k.setFrameloop(P),k.onPointerMissed||k.set({onPointerMissed:Z}),C&&!Qe.equ(C,k.performance,lo)&&k.set(mt=>({performance:{...mt.performance,...C}})),!k.xr){var st;const mt=($,gt)=>{const Wt=a.getState();Wt.frameloop!=="never"&&Sy($,!0,Wt,gt)},wt=()=>{const $=a.getState();$.gl.xr.enabled=$.gl.xr.isPresenting,$.gl.xr.setAnimationLoop($.gl.xr.isPresenting?mt:null),$.gl.xr.isPresenting||Sm($)},jt={connect(){const $=a.getState().gl;$.xr.addEventListener("sessionstart",wt),$.xr.addEventListener("sessionend",wt)},disconnect(){const $=a.getState().gl;$.xr.removeEventListener("sessionstart",wt),$.xr.removeEventListener("sessionend",wt)}};typeof((st=W.xr)==null?void 0:st.addEventListener)=="function"&&jt.connect(),k.set({xr:jt})}if(W.shadowMap){const mt=W.shadowMap.enabled,wt=W.shadowMap.type;if(W.shadowMap.enabled=!!E,Qe.boo(E))W.shadowMap.type=Tl;else if(Qe.str(E)){var lt;const jt={basic:Wy,percentage:Fh,soft:Tl,variance:ki};W.shadowMap.type=(lt=jt[E])!=null?lt:Tl}else Qe.obj(E)&&Object.assign(W.shadowMap,E);(mt!==W.shadowMap.enabled||wt!==W.shadowMap.type)&&(W.shadowMap.needsUpdate=!0)}return Te.enabled=!U,f||(W.outputColorSpace=A?pr:zn,W.toneMapping=T?os:Tm),k.legacy!==U&&k.set(()=>({legacy:U})),k.linear!==A&&k.set(()=>({linear:A})),k.flat!==T&&k.set(()=>({flat:T})),v&&!Qe.fun(v)&&!vy(v)&&!Qe.equ(v,W,lo)&&ur(W,v),c=_,f=!0,g(),this},render(m){return!f&&!d&&this.configure(),d.then(()=>{_m.updateContainer(un.jsx(VD,{store:a,children:m,onCreated:c,rootElement:i}),l,null,()=>{})}),a},unmount(){rM(i)}}}function VD({store:i,children:t,onCreated:e,rootElement:n}){return fc(()=>{const s=i.getState();s.set(a=>({internal:{...a.internal,active:!0}})),e&&e(s),i.getState().events.connected||s.events.connect==null||s.events.connect(n)},[]),un.jsx($S.Provider,{value:i,children:t})}function rM(i,t){const e=ha.get(i),n=e==null?void 0:e.fiber;if(n){const s=e==null?void 0:e.store.getState();s&&(s.internal.active=!1),_m.updateContainer(null,n,null,()=>{s&&setTimeout(()=>{try{var a,l,c,u;s.events.disconnect==null||s.events.disconnect(),(a=s.gl)==null||(l=a.renderLists)==null||l.dispose==null||l.dispose(),(c=s.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=s.gl)!=null&&u.xr&&s.xr.disconnect(),gD(s.scene),ha.delete(i)}catch{}},500)})}}const GD=new Set,kD=new Set,WD=new Set;function Xp(i,t){if(i.size)for(const{callback:e}of i.values())e(t)}function Il(i,t){switch(i){case"before":return Xp(GD,t);case"after":return Xp(kD,t);case"tail":return Xp(WD,t)}}let qp,Yp;function ym(i,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof i=="number"&&(n=i-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=i),qp=t.internal.subscribers;for(let s=0;s<qp.length;s++)Yp=qp[s],Yp.ref.current(Yp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let zh=!1,xm=!1,Zp,xy,co;function aM(i){xy=requestAnimationFrame(aM),zh=!0,Zp=0,Il("before",i),xm=!0;for(const e of ha.values()){var t;co=e.store.getState(),co.internal.active&&(co.frameloop==="always"||co.internal.frames>0)&&!((t=co.gl.xr)!=null&&t.isPresenting)&&(Zp+=ym(i,co))}if(xm=!1,Il("after",i),Zp===0)return Il("tail",i),zh=!1,cancelAnimationFrame(xy)}function Sm(i,t=1){var e;if(!i)return ha.forEach(n=>Sm(n.store.getState(),t));(e=i.gl.xr)!=null&&e.isPresenting||!i.internal.active||i.frameloop==="never"||(t>1?i.internal.frames=Math.min(60,i.internal.frames+t):xm?i.internal.frames=2:i.internal.frames=1,zh||(zh=!0,requestAnimationFrame(aM)))}function Sy(i,t=!0,e,n){if(t&&Il("before",i),e)ym(i,e,n);else for(const s of ha.values())ym(i,s.store.getState());t&&Il("after",i)}const jp={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function XD(i){const{handlePointer:t}=ED(i);return{priority:1,enabled:!0,compute(e,n,s){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(jp).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:s}=i.getState();(e=s.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(s.lastEvent.current)},connect:e=>{const{set:n,events:s}=i.getState();if(s.disconnect==null||s.disconnect(),n(a=>({events:{...a.events,connected:e}})),s.handlers)for(const a in s.handlers){const l=s.handlers[a],[c,u]=jp[a];e.addEventListener(c,l,{passive:u})}},disconnect:()=>{const{set:e,events:n}=i.getState();if(n.connected){if(n.handlers)for(const s in n.handlers){const a=n.handlers[s],[l]=jp[s];n.connected.removeEventListener(l,a)}e(s=>({events:{...s.events,connected:void 0}}))}}}}function My(i,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>i(...n),t)}}function qD({debounce:i,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const s=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,l]=ne.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=ne.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a,orientationHandler:null}),u=i?typeof i=="number"?i:i.scroll:null,f=i?typeof i=="number"?i:i.resize:null,d=ne.useRef(!1);ne.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[m,g,v]=ne.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:U,bottom:R,right:P,x:I,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:A,width:T,height:U,bottom:R,right:P,x:I,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),d.current&&!KD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?My(_,f):_,u?My(_,u):_]},[l,n,u,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new s(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=oM(_),M())};return ZD(v,!!t),YD(g),ne.useEffect(()=>{x(),M()},[t,v,g]),ne.useEffect(()=>x,[]),[S,a,m]}function YD(i){ne.useEffect(()=>{const t=i;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[i])}function ZD(i,t){ne.useEffect(()=>{if(t){const e=i;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[i,t])}function oM(i){const t=[];if(!i||i===document.body)return t;const{overflow:e,overflowX:n,overflowY:s}=window.getComputedStyle(i);return[e,n,s].some(a=>a==="auto"||a==="scroll")&&t.push(i),[...t,...oM(i.parentElement)]}const jD=["x","y","top","bottom","left","right","width","height"],KD=(i,t)=>jD.every(e=>i[e]===t[e]);function JD({ref:i,children:t,fallback:e,resize:n,style:s,gl:a,events:l=XD,eventSource:c,eventPrefix:u,shadows:f,linear:d,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:E,scene:A,onPointerMissed:T,onCreated:U,...R}){ne.useMemo(()=>ND(F3),[]);const P=dD(),[I,C]=qD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=ne.useRef(null),z=ne.useRef(null);ne.useImperativeHandle(i,()=>w.current);const Z=jS(T),[k,W]=ne.useState(!1),[rt,H]=ne.useState(!1);if(k)throw k;if(rt)throw rt;const Y=ne.useRef(null);fc(()=>{const st=w.current;if(C.width>0&&C.height>0&&st){Y.current||(Y.current=HD(st));async function lt(){await Y.current.configure({gl:a,scene:A,events:l,shadows:f,linear:d,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(...mt)=>Z.current==null?void 0:Z.current(...mt),onCreated:mt=>{mt.events.connect==null||mt.events.connect(c?hD(c)?c.current:c:z.current),u&&mt.setEvents({compute:(wt,jt)=>{const $=wt[u+"X"],gt=wt[u+"Y"];jt.pointer.set($/jt.size.width*2-1,-(gt/jt.size.height)*2+1),jt.raycaster.setFromCamera(jt.pointer,jt.camera)}}),U==null||U(mt)}}),Y.current.render(un.jsx(P,{children:un.jsx(mD,{set:H,children:un.jsx(ne.Suspense,{fallback:un.jsx(pD,{set:W}),children:t??null})})}))}lt()}}),ne.useEffect(()=>{const st=w.current;if(st)return()=>rM(st)},[]);const G=c?"none":"auto";return un.jsx("div",{ref:z,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:G,...s},...R,children:un.jsx("div",{ref:I,style:{width:"100%",height:"100%"},children:un.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function QD(i){return un.jsx(XS,{children:un.jsx(JD,{...i})})}function Ol(i){let t=i[0],e=i[1],n=i[2];return Math.sqrt(t*t+e*e+n*n)}function Mm(i,t){return i[0]=t[0],i[1]=t[1],i[2]=t[2],i}function $D(i,t,e,n){return i[0]=t,i[1]=e,i[2]=n,i}function by(i,t,e){return i[0]=t[0]+e[0],i[1]=t[1]+e[1],i[2]=t[2]+e[2],i}function Ey(i,t,e){return i[0]=t[0]-e[0],i[1]=t[1]-e[1],i[2]=t[2]-e[2],i}function tU(i,t,e){return i[0]=t[0]*e[0],i[1]=t[1]*e[1],i[2]=t[2]*e[2],i}function eU(i,t,e){return i[0]=t[0]/e[0],i[1]=t[1]/e[1],i[2]=t[2]/e[2],i}function Kp(i,t,e){return i[0]=t[0]*e,i[1]=t[1]*e,i[2]=t[2]*e,i}function nU(i,t){let e=t[0]-i[0],n=t[1]-i[1],s=t[2]-i[2];return Math.sqrt(e*e+n*n+s*s)}function iU(i,t){let e=t[0]-i[0],n=t[1]-i[1],s=t[2]-i[2];return e*e+n*n+s*s}function Ty(i){let t=i[0],e=i[1],n=i[2];return t*t+e*e+n*n}function sU(i,t){return i[0]=-t[0],i[1]=-t[1],i[2]=-t[2],i}function rU(i,t){return i[0]=1/t[0],i[1]=1/t[1],i[2]=1/t[2],i}function bm(i,t){let e=t[0],n=t[1],s=t[2],a=e*e+n*n+s*s;return a>0&&(a=1/Math.sqrt(a)),i[0]=t[0]*a,i[1]=t[1]*a,i[2]=t[2]*a,i}function lM(i,t){return i[0]*t[0]+i[1]*t[1]+i[2]*t[2]}function Ay(i,t,e){let n=t[0],s=t[1],a=t[2],l=e[0],c=e[1],u=e[2];return i[0]=s*u-a*c,i[1]=a*l-n*u,i[2]=n*c-s*l,i}function aU(i,t,e,n){let s=t[0],a=t[1],l=t[2];return i[0]=s+n*(e[0]-s),i[1]=a+n*(e[1]-a),i[2]=l+n*(e[2]-l),i}function oU(i,t,e,n,s){const a=Math.exp(-n*s);let l=t[0],c=t[1],u=t[2];return i[0]=e[0]+(l-e[0])*a,i[1]=e[1]+(c-e[1])*a,i[2]=e[2]+(u-e[2])*a,i}function lU(i,t,e){let n=t[0],s=t[1],a=t[2],l=e[3]*n+e[7]*s+e[11]*a+e[15];return l=l||1,i[0]=(e[0]*n+e[4]*s+e[8]*a+e[12])/l,i[1]=(e[1]*n+e[5]*s+e[9]*a+e[13])/l,i[2]=(e[2]*n+e[6]*s+e[10]*a+e[14])/l,i}function cU(i,t,e){let n=t[0],s=t[1],a=t[2],l=e[3]*n+e[7]*s+e[11]*a+e[15];return l=l||1,i[0]=(e[0]*n+e[4]*s+e[8]*a)/l,i[1]=(e[1]*n+e[5]*s+e[9]*a)/l,i[2]=(e[2]*n+e[6]*s+e[10]*a)/l,i}function uU(i,t,e){let n=t[0],s=t[1],a=t[2];return i[0]=n*e[0]+s*e[3]+a*e[6],i[1]=n*e[1]+s*e[4]+a*e[7],i[2]=n*e[2]+s*e[5]+a*e[8],i}function hU(i,t,e){let n=t[0],s=t[1],a=t[2],l=e[0],c=e[1],u=e[2],f=e[3],d=c*a-u*s,m=u*n-l*a,g=l*s-c*n,v=c*g-u*m,x=u*d-l*g,M=l*m-c*d,S=f*2;return d*=S,m*=S,g*=S,v*=2,x*=2,M*=2,i[0]=n+d+v,i[1]=s+m+x,i[2]=a+g+M,i}const fU=function(){const i=[0,0,0],t=[0,0,0];return function(e,n){Mm(i,e),Mm(t,n),bm(i,i),bm(t,t);let s=lM(i,t);return s>1?0:s<-1?Math.PI:Math.acos(s)}}();function dU(i,t){return i[0]===t[0]&&i[1]===t[1]&&i[2]===t[2]}class hn extends Array{constructor(t=0,e=t,n=t){return super(t,e,n),this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this[0]=t}set y(t){this[1]=t}set z(t){this[2]=t}set(t,e=t,n=t){return t.length?this.copy(t):($D(this,t,e,n),this)}copy(t){return Mm(this,t),this}add(t,e){return e?by(this,t,e):by(this,this,t),this}sub(t,e){return e?Ey(this,t,e):Ey(this,this,t),this}multiply(t){return t.length?tU(this,this,t):Kp(this,this,t),this}divide(t){return t.length?eU(this,this,t):Kp(this,this,1/t),this}inverse(t=this){return rU(this,t),this}len(){return Ol(this)}distance(t){return t?nU(this,t):Ol(this)}squaredLen(){return Ty(this)}squaredDistance(t){return t?iU(this,t):Ty(this)}negate(t=this){return sU(this,t),this}cross(t,e){return e?Ay(this,t,e):Ay(this,this,t),this}scale(t){return Kp(this,this,t),this}normalize(){return bm(this,this),this}dot(t){return lM(this,t)}equals(t){return dU(this,t)}applyMatrix3(t){return uU(this,this,t),this}applyMatrix4(t){return lU(this,this,t),this}scaleRotateMatrix4(t){return cU(this,this,t),this}applyQuaternion(t){return hU(this,this,t),this}angle(t){return fU(this,t)}lerp(t,e){return aU(this,this,t,e),this}smoothLerp(t,e,n){return oU(this,this,t,e,n),this}clone(){return new hn(this[0],this[1],this[2])}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t}transformDirection(t){const e=this[0],n=this[1],s=this[2];return this[0]=t[0]*e+t[4]*n+t[8]*s,this[1]=t[1]*e+t[5]*n+t[9]*s,this[2]=t[2]*e+t[6]*n+t[10]*s,this.normalize()}}const wy=new hn;let pU=1,mU=1,Cy=!1;class gU{constructor(t,e={}){t.canvas||console.error("gl not passed as first argument to Geometry"),this.gl=t,this.attributes=e,this.id=pU++,this.VAOs={},this.drawRange={start:0,count:0},this.instancedCount=0,this.gl.renderer.bindVertexArray(null),this.gl.renderer.currentGeometry=null,this.glState=this.gl.renderer.state;for(let n in e)this.addAttribute(n,e[n])}addAttribute(t,e){if(this.attributes[t]=e,e.id=mU++,e.size=e.size||1,e.type=e.type||(e.data.constructor===Float32Array?this.gl.FLOAT:e.data.constructor===Uint16Array?this.gl.UNSIGNED_SHORT:this.gl.UNSIGNED_INT),e.target=t==="index"?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER,e.normalized=e.normalized||!1,e.stride=e.stride||0,e.offset=e.offset||0,e.count=e.count||(e.stride?e.data.byteLength/e.stride:e.data.length/e.size),e.divisor=e.instanced||0,e.needsUpdate=!1,e.usage=e.usage||this.gl.STATIC_DRAW,e.buffer||this.updateAttribute(e),e.divisor){if(this.isInstanced=!0,this.instancedCount&&this.instancedCount!==e.count*e.divisor)return console.warn("geometry has multiple instanced buffers of different length"),this.instancedCount=Math.min(this.instancedCount,e.count*e.divisor);this.instancedCount=e.count*e.divisor}else t==="index"?this.drawRange.count=e.count:this.attributes.index||(this.drawRange.count=Math.max(this.drawRange.count,e.count))}updateAttribute(t){const e=!t.buffer;e&&(t.buffer=this.gl.createBuffer()),this.glState.boundBuffer!==t.buffer&&(this.gl.bindBuffer(t.target,t.buffer),this.glState.boundBuffer=t.buffer),e?this.gl.bufferData(t.target,t.data,t.usage):this.gl.bufferSubData(t.target,0,t.data),t.needsUpdate=!1}setIndex(t){this.addAttribute("index",t)}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}setInstancedCount(t){this.instancedCount=t}createVAO(t){this.VAOs[t.attributeOrder]=this.gl.renderer.createVertexArray(),this.gl.renderer.bindVertexArray(this.VAOs[t.attributeOrder]),this.bindAttributes(t)}bindAttributes(t){t.attributeLocations.forEach((e,{name:n,type:s})=>{if(!this.attributes[n]){console.warn(`active attribute ${n} not being supplied`);return}const a=this.attributes[n];this.gl.bindBuffer(a.target,a.buffer),this.glState.boundBuffer=a.buffer;let l=1;s===35674&&(l=2),s===35675&&(l=3),s===35676&&(l=4);const c=a.size/l,u=l===1?0:l*l*4,f=l===1?0:l*4;for(let d=0;d<l;d++)this.gl.vertexAttribPointer(e+d,c,a.type,a.normalized,a.stride+u,a.offset+d*f),this.gl.enableVertexAttribArray(e+d),this.gl.renderer.vertexAttribDivisor(e+d,a.divisor)}),this.attributes.index&&this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.attributes.index.buffer)}draw({program:t,mode:e=this.gl.TRIANGLES}){var s;this.gl.renderer.currentGeometry!==`${this.id}_${t.attributeOrder}`&&(this.VAOs[t.attributeOrder]||this.createVAO(t),this.gl.renderer.bindVertexArray(this.VAOs[t.attributeOrder]),this.gl.renderer.currentGeometry=`${this.id}_${t.attributeOrder}`),t.attributeLocations.forEach((a,{name:l})=>{const c=this.attributes[l];c.needsUpdate&&this.updateAttribute(c)});let n=2;((s=this.attributes.index)==null?void 0:s.type)===this.gl.UNSIGNED_INT&&(n=4),this.isInstanced?this.attributes.index?this.gl.renderer.drawElementsInstanced(e,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*n,this.instancedCount):this.gl.renderer.drawArraysInstanced(e,this.drawRange.start,this.drawRange.count,this.instancedCount):this.attributes.index?this.gl.drawElements(e,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*n):this.gl.drawArrays(e,this.drawRange.start,this.drawRange.count)}getPosition(){const t=this.attributes.position;if(t.data)return t;if(!Cy)return console.warn("No position buffer data found to compute bounds"),Cy=!0}computeBoundingBox(t){t||(t=this.getPosition());const e=t.data,n=t.size;this.bounds||(this.bounds={min:new hn,max:new hn,center:new hn,scale:new hn,radius:1/0});const s=this.bounds.min,a=this.bounds.max,l=this.bounds.center,c=this.bounds.scale;s.set(1/0),a.set(-1/0);for(let u=0,f=e.length;u<f;u+=n){const d=e[u],m=e[u+1],g=e[u+2];s.x=Math.min(d,s.x),s.y=Math.min(m,s.y),s.z=Math.min(g,s.z),a.x=Math.max(d,a.x),a.y=Math.max(m,a.y),a.z=Math.max(g,a.z)}c.sub(a,s),l.add(s,a).divide(2)}computeBoundingSphere(t){t||(t=this.getPosition());const e=t.data,n=t.size;this.bounds||this.computeBoundingBox(t);let s=0;for(let a=0,l=e.length;a<l;a+=n)wy.fromArray(e,a),s=Math.max(s,this.bounds.center.squaredDistance(wy));this.bounds.radius=Math.sqrt(s)}remove(){for(let t in this.VAOs)this.gl.renderer.deleteVertexArray(this.VAOs[t]),delete this.VAOs[t];for(let t in this.attributes)this.gl.deleteBuffer(this.attributes[t].buffer),delete this.attributes[t]}}let vU=1;const Ry={};class cM{constructor(t,{vertex:e,fragment:n,uniforms:s={},transparent:a=!1,cullFace:l=t.BACK,frontFace:c=t.CCW,depthTest:u=!0,depthWrite:f=!0,depthFunc:d=t.LEQUAL}={}){t.canvas||console.error("gl not passed as first argument to Program"),this.gl=t,this.uniforms=s,this.id=vU++,e||console.warn("vertex shader not supplied"),n||console.warn("fragment shader not supplied"),this.transparent=a,this.cullFace=l,this.frontFace=c,this.depthTest=u,this.depthWrite=f,this.depthFunc=d,this.blendFunc={},this.blendEquation={},this.stencilFunc={},this.stencilOp={},this.transparent&&!this.blendFunc.src&&(this.gl.renderer.premultipliedAlpha?this.setBlendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA):this.setBlendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA)),this.vertexShader=t.createShader(t.VERTEX_SHADER),this.fragmentShader=t.createShader(t.FRAGMENT_SHADER),this.program=t.createProgram(),t.attachShader(this.program,this.vertexShader),t.attachShader(this.program,this.fragmentShader),this.setShaders({vertex:e,fragment:n})}setShaders({vertex:t,fragment:e}){if(t&&(this.gl.shaderSource(this.vertexShader,t),this.gl.compileShader(this.vertexShader),this.gl.getShaderInfoLog(this.vertexShader)!==""&&console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}
Vertex Shader
${Dy(t)}`)),e&&(this.gl.shaderSource(this.fragmentShader,e),this.gl.compileShader(this.fragmentShader),this.gl.getShaderInfoLog(this.fragmentShader)!==""&&console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}
Fragment Shader
${Dy(e)}`)),this.gl.linkProgram(this.program),!this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))return console.warn(this.gl.getProgramInfoLog(this.program));this.uniformLocations=new Map;let n=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_UNIFORMS);for(let l=0;l<n;l++){let c=this.gl.getActiveUniform(this.program,l);this.uniformLocations.set(c,this.gl.getUniformLocation(this.program,c.name));const u=c.name.match(/(\w+)/g);c.uniformName=u[0],c.nameComponents=u.slice(1)}this.attributeLocations=new Map;const s=[],a=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_ATTRIBUTES);for(let l=0;l<a;l++){const c=this.gl.getActiveAttrib(this.program,l),u=this.gl.getAttribLocation(this.program,c.name);u!==-1&&(s[u]=c.name,this.attributeLocations.set(c,u))}this.attributeOrder=s.join("")}setBlendFunc(t,e,n,s){this.blendFunc.src=t,this.blendFunc.dst=e,this.blendFunc.srcAlpha=n,this.blendFunc.dstAlpha=s,t&&(this.transparent=!0)}setBlendEquation(t,e){this.blendEquation.modeRGB=t,this.blendEquation.modeAlpha=e}setStencilFunc(t,e,n){this.stencilRef=e,this.stencilFunc.func=t,this.stencilFunc.ref=e,this.stencilFunc.mask=n}setStencilOp(t,e,n){this.stencilOp.stencilFail=t,this.stencilOp.depthFail=e,this.stencilOp.depthPass=n}applyState(){this.depthTest?this.gl.renderer.enable(this.gl.DEPTH_TEST):this.gl.renderer.disable(this.gl.DEPTH_TEST),this.cullFace?this.gl.renderer.enable(this.gl.CULL_FACE):this.gl.renderer.disable(this.gl.CULL_FACE),this.blendFunc.src?this.gl.renderer.enable(this.gl.BLEND):this.gl.renderer.disable(this.gl.BLEND),this.cullFace&&this.gl.renderer.setCullFace(this.cullFace),this.gl.renderer.setFrontFace(this.frontFace),this.gl.renderer.setDepthMask(this.depthWrite),this.gl.renderer.setDepthFunc(this.depthFunc),this.blendFunc.src&&this.gl.renderer.setBlendFunc(this.blendFunc.src,this.blendFunc.dst,this.blendFunc.srcAlpha,this.blendFunc.dstAlpha),this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB,this.blendEquation.modeAlpha),this.stencilFunc.func||this.stencilOp.stencilFail?this.gl.renderer.enable(this.gl.STENCIL_TEST):this.gl.renderer.disable(this.gl.STENCIL_TEST),this.gl.renderer.setStencilFunc(this.stencilFunc.func,this.stencilFunc.ref,this.stencilFunc.mask),this.gl.renderer.setStencilOp(this.stencilOp.stencilFail,this.stencilOp.depthFail,this.stencilOp.depthPass)}use({flipFaces:t=!1}={}){let e=-1;this.gl.renderer.state.currentProgram===this.id||(this.gl.useProgram(this.program),this.gl.renderer.state.currentProgram=this.id),this.uniformLocations.forEach((s,a)=>{let l=this.uniforms[a.uniformName];for(const c of a.nameComponents){if(!l)break;if(c in l)l=l[c];else{if(Array.isArray(l.value))break;l=void 0;break}}if(!l)return Uy(`Active uniform ${a.name} has not been supplied`);if(l&&l.value===void 0)return Uy(`${a.name} uniform is missing a value parameter`);if(l.value.texture)return e=e+1,l.value.update(e),Jp(this.gl,a.type,s,e);if(l.value.length&&l.value[0].texture){const c=[];return l.value.forEach(u=>{e=e+1,u.update(e),c.push(e)}),Jp(this.gl,a.type,s,c)}Jp(this.gl,a.type,s,l.value)}),this.applyState(),t&&this.gl.renderer.setFrontFace(this.frontFace===this.gl.CCW?this.gl.CW:this.gl.CCW)}remove(){this.gl.deleteProgram(this.program)}}function Jp(i,t,e,n){n=n.length?_U(n):n;const s=i.renderer.state.uniformLocations.get(e);if(n.length)if(s===void 0||s.length!==n.length)i.renderer.state.uniformLocations.set(e,n.slice(0));else{if(yU(s,n))return;s.set?s.set(n):xU(s,n),i.renderer.state.uniformLocations.set(e,s)}else{if(s===n)return;i.renderer.state.uniformLocations.set(e,n)}switch(t){case 5126:return n.length?i.uniform1fv(e,n):i.uniform1f(e,n);case 35664:return i.uniform2fv(e,n);case 35665:return i.uniform3fv(e,n);case 35666:return i.uniform4fv(e,n);case 35670:case 5124:case 35678:case 36306:case 35680:case 36289:return n.length?i.uniform1iv(e,n):i.uniform1i(e,n);case 35671:case 35667:return i.uniform2iv(e,n);case 35672:case 35668:return i.uniform3iv(e,n);case 35673:case 35669:return i.uniform4iv(e,n);case 35674:return i.uniformMatrix2fv(e,!1,n);case 35675:return i.uniformMatrix3fv(e,!1,n);case 35676:return i.uniformMatrix4fv(e,!1,n)}}function Dy(i){let t=i.split(`
`);for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join(`
`)}function _U(i){const t=i.length,e=i[0].length;if(e===void 0)return i;const n=t*e;let s=Ry[n];s||(Ry[n]=s=new Float32Array(n));for(let a=0;a<t;a++)s.set(i[a],a*e);return s}function yU(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function xU(i,t){for(let e=0,n=i.length;e<n;e++)i[e]=t[e]}let Qp=0;function Uy(i){Qp>100||(console.warn(i),Qp++,Qp>100&&console.warn("More than 100 program warnings - stopping logs."))}const $p=new hn;let SU=1;class uM{constructor({canvas:t=document.createElement("canvas"),width:e=300,height:n=150,dpr:s=1,alpha:a=!1,depth:l=!0,stencil:c=!1,antialias:u=!1,premultipliedAlpha:f=!1,preserveDrawingBuffer:d=!1,powerPreference:m="default",autoClear:g=!0,webgl:v=2}={}){const x={alpha:a,depth:l,stencil:c,antialias:u,premultipliedAlpha:f,preserveDrawingBuffer:d,powerPreference:m};this.dpr=s,this.alpha=a,this.color=!0,this.depth=l,this.stencil=c,this.premultipliedAlpha=f,this.autoClear=g,this.id=SU++,v===2&&(this.gl=t.getContext("webgl2",x)),this.isWebgl2=!!this.gl,this.gl||(this.gl=t.getContext("webgl",x)),this.gl||console.error("unable to create webgl context"),this.gl.renderer=this,this.setSize(e,n),this.state={},this.state.blendFunc={src:this.gl.ONE,dst:this.gl.ZERO},this.state.blendEquation={modeRGB:this.gl.FUNC_ADD},this.state.cullFace=!1,this.state.frontFace=this.gl.CCW,this.state.depthMask=!0,this.state.depthFunc=this.gl.LEQUAL,this.state.premultiplyAlpha=!1,this.state.flipY=!1,this.state.unpackAlignment=4,this.state.framebuffer=null,this.state.viewport={x:0,y:0,width:null,height:null},this.state.textureUnits=[],this.state.activeTextureUnit=0,this.state.boundBuffer=null,this.state.uniformLocations=new Map,this.state.currentProgram=null,this.extensions={},this.isWebgl2?(this.getExtension("EXT_color_buffer_float"),this.getExtension("OES_texture_float_linear")):(this.getExtension("OES_texture_float"),this.getExtension("OES_texture_float_linear"),this.getExtension("OES_texture_half_float"),this.getExtension("OES_texture_half_float_linear"),this.getExtension("OES_element_index_uint"),this.getExtension("OES_standard_derivatives"),this.getExtension("EXT_sRGB"),this.getExtension("WEBGL_depth_texture"),this.getExtension("WEBGL_draw_buffers")),this.getExtension("WEBGL_compressed_texture_astc"),this.getExtension("EXT_texture_compression_bptc"),this.getExtension("WEBGL_compressed_texture_s3tc"),this.getExtension("WEBGL_compressed_texture_etc1"),this.getExtension("WEBGL_compressed_texture_pvrtc"),this.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),this.vertexAttribDivisor=this.getExtension("ANGLE_instanced_arrays","vertexAttribDivisor","vertexAttribDivisorANGLE"),this.drawArraysInstanced=this.getExtension("ANGLE_instanced_arrays","drawArraysInstanced","drawArraysInstancedANGLE"),this.drawElementsInstanced=this.getExtension("ANGLE_instanced_arrays","drawElementsInstanced","drawElementsInstancedANGLE"),this.createVertexArray=this.getExtension("OES_vertex_array_object","createVertexArray","createVertexArrayOES"),this.bindVertexArray=this.getExtension("OES_vertex_array_object","bindVertexArray","bindVertexArrayOES"),this.deleteVertexArray=this.getExtension("OES_vertex_array_object","deleteVertexArray","deleteVertexArrayOES"),this.drawBuffers=this.getExtension("WEBGL_draw_buffers","drawBuffers","drawBuffersWEBGL"),this.parameters={},this.parameters.maxTextureUnits=this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.parameters.maxAnisotropy=this.getExtension("EXT_texture_filter_anisotropic")?this.gl.getParameter(this.getExtension("EXT_texture_filter_anisotropic").MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}setSize(t,e){this.width=t,this.height=e,this.gl.canvas.width=t*this.dpr,this.gl.canvas.height=e*this.dpr,this.gl.canvas.style&&Object.assign(this.gl.canvas.style,{width:t+"px",height:e+"px"})}setViewport(t,e,n=0,s=0){this.state.viewport.width===t&&this.state.viewport.height===e||(this.state.viewport.width=t,this.state.viewport.height=e,this.state.viewport.x=n,this.state.viewport.y=s,this.gl.viewport(n,s,t,e))}setScissor(t,e,n=0,s=0){this.gl.scissor(n,s,t,e)}enable(t){this.state[t]!==!0&&(this.gl.enable(t),this.state[t]=!0)}disable(t){this.state[t]!==!1&&(this.gl.disable(t),this.state[t]=!1)}setBlendFunc(t,e,n,s){this.state.blendFunc.src===t&&this.state.blendFunc.dst===e&&this.state.blendFunc.srcAlpha===n&&this.state.blendFunc.dstAlpha===s||(this.state.blendFunc.src=t,this.state.blendFunc.dst=e,this.state.blendFunc.srcAlpha=n,this.state.blendFunc.dstAlpha=s,n!==void 0?this.gl.blendFuncSeparate(t,e,n,s):this.gl.blendFunc(t,e))}setBlendEquation(t,e){t=t||this.gl.FUNC_ADD,!(this.state.blendEquation.modeRGB===t&&this.state.blendEquation.modeAlpha===e)&&(this.state.blendEquation.modeRGB=t,this.state.blendEquation.modeAlpha=e,e!==void 0?this.gl.blendEquationSeparate(t,e):this.gl.blendEquation(t))}setCullFace(t){this.state.cullFace!==t&&(this.state.cullFace=t,this.gl.cullFace(t))}setFrontFace(t){this.state.frontFace!==t&&(this.state.frontFace=t,this.gl.frontFace(t))}setDepthMask(t){this.state.depthMask!==t&&(this.state.depthMask=t,this.gl.depthMask(t))}setDepthFunc(t){this.state.depthFunc!==t&&(this.state.depthFunc=t,this.gl.depthFunc(t))}setStencilMask(t){this.state.stencilMask!==t&&(this.state.stencilMask=t,this.gl.stencilMask(t))}setStencilFunc(t,e,n){this.state.stencilFunc===t&&this.state.stencilRef===e&&this.state.stencilFuncMask===n||(this.state.stencilFunc=t||this.gl.ALWAYS,this.state.stencilRef=e||0,this.state.stencilFuncMask=n||0,this.gl.stencilFunc(t||this.gl.ALWAYS,e||0,n||0))}setStencilOp(t,e,n){this.state.stencilFail===t&&this.state.stencilDepthFail===e&&this.state.stencilDepthPass===n||(this.state.stencilFail=t,this.state.stencilDepthFail=e,this.state.stencilDepthPass=n,this.gl.stencilOp(t,e,n))}activeTexture(t){this.state.activeTextureUnit!==t&&(this.state.activeTextureUnit=t,this.gl.activeTexture(this.gl.TEXTURE0+t))}bindFramebuffer({target:t=this.gl.FRAMEBUFFER,buffer:e=null}={}){this.state.framebuffer!==e&&(this.state.framebuffer=e,this.gl.bindFramebuffer(t,e))}getExtension(t,e,n){return e&&this.gl[e]?this.gl[e].bind(this.gl):(this.extensions[t]||(this.extensions[t]=this.gl.getExtension(t)),e?this.extensions[t]?this.extensions[t][n].bind(this.extensions[t]):null:this.extensions[t])}sortOpaque(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program.id!==e.program.id?t.program.id-e.program.id:t.zDepth!==e.zDepth?t.zDepth-e.zDepth:e.id-t.id}sortTransparent(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.zDepth!==e.zDepth?e.zDepth-t.zDepth:e.id-t.id}sortUI(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program.id!==e.program.id?t.program.id-e.program.id:e.id-t.id}getRenderList({scene:t,camera:e,frustumCull:n,sort:s}){let a=[];if(e&&n&&e.updateFrustum(),t.traverse(l=>{if(!l.visible)return!0;l.draw&&(n&&l.frustumCulled&&e&&!e.frustumIntersectsMesh(l)||a.push(l))}),s){const l=[],c=[],u=[];a.forEach(f=>{f.program.transparent?f.program.depthTest?c.push(f):u.push(f):l.push(f),f.zDepth=0,!(f.renderOrder!==0||!f.program.depthTest||!e)&&(f.worldMatrix.getTranslation($p),$p.applyMatrix4(e.projectionViewMatrix),f.zDepth=$p.z)}),l.sort(this.sortOpaque),c.sort(this.sortTransparent),u.sort(this.sortUI),a=l.concat(c,u)}return a}render({scene:t,camera:e,target:n=null,update:s=!0,sort:a=!0,frustumCull:l=!0,clear:c}){n===null?(this.bindFramebuffer(),this.setViewport(this.width*this.dpr,this.height*this.dpr)):(this.bindFramebuffer(n),this.setViewport(n.width,n.height)),(c||this.autoClear&&c!==!1)&&(this.depth&&(!n||n.depth)&&(this.enable(this.gl.DEPTH_TEST),this.setDepthMask(!0)),(this.stencil||!n||n.stencil)&&(this.enable(this.gl.STENCIL_TEST),this.setStencilMask(255)),this.gl.clear((this.color?this.gl.COLOR_BUFFER_BIT:0)|(this.depth?this.gl.DEPTH_BUFFER_BIT:0)|(this.stencil?this.gl.STENCIL_BUFFER_BIT:0))),s&&t.updateMatrixWorld(),e&&e.updateMatrixWorld(),this.getRenderList({scene:t,camera:e,frustumCull:l,sort:a}).forEach(f=>{f.draw({camera:e})})}}function MU(i,t){return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i}function bU(i,t,e,n,s){return i[0]=t,i[1]=e,i[2]=n,i[3]=s,i}function EU(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=e*e+n*n+s*s+a*a;return l>0&&(l=1/Math.sqrt(l)),i[0]=e*l,i[1]=n*l,i[2]=s*l,i[3]=a*l,i}function TU(i,t){return i[0]*t[0]+i[1]*t[1]+i[2]*t[2]+i[3]*t[3]}function AU(i){return i[0]=0,i[1]=0,i[2]=0,i[3]=1,i}function wU(i,t,e){e=e*.5;let n=Math.sin(e);return i[0]=n*t[0],i[1]=n*t[1],i[2]=n*t[2],i[3]=Math.cos(e),i}function Ny(i,t,e){let n=t[0],s=t[1],a=t[2],l=t[3],c=e[0],u=e[1],f=e[2],d=e[3];return i[0]=n*d+l*c+s*f-a*u,i[1]=s*d+l*u+a*c-n*f,i[2]=a*d+l*f+n*u-s*c,i[3]=l*d-n*c-s*u-a*f,i}function CU(i,t,e){e*=.5;let n=t[0],s=t[1],a=t[2],l=t[3],c=Math.sin(e),u=Math.cos(e);return i[0]=n*u+l*c,i[1]=s*u+a*c,i[2]=a*u-s*c,i[3]=l*u-n*c,i}function RU(i,t,e){e*=.5;let n=t[0],s=t[1],a=t[2],l=t[3],c=Math.sin(e),u=Math.cos(e);return i[0]=n*u-a*c,i[1]=s*u+l*c,i[2]=a*u+n*c,i[3]=l*u-s*c,i}function DU(i,t,e){e*=.5;let n=t[0],s=t[1],a=t[2],l=t[3],c=Math.sin(e),u=Math.cos(e);return i[0]=n*u+s*c,i[1]=s*u-n*c,i[2]=a*u+l*c,i[3]=l*u-a*c,i}function UU(i,t,e,n){let s=t[0],a=t[1],l=t[2],c=t[3],u=e[0],f=e[1],d=e[2],m=e[3],g,v,x,M,S;return v=s*u+a*f+l*d+c*m,v<0&&(v=-v,u=-u,f=-f,d=-d,m=-m),1-v>1e-6?(g=Math.acos(v),x=Math.sin(g),M=Math.sin((1-n)*g)/x,S=Math.sin(n*g)/x):(M=1-n,S=n),i[0]=M*s+S*u,i[1]=M*a+S*f,i[2]=M*l+S*d,i[3]=M*c+S*m,i}function NU(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=e*e+n*n+s*s+a*a,c=l?1/l:0;return i[0]=-e*c,i[1]=-n*c,i[2]=-s*c,i[3]=a*c,i}function LU(i,t){return i[0]=-t[0],i[1]=-t[1],i[2]=-t[2],i[3]=t[3],i}function PU(i,t){let e=t[0]+t[4]+t[8],n;if(e>0)n=Math.sqrt(e+1),i[3]=.5*n,n=.5/n,i[0]=(t[5]-t[7])*n,i[1]=(t[6]-t[2])*n,i[2]=(t[1]-t[3])*n;else{let s=0;t[4]>t[0]&&(s=1),t[8]>t[s*3+s]&&(s=2);let a=(s+1)%3,l=(s+2)%3;n=Math.sqrt(t[s*3+s]-t[a*3+a]-t[l*3+l]+1),i[s]=.5*n,n=.5/n,i[3]=(t[a*3+l]-t[l*3+a])*n,i[a]=(t[a*3+s]+t[s*3+a])*n,i[l]=(t[l*3+s]+t[s*3+l])*n}return i}function IU(i,t,e="YXZ"){let n=Math.sin(t[0]*.5),s=Math.cos(t[0]*.5),a=Math.sin(t[1]*.5),l=Math.cos(t[1]*.5),c=Math.sin(t[2]*.5),u=Math.cos(t[2]*.5);return e==="XYZ"?(i[0]=n*l*u+s*a*c,i[1]=s*a*u-n*l*c,i[2]=s*l*c+n*a*u,i[3]=s*l*u-n*a*c):e==="YXZ"?(i[0]=n*l*u+s*a*c,i[1]=s*a*u-n*l*c,i[2]=s*l*c-n*a*u,i[3]=s*l*u+n*a*c):e==="ZXY"?(i[0]=n*l*u-s*a*c,i[1]=s*a*u+n*l*c,i[2]=s*l*c+n*a*u,i[3]=s*l*u-n*a*c):e==="ZYX"?(i[0]=n*l*u-s*a*c,i[1]=s*a*u+n*l*c,i[2]=s*l*c-n*a*u,i[3]=s*l*u+n*a*c):e==="YZX"?(i[0]=n*l*u+s*a*c,i[1]=s*a*u+n*l*c,i[2]=s*l*c-n*a*u,i[3]=s*l*u-n*a*c):e==="XZY"&&(i[0]=n*l*u-s*a*c,i[1]=s*a*u-n*l*c,i[2]=s*l*c+n*a*u,i[3]=s*l*u+n*a*c),i}const OU=MU,zU=bU,BU=TU,FU=EU;class HU extends Array{constructor(t=0,e=0,n=0,s=1){super(t,e,n,s),this.onChange=()=>{},this._target=this;const a=["0","1","2","3"];return new Proxy(this,{set(l,c){const u=Reflect.set(...arguments);return u&&a.includes(c)&&l.onChange(),u}})}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(t){this._target[0]=t,this.onChange()}set y(t){this._target[1]=t,this.onChange()}set z(t){this._target[2]=t,this.onChange()}set w(t){this._target[3]=t,this.onChange()}identity(){return AU(this._target),this.onChange(),this}set(t,e,n,s){return t.length?this.copy(t):(zU(this._target,t,e,n,s),this.onChange(),this)}rotateX(t){return CU(this._target,this._target,t),this.onChange(),this}rotateY(t){return RU(this._target,this._target,t),this.onChange(),this}rotateZ(t){return DU(this._target,this._target,t),this.onChange(),this}inverse(t=this._target){return NU(this._target,t),this.onChange(),this}conjugate(t=this._target){return LU(this._target,t),this.onChange(),this}copy(t){return OU(this._target,t),this.onChange(),this}normalize(t=this._target){return FU(this._target,t),this.onChange(),this}multiply(t,e){return e?Ny(this._target,t,e):Ny(this._target,this._target,t),this.onChange(),this}dot(t){return BU(this._target,t)}fromMatrix3(t){return PU(this._target,t),this.onChange(),this}fromEuler(t,e){return IU(this._target,t,t.order),e||this.onChange(),this}fromAxisAngle(t,e){return wU(this._target,t,e),this.onChange(),this}slerp(t,e){return UU(this._target,this._target,t,e),this.onChange(),this}fromArray(t,e=0){return this._target[0]=t[e],this._target[1]=t[e+1],this._target[2]=t[e+2],this._target[3]=t[e+3],this.onChange(),this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t}}const VU=1e-6;function GU(i,t){return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i[9]=t[9],i[10]=t[10],i[11]=t[11],i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15],i}function kU(i,t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S){return i[0]=t,i[1]=e,i[2]=n,i[3]=s,i[4]=a,i[5]=l,i[6]=c,i[7]=u,i[8]=f,i[9]=d,i[10]=m,i[11]=g,i[12]=v,i[13]=x,i[14]=M,i[15]=S,i}function WU(i){return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,i}function XU(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8],m=t[9],g=t[10],v=t[11],x=t[12],M=t[13],S=t[14],_=t[15],E=e*c-n*l,A=e*u-s*l,T=e*f-a*l,U=n*u-s*c,R=n*f-a*c,P=s*f-a*u,I=d*M-m*x,C=d*S-g*x,w=d*_-v*x,z=m*S-g*M,Z=m*_-v*M,k=g*_-v*S,W=E*k-A*Z+T*z+U*w-R*C+P*I;return W?(W=1/W,i[0]=(c*k-u*Z+f*z)*W,i[1]=(s*Z-n*k-a*z)*W,i[2]=(M*P-S*R+_*U)*W,i[3]=(g*R-m*P-v*U)*W,i[4]=(u*w-l*k-f*C)*W,i[5]=(e*k-s*w+a*C)*W,i[6]=(S*T-x*P-_*A)*W,i[7]=(d*P-g*T+v*A)*W,i[8]=(l*Z-c*w+f*I)*W,i[9]=(n*w-e*Z-a*I)*W,i[10]=(x*R-M*T+_*E)*W,i[11]=(m*T-d*R-v*E)*W,i[12]=(c*C-l*z-u*I)*W,i[13]=(e*z-n*C+s*I)*W,i[14]=(M*A-x*U-S*E)*W,i[15]=(d*U-m*A+g*E)*W,i):null}function hM(i){let t=i[0],e=i[1],n=i[2],s=i[3],a=i[4],l=i[5],c=i[6],u=i[7],f=i[8],d=i[9],m=i[10],g=i[11],v=i[12],x=i[13],M=i[14],S=i[15],_=t*l-e*a,E=t*c-n*a,A=t*u-s*a,T=e*c-n*l,U=e*u-s*l,R=n*u-s*c,P=f*x-d*v,I=f*M-m*v,C=f*S-g*v,w=d*M-m*x,z=d*S-g*x,Z=m*S-g*M;return _*Z-E*z+A*w+T*C-U*I+R*P}function Ly(i,t,e){let n=t[0],s=t[1],a=t[2],l=t[3],c=t[4],u=t[5],f=t[6],d=t[7],m=t[8],g=t[9],v=t[10],x=t[11],M=t[12],S=t[13],_=t[14],E=t[15],A=e[0],T=e[1],U=e[2],R=e[3];return i[0]=A*n+T*c+U*m+R*M,i[1]=A*s+T*u+U*g+R*S,i[2]=A*a+T*f+U*v+R*_,i[3]=A*l+T*d+U*x+R*E,A=e[4],T=e[5],U=e[6],R=e[7],i[4]=A*n+T*c+U*m+R*M,i[5]=A*s+T*u+U*g+R*S,i[6]=A*a+T*f+U*v+R*_,i[7]=A*l+T*d+U*x+R*E,A=e[8],T=e[9],U=e[10],R=e[11],i[8]=A*n+T*c+U*m+R*M,i[9]=A*s+T*u+U*g+R*S,i[10]=A*a+T*f+U*v+R*_,i[11]=A*l+T*d+U*x+R*E,A=e[12],T=e[13],U=e[14],R=e[15],i[12]=A*n+T*c+U*m+R*M,i[13]=A*s+T*u+U*g+R*S,i[14]=A*a+T*f+U*v+R*_,i[15]=A*l+T*d+U*x+R*E,i}function qU(i,t,e){let n=e[0],s=e[1],a=e[2],l,c,u,f,d,m,g,v,x,M,S,_;return t===i?(i[12]=t[0]*n+t[4]*s+t[8]*a+t[12],i[13]=t[1]*n+t[5]*s+t[9]*a+t[13],i[14]=t[2]*n+t[6]*s+t[10]*a+t[14],i[15]=t[3]*n+t[7]*s+t[11]*a+t[15]):(l=t[0],c=t[1],u=t[2],f=t[3],d=t[4],m=t[5],g=t[6],v=t[7],x=t[8],M=t[9],S=t[10],_=t[11],i[0]=l,i[1]=c,i[2]=u,i[3]=f,i[4]=d,i[5]=m,i[6]=g,i[7]=v,i[8]=x,i[9]=M,i[10]=S,i[11]=_,i[12]=l*n+d*s+x*a+t[12],i[13]=c*n+m*s+M*a+t[13],i[14]=u*n+g*s+S*a+t[14],i[15]=f*n+v*s+_*a+t[15]),i}function YU(i,t,e){let n=e[0],s=e[1],a=e[2];return i[0]=t[0]*n,i[1]=t[1]*n,i[2]=t[2]*n,i[3]=t[3]*n,i[4]=t[4]*s,i[5]=t[5]*s,i[6]=t[6]*s,i[7]=t[7]*s,i[8]=t[8]*a,i[9]=t[9]*a,i[10]=t[10]*a,i[11]=t[11]*a,i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15],i}function ZU(i,t,e,n){let s=n[0],a=n[1],l=n[2],c=Math.hypot(s,a,l),u,f,d,m,g,v,x,M,S,_,E,A,T,U,R,P,I,C,w,z,Z,k,W,rt;return Math.abs(c)<VU?null:(c=1/c,s*=c,a*=c,l*=c,u=Math.sin(e),f=Math.cos(e),d=1-f,m=t[0],g=t[1],v=t[2],x=t[3],M=t[4],S=t[5],_=t[6],E=t[7],A=t[8],T=t[9],U=t[10],R=t[11],P=s*s*d+f,I=a*s*d+l*u,C=l*s*d-a*u,w=s*a*d-l*u,z=a*a*d+f,Z=l*a*d+s*u,k=s*l*d+a*u,W=a*l*d-s*u,rt=l*l*d+f,i[0]=m*P+M*I+A*C,i[1]=g*P+S*I+T*C,i[2]=v*P+_*I+U*C,i[3]=x*P+E*I+R*C,i[4]=m*w+M*z+A*Z,i[5]=g*w+S*z+T*Z,i[6]=v*w+_*z+U*Z,i[7]=x*w+E*z+R*Z,i[8]=m*k+M*W+A*rt,i[9]=g*k+S*W+T*rt,i[10]=v*k+_*W+U*rt,i[11]=x*k+E*W+R*rt,t!==i&&(i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15]),i)}function jU(i,t){return i[0]=t[12],i[1]=t[13],i[2]=t[14],i}function fM(i,t){let e=t[0],n=t[1],s=t[2],a=t[4],l=t[5],c=t[6],u=t[8],f=t[9],d=t[10];return i[0]=Math.hypot(e,n,s),i[1]=Math.hypot(a,l,c),i[2]=Math.hypot(u,f,d),i}function KU(i){let t=i[0],e=i[1],n=i[2],s=i[4],a=i[5],l=i[6],c=i[8],u=i[9],f=i[10];const d=t*t+e*e+n*n,m=s*s+a*a+l*l,g=c*c+u*u+f*f;return Math.sqrt(Math.max(d,m,g))}const dM=function(){const i=[1,1,1];return function(t,e){let n=i;fM(n,e);let s=1/n[0],a=1/n[1],l=1/n[2],c=e[0]*s,u=e[1]*a,f=e[2]*l,d=e[4]*s,m=e[5]*a,g=e[6]*l,v=e[8]*s,x=e[9]*a,M=e[10]*l,S=c+m+M,_=0;return S>0?(_=Math.sqrt(S+1)*2,t[3]=.25*_,t[0]=(g-x)/_,t[1]=(v-f)/_,t[2]=(u-d)/_):c>m&&c>M?(_=Math.sqrt(1+c-m-M)*2,t[3]=(g-x)/_,t[0]=.25*_,t[1]=(u+d)/_,t[2]=(v+f)/_):m>M?(_=Math.sqrt(1+m-c-M)*2,t[3]=(v-f)/_,t[0]=(u+d)/_,t[1]=.25*_,t[2]=(g+x)/_):(_=Math.sqrt(1+M-c-m)*2,t[3]=(u-d)/_,t[0]=(v+f)/_,t[1]=(g+x)/_,t[2]=.25*_),t}}();function JU(i,t,e,n){let s=Ol([i[0],i[1],i[2]]);const a=Ol([i[4],i[5],i[6]]),l=Ol([i[8],i[9],i[10]]);hM(i)<0&&(s=-s),e[0]=i[12],e[1]=i[13],e[2]=i[14];const u=i.slice(),f=1/s,d=1/a,m=1/l;u[0]*=f,u[1]*=f,u[2]*=f,u[4]*=d,u[5]*=d,u[6]*=d,u[8]*=m,u[9]*=m,u[10]*=m,dM(t,u),n[0]=s,n[1]=a,n[2]=l}function QU(i,t,e,n){const s=i,a=t[0],l=t[1],c=t[2],u=t[3],f=a+a,d=l+l,m=c+c,g=a*f,v=a*d,x=a*m,M=l*d,S=l*m,_=c*m,E=u*f,A=u*d,T=u*m,U=n[0],R=n[1],P=n[2];return s[0]=(1-(M+_))*U,s[1]=(v+T)*U,s[2]=(x-A)*U,s[3]=0,s[4]=(v-T)*R,s[5]=(1-(g+_))*R,s[6]=(S+E)*R,s[7]=0,s[8]=(x+A)*P,s[9]=(S-E)*P,s[10]=(1-(g+M))*P,s[11]=0,s[12]=e[0],s[13]=e[1],s[14]=e[2],s[15]=1,s}function $U(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=e+e,c=n+n,u=s+s,f=e*l,d=n*l,m=n*c,g=s*l,v=s*c,x=s*u,M=a*l,S=a*c,_=a*u;return i[0]=1-m-x,i[1]=d+_,i[2]=g-S,i[3]=0,i[4]=d-_,i[5]=1-f-x,i[6]=v+M,i[7]=0,i[8]=g+S,i[9]=v-M,i[10]=1-f-m,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,i}function tN(i,t,e,n,s){let a=1/Math.tan(t/2),l=1/(n-s);return i[0]=a/e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=a,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=(s+n)*l,i[11]=-1,i[12]=0,i[13]=0,i[14]=2*s*n*l,i[15]=0,i}function eN(i,t,e,n,s,a,l){let c=1/(t-e),u=1/(n-s),f=1/(a-l);return i[0]=-2*c,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=-2*u,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=2*f,i[11]=0,i[12]=(t+e)*c,i[13]=(s+n)*u,i[14]=(l+a)*f,i[15]=1,i}function nN(i,t,e,n){let s=t[0],a=t[1],l=t[2],c=n[0],u=n[1],f=n[2],d=s-e[0],m=a-e[1],g=l-e[2],v=d*d+m*m+g*g;v===0?g=1:(v=1/Math.sqrt(v),d*=v,m*=v,g*=v);let x=u*g-f*m,M=f*d-c*g,S=c*m-u*d;return v=x*x+M*M+S*S,v===0&&(f?c+=1e-6:u?f+=1e-6:u+=1e-6,x=u*g-f*m,M=f*d-c*g,S=c*m-u*d,v=x*x+M*M+S*S),v=1/Math.sqrt(v),x*=v,M*=v,S*=v,i[0]=x,i[1]=M,i[2]=S,i[3]=0,i[4]=m*S-g*M,i[5]=g*x-d*S,i[6]=d*M-m*x,i[7]=0,i[8]=d,i[9]=m,i[10]=g,i[11]=0,i[12]=s,i[13]=a,i[14]=l,i[15]=1,i}function Py(i,t,e){return i[0]=t[0]+e[0],i[1]=t[1]+e[1],i[2]=t[2]+e[2],i[3]=t[3]+e[3],i[4]=t[4]+e[4],i[5]=t[5]+e[5],i[6]=t[6]+e[6],i[7]=t[7]+e[7],i[8]=t[8]+e[8],i[9]=t[9]+e[9],i[10]=t[10]+e[10],i[11]=t[11]+e[11],i[12]=t[12]+e[12],i[13]=t[13]+e[13],i[14]=t[14]+e[14],i[15]=t[15]+e[15],i}function Iy(i,t,e){return i[0]=t[0]-e[0],i[1]=t[1]-e[1],i[2]=t[2]-e[2],i[3]=t[3]-e[3],i[4]=t[4]-e[4],i[5]=t[5]-e[5],i[6]=t[6]-e[6],i[7]=t[7]-e[7],i[8]=t[8]-e[8],i[9]=t[9]-e[9],i[10]=t[10]-e[10],i[11]=t[11]-e[11],i[12]=t[12]-e[12],i[13]=t[13]-e[13],i[14]=t[14]-e[14],i[15]=t[15]-e[15],i}function iN(i,t,e){return i[0]=t[0]*e,i[1]=t[1]*e,i[2]=t[2]*e,i[3]=t[3]*e,i[4]=t[4]*e,i[5]=t[5]*e,i[6]=t[6]*e,i[7]=t[7]*e,i[8]=t[8]*e,i[9]=t[9]*e,i[10]=t[10]*e,i[11]=t[11]*e,i[12]=t[12]*e,i[13]=t[13]*e,i[14]=t[14]*e,i[15]=t[15]*e,i}class fr extends Array{constructor(t=1,e=0,n=0,s=0,a=0,l=1,c=0,u=0,f=0,d=0,m=1,g=0,v=0,x=0,M=0,S=1){return super(t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(t){this[12]=t}set y(t){this[13]=t}set z(t){this[14]=t}set w(t){this[15]=t}set(t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S){return t.length?this.copy(t):(kU(this,t,e,n,s,a,l,c,u,f,d,m,g,v,x,M,S),this)}translate(t,e=this){return qU(this,e,t),this}rotate(t,e,n=this){return ZU(this,n,t,e),this}scale(t,e=this){return YU(this,e,typeof t=="number"?[t,t,t]:t),this}add(t,e){return e?Py(this,t,e):Py(this,this,t),this}sub(t,e){return e?Iy(this,t,e):Iy(this,this,t),this}multiply(t,e){return t.length?e?Ly(this,t,e):Ly(this,this,t):iN(this,this,t),this}identity(){return WU(this),this}copy(t){return GU(this,t),this}fromPerspective({fov:t,aspect:e,near:n,far:s}={}){return tN(this,t,e,n,s),this}fromOrthogonal({left:t,right:e,bottom:n,top:s,near:a,far:l}){return eN(this,t,e,n,s,a,l),this}fromQuaternion(t){return $U(this,t),this}setPosition(t){return this.x=t[0],this.y=t[1],this.z=t[2],this}inverse(t=this){return XU(this,t),this}compose(t,e,n){return QU(this,t,e,n),this}decompose(t,e,n){return JU(this,t,e,n),this}getRotation(t){return dM(t,this),this}getTranslation(t){return jU(t,this),this}getScaling(t){return fM(t,this),this}getMaxScaleOnAxis(){return KU(this)}lookAt(t,e,n){return nN(this,t,e,n),this}determinant(){return hM(this)}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this[3]=t[e+3],this[4]=t[e+4],this[5]=t[e+5],this[6]=t[e+6],this[7]=t[e+7],this[8]=t[e+8],this[9]=t[e+9],this[10]=t[e+10],this[11]=t[e+11],this[12]=t[e+12],this[13]=t[e+13],this[14]=t[e+14],this[15]=t[e+15],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t[e+4]=this[4],t[e+5]=this[5],t[e+6]=this[6],t[e+7]=this[7],t[e+8]=this[8],t[e+9]=this[9],t[e+10]=this[10],t[e+11]=this[11],t[e+12]=this[12],t[e+13]=this[13],t[e+14]=this[14],t[e+15]=this[15],t}}function sN(i,t,e="YXZ"){return e==="XYZ"?(i[1]=Math.asin(Math.min(Math.max(t[8],-1),1)),Math.abs(t[8])<.99999?(i[0]=Math.atan2(-t[9],t[10]),i[2]=Math.atan2(-t[4],t[0])):(i[0]=Math.atan2(t[6],t[5]),i[2]=0)):e==="YXZ"?(i[0]=Math.asin(-Math.min(Math.max(t[9],-1),1)),Math.abs(t[9])<.99999?(i[1]=Math.atan2(t[8],t[10]),i[2]=Math.atan2(t[1],t[5])):(i[1]=Math.atan2(-t[2],t[0]),i[2]=0)):e==="ZXY"?(i[0]=Math.asin(Math.min(Math.max(t[6],-1),1)),Math.abs(t[6])<.99999?(i[1]=Math.atan2(-t[2],t[10]),i[2]=Math.atan2(-t[4],t[5])):(i[1]=0,i[2]=Math.atan2(t[1],t[0]))):e==="ZYX"?(i[1]=Math.asin(-Math.min(Math.max(t[2],-1),1)),Math.abs(t[2])<.99999?(i[0]=Math.atan2(t[6],t[10]),i[2]=Math.atan2(t[1],t[0])):(i[0]=0,i[2]=Math.atan2(-t[4],t[5]))):e==="YZX"?(i[2]=Math.asin(Math.min(Math.max(t[1],-1),1)),Math.abs(t[1])<.99999?(i[0]=Math.atan2(-t[9],t[5]),i[1]=Math.atan2(-t[2],t[0])):(i[0]=0,i[1]=Math.atan2(t[8],t[10]))):e==="XZY"&&(i[2]=Math.asin(-Math.min(Math.max(t[4],-1),1)),Math.abs(t[4])<.99999?(i[0]=Math.atan2(t[6],t[5]),i[1]=Math.atan2(t[8],t[0])):(i[0]=Math.atan2(-t[9],t[10]),i[1]=0)),i}const Oy=new fr;class rN extends Array{constructor(t=0,e=t,n=t,s="YXZ"){super(t,e,n),this.order=s,this.onChange=()=>{},this._target=this;const a=["0","1","2"];return new Proxy(this,{set(l,c){const u=Reflect.set(...arguments);return u&&a.includes(c)&&l.onChange(),u}})}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this._target[0]=t,this.onChange()}set y(t){this._target[1]=t,this.onChange()}set z(t){this._target[2]=t,this.onChange()}set(t,e=t,n=t){return t.length?this.copy(t):(this._target[0]=t,this._target[1]=e,this._target[2]=n,this.onChange(),this)}copy(t){return this._target[0]=t[0],this._target[1]=t[1],this._target[2]=t[2],this.onChange(),this}reorder(t){return this._target.order=t,this.onChange(),this}fromRotationMatrix(t,e=this.order){return sN(this._target,t,e),this.onChange(),this}fromQuaternion(t,e=this.order,n){return Oy.fromQuaternion(t),this._target.fromRotationMatrix(Oy,e),n||this.onChange(),this}fromArray(t,e=0){return this._target[0]=t[e],this._target[1]=t[e+1],this._target[2]=t[e+2],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t}}class pM{constructor(){this.parent=null,this.children=[],this.visible=!0,this.matrix=new fr,this.worldMatrix=new fr,this.matrixAutoUpdate=!0,this.worldMatrixNeedsUpdate=!1,this.position=new hn,this.quaternion=new HU,this.scale=new hn(1),this.rotation=new rN,this.up=new hn(0,1,0),this.rotation._target.onChange=()=>this.quaternion.fromEuler(this.rotation,!0),this.quaternion._target.onChange=()=>this.rotation.fromQuaternion(this.quaternion,void 0,!0)}setParent(t,e=!0){this.parent&&t!==this.parent&&this.parent.removeChild(this,!1),this.parent=t,e&&t&&t.addChild(this,!1)}addChild(t,e=!0){~this.children.indexOf(t)||this.children.push(t),e&&t.setParent(this,!1)}removeChild(t,e=!0){~this.children.indexOf(t)&&this.children.splice(this.children.indexOf(t),1),e&&t.setParent(null,!1)}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.worldMatrixNeedsUpdate||t)&&(this.parent===null?this.worldMatrix.copy(this.matrix):this.worldMatrix.multiply(this.parent.worldMatrix,this.matrix),this.worldMatrixNeedsUpdate=!1,t=!0);for(let e=0,n=this.children.length;e<n;e++)this.children[e].updateMatrixWorld(t)}updateMatrix(){this.matrix.compose(this.quaternion,this.position,this.scale),this.worldMatrixNeedsUpdate=!0}traverse(t){if(!t(this))for(let e=0,n=this.children.length;e<n;e++)this.children[e].traverse(t)}decompose(){this.matrix.decompose(this.quaternion._target,this.position,this.scale),this.rotation.fromQuaternion(this.quaternion)}lookAt(t,e=!1){e?this.matrix.lookAt(this.position,t,this.up):this.matrix.lookAt(t,this.position,this.up),this.matrix.getRotation(this.quaternion._target),this.rotation.fromQuaternion(this.quaternion)}}const aN=new fr,oN=new hn,lN=new hn;class zN extends pM{constructor(t,{near:e=.1,far:n=100,fov:s=45,aspect:a=1,left:l,right:c,bottom:u,top:f,zoom:d=1}={}){super(),Object.assign(this,{near:e,far:n,fov:s,aspect:a,left:l,right:c,bottom:u,top:f,zoom:d}),this.projectionMatrix=new fr,this.viewMatrix=new fr,this.projectionViewMatrix=new fr,this.worldPosition=new hn,this.type=l||c?"orthographic":"perspective",this.type==="orthographic"?this.orthographic():this.perspective()}perspective({near:t=this.near,far:e=this.far,fov:n=this.fov,aspect:s=this.aspect}={}){return Object.assign(this,{near:t,far:e,fov:n,aspect:s}),this.projectionMatrix.fromPerspective({fov:n*(Math.PI/180),aspect:s,near:t,far:e}),this.type="perspective",this}orthographic({near:t=this.near,far:e=this.far,left:n=this.left||-1,right:s=this.right||1,bottom:a=this.bottom||-1,top:l=this.top||1,zoom:c=this.zoom}={}){return Object.assign(this,{near:t,far:e,left:n,right:s,bottom:a,top:l,zoom:c}),n/=c,s/=c,a/=c,l/=c,this.projectionMatrix.fromOrthogonal({left:n,right:s,bottom:a,top:l,near:t,far:e}),this.type="orthographic",this}updateMatrixWorld(){return super.updateMatrixWorld(),this.viewMatrix.inverse(this.worldMatrix),this.worldMatrix.getTranslation(this.worldPosition),this.projectionViewMatrix.multiply(this.projectionMatrix,this.viewMatrix),this}updateProjectionMatrix(){return this.type==="perspective"?this.perspective():this.orthographic()}lookAt(t){return super.lookAt(t,!0),this}project(t){return t.applyMatrix4(this.viewMatrix),t.applyMatrix4(this.projectionMatrix),this}unproject(t){return t.applyMatrix4(aN.inverse(this.projectionMatrix)),t.applyMatrix4(this.worldMatrix),this}updateFrustum(){this.frustum||(this.frustum=[new hn,new hn,new hn,new hn,new hn,new hn]);const t=this.projectionViewMatrix;this.frustum[0].set(t[3]-t[0],t[7]-t[4],t[11]-t[8]).constant=t[15]-t[12],this.frustum[1].set(t[3]+t[0],t[7]+t[4],t[11]+t[8]).constant=t[15]+t[12],this.frustum[2].set(t[3]+t[1],t[7]+t[5],t[11]+t[9]).constant=t[15]+t[13],this.frustum[3].set(t[3]-t[1],t[7]-t[5],t[11]-t[9]).constant=t[15]-t[13],this.frustum[4].set(t[3]-t[2],t[7]-t[6],t[11]-t[10]).constant=t[15]-t[14],this.frustum[5].set(t[3]+t[2],t[7]+t[6],t[11]+t[10]).constant=t[15]+t[14];for(let e=0;e<6;e++){const n=1/this.frustum[e].distance();this.frustum[e].multiply(n),this.frustum[e].constant*=n}}frustumIntersectsMesh(t,e=t.worldMatrix){if(!t.geometry.attributes.position||((!t.geometry.bounds||t.geometry.bounds.radius===1/0)&&t.geometry.computeBoundingSphere(),!t.geometry.bounds))return!0;const n=oN;n.copy(t.geometry.bounds.center),n.applyMatrix4(e);const s=t.geometry.bounds.radius*e.getMaxScaleOnAxis();return this.frustumIntersectsSphere(n,s)}frustumIntersectsSphere(t,e){const n=lN;for(let s=0;s<6;s++){const a=this.frustum[s];if(n.copy(a).dot(t)+a.constant<-e)return!1}return!0}}function cN(i,t){return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[4],i[4]=t[5],i[5]=t[6],i[6]=t[8],i[7]=t[9],i[8]=t[10],i}function uN(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=e+e,c=n+n,u=s+s,f=e*l,d=n*l,m=n*c,g=s*l,v=s*c,x=s*u,M=a*l,S=a*c,_=a*u;return i[0]=1-m-x,i[3]=d-_,i[6]=g+S,i[1]=d+_,i[4]=1-f-x,i[7]=v-M,i[2]=g-S,i[5]=v+M,i[8]=1-f-m,i}function hN(i,t){return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i}function fN(i,t,e,n,s,a,l,c,u,f){return i[0]=t,i[1]=e,i[2]=n,i[3]=s,i[4]=a,i[5]=l,i[6]=c,i[7]=u,i[8]=f,i}function dN(i){return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=1,i[5]=0,i[6]=0,i[7]=0,i[8]=1,i}function pN(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8],m=d*l-c*f,g=-d*a+c*u,v=f*a-l*u,x=e*m+n*g+s*v;return x?(x=1/x,i[0]=m*x,i[1]=(-d*n+s*f)*x,i[2]=(c*n-s*l)*x,i[3]=g*x,i[4]=(d*e-s*u)*x,i[5]=(-c*e+s*a)*x,i[6]=v*x,i[7]=(-f*e+n*u)*x,i[8]=(l*e-n*a)*x,i):null}function zy(i,t,e){let n=t[0],s=t[1],a=t[2],l=t[3],c=t[4],u=t[5],f=t[6],d=t[7],m=t[8],g=e[0],v=e[1],x=e[2],M=e[3],S=e[4],_=e[5],E=e[6],A=e[7],T=e[8];return i[0]=g*n+v*l+x*f,i[1]=g*s+v*c+x*d,i[2]=g*a+v*u+x*m,i[3]=M*n+S*l+_*f,i[4]=M*s+S*c+_*d,i[5]=M*a+S*u+_*m,i[6]=E*n+A*l+T*f,i[7]=E*s+A*c+T*d,i[8]=E*a+A*u+T*m,i}function mN(i,t,e){let n=t[0],s=t[1],a=t[2],l=t[3],c=t[4],u=t[5],f=t[6],d=t[7],m=t[8],g=e[0],v=e[1];return i[0]=n,i[1]=s,i[2]=a,i[3]=l,i[4]=c,i[5]=u,i[6]=g*n+v*l+f,i[7]=g*s+v*c+d,i[8]=g*a+v*u+m,i}function gN(i,t,e){let n=t[0],s=t[1],a=t[2],l=t[3],c=t[4],u=t[5],f=t[6],d=t[7],m=t[8],g=Math.sin(e),v=Math.cos(e);return i[0]=v*n+g*l,i[1]=v*s+g*c,i[2]=v*a+g*u,i[3]=v*l-g*n,i[4]=v*c-g*s,i[5]=v*u-g*a,i[6]=f,i[7]=d,i[8]=m,i}function vN(i,t,e){let n=e[0],s=e[1];return i[0]=n*t[0],i[1]=n*t[1],i[2]=n*t[2],i[3]=s*t[3],i[4]=s*t[4],i[5]=s*t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i}function _N(i,t){let e=t[0],n=t[1],s=t[2],a=t[3],l=t[4],c=t[5],u=t[6],f=t[7],d=t[8],m=t[9],g=t[10],v=t[11],x=t[12],M=t[13],S=t[14],_=t[15],E=e*c-n*l,A=e*u-s*l,T=e*f-a*l,U=n*u-s*c,R=n*f-a*c,P=s*f-a*u,I=d*M-m*x,C=d*S-g*x,w=d*_-v*x,z=m*S-g*M,Z=m*_-v*M,k=g*_-v*S,W=E*k-A*Z+T*z+U*w-R*C+P*I;return W?(W=1/W,i[0]=(c*k-u*Z+f*z)*W,i[1]=(u*w-l*k-f*C)*W,i[2]=(l*Z-c*w+f*I)*W,i[3]=(s*Z-n*k-a*z)*W,i[4]=(e*k-s*w+a*C)*W,i[5]=(n*w-e*Z-a*I)*W,i[6]=(M*P-S*R+_*U)*W,i[7]=(S*T-x*P-_*A)*W,i[8]=(x*R-M*T+_*E)*W,i):null}class yN extends Array{constructor(t=1,e=0,n=0,s=0,a=1,l=0,c=0,u=0,f=1){return super(t,e,n,s,a,l,c,u,f),this}set(t,e,n,s,a,l,c,u,f){return t.length?this.copy(t):(fN(this,t,e,n,s,a,l,c,u,f),this)}translate(t,e=this){return mN(this,e,t),this}rotate(t,e=this){return gN(this,e,t),this}scale(t,e=this){return vN(this,e,t),this}multiply(t,e){return e?zy(this,t,e):zy(this,this,t),this}identity(){return dN(this),this}copy(t){return hN(this,t),this}fromMatrix4(t){return cN(this,t),this}fromQuaternion(t){return uN(this,t),this}fromBasis(t,e,n){return this.set(t[0],t[1],t[2],e[0],e[1],e[2],n[0],n[1],n[2]),this}inverse(t=this){return pN(this,t),this}getNormalMatrix(t){return _N(this,t),this}}let xN=0;class mM extends pM{constructor(t,{geometry:e,program:n,mode:s=t.TRIANGLES,frustumCulled:a=!0,renderOrder:l=0}={}){super(),t.canvas||console.error("gl not passed as first argument to Mesh"),this.gl=t,this.id=xN++,this.geometry=e,this.program=n,this.mode=s,this.frustumCulled=a,this.renderOrder=l,this.modelViewMatrix=new fr,this.normalMatrix=new yN,this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[]}onBeforeRender(t){return this.beforeRenderCallbacks.push(t),this}onAfterRender(t){return this.afterRenderCallbacks.push(t),this}draw({camera:t}={}){t&&(this.program.uniforms.modelMatrix||Object.assign(this.program.uniforms,{modelMatrix:{value:null},viewMatrix:{value:null},modelViewMatrix:{value:null},normalMatrix:{value:null},projectionMatrix:{value:null},cameraPosition:{value:null}}),this.program.uniforms.projectionMatrix.value=t.projectionMatrix,this.program.uniforms.cameraPosition.value=t.worldPosition,this.program.uniforms.viewMatrix.value=t.viewMatrix,this.modelViewMatrix.multiply(t.viewMatrix,this.worldMatrix),this.normalMatrix.getNormalMatrix(this.modelViewMatrix),this.program.uniforms.modelMatrix.value=this.worldMatrix,this.program.uniforms.modelViewMatrix.value=this.modelViewMatrix,this.program.uniforms.normalMatrix.value=this.normalMatrix),this.beforeRenderCallbacks.forEach(n=>n&&n({mesh:this,camera:t}));let e=this.program.cullFace&&this.worldMatrix.determinant()<0;this.program.use({flipFaces:e}),this.geometry.draw({mode:this.mode,program:this.program}),this.afterRenderCallbacks.forEach(n=>n&&n({mesh:this,camera:t}))}}const By={black:"#000000",white:"#ffffff",red:"#ff0000",green:"#00ff00",blue:"#0000ff",fuchsia:"#ff00ff",cyan:"#00ffff",yellow:"#ffff00",orange:"#ff8000"};function Fy(i){i.length===4&&(i=i[0]+i[1]+i[1]+i[2]+i[2]+i[3]+i[3]);const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i);return t||console.warn(`Unable to convert hex string ${i} to rgb values`),[parseInt(t[1],16)/255,parseInt(t[2],16)/255,parseInt(t[3],16)/255]}function SN(i){return i=parseInt(i),[(i>>16&255)/255,(i>>8&255)/255,(i&255)/255]}function Hy(i){return i===void 0?[0,0,0]:arguments.length===3?arguments:isNaN(i)?i[0]==="#"?Fy(i):By[i.toLowerCase()]?Fy(By[i.toLowerCase()]):(console.warn("Color format not recognised"),[0,0,0]):SN(i)}class zl extends Array{constructor(t){return Array.isArray(t)?super(...t):super(...Hy(...arguments))}get r(){return this[0]}get g(){return this[1]}get b(){return this[2]}set r(t){this[0]=t}set g(t){this[1]=t}set b(t){this[2]=t}set(t){return Array.isArray(t)?this.copy(t):this.copy(Hy(...arguments))}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this}}class gM extends gU{constructor(t,{attributes:e={}}={}){Object.assign(e,{position:{size:2,data:new Float32Array([-1,-1,3,-1,-1,3])},uv:{size:2,data:new Float32Array([0,0,2,0,0,2])}}),super(t,e)}}const MN=`#version 300 es
in vec2 position;
void main() {
  gl_Position = vec4(position, 0.0, 1.0);
}
`,bN=`#version 300 es
precision highp float;

uniform float uTime;
uniform float uAmplitude;
uniform vec3 uColorStops[3];
uniform vec2 uResolution;
uniform float uBlend;

out vec4 fragColor;

vec3 permute(vec3 x) {
  return mod(((x * 34.0) + 1.0) * x, 289.0);
}

float snoise(vec2 v){
  const vec4 C = vec4(
      0.211324865405187, 0.366025403784439,
      -0.577350269189626, 0.024390243902439
  );
  vec2 i  = floor(v + dot(v, C.yy));
  vec2 x0 = v - i + dot(i, C.xx);
  vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);
  vec4 x12 = x0.xyxy + C.xxzz;
  x12.xy -= i1;
  i = mod(i, 289.0);

  vec3 p = permute(
      permute(i.y + vec3(0.0, i1.y, 1.0))
    + i.x + vec3(0.0, i1.x, 1.0)
  );

  vec3 m = max(
      0.5 - vec3(
          dot(x0, x0),
          dot(x12.xy, x12.xy),
          dot(x12.zw, x12.zw)
      ), 
      0.0
  );
  m = m * m;
  m = m * m;

  vec3 x = 2.0 * fract(p * C.www) - 1.0;
  vec3 h = abs(x) - 0.5;
  vec3 ox = floor(x + 0.5);
  vec3 a0 = x - ox;
  m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);

  vec3 g;
  g.x  = a0.x  * x0.x  + h.x  * x0.y;
  g.yz = a0.yz * x12.xz + h.yz * x12.yw;
  return 130.0 * dot(m, g);
}

struct ColorStop {
  vec3 color;
  float position;
};

#define COLOR_RAMP(colors, factor, finalColor) {                int index = 0;                                              for (int i = 0; i < 2; i++) {                                    ColorStop currentColor = colors[i];                         bool isInBetween = currentColor.position <= factor;         index = int(mix(float(index), float(i), float(isInBetween)));   }                                                           ColorStop currentColor = colors[index];                     ColorStop nextColor = colors[index + 1];                    float range = nextColor.position - currentColor.position;   float lerpFactor = (factor - currentColor.position) / range;   finalColor = mix(currentColor.color, nextColor.color, lerpFactor); }

void main() {
  vec2 uv = gl_FragCoord.xy / uResolution;
  
  ColorStop colors[3];
  colors[0] = ColorStop(uColorStops[0], 0.0);
  colors[1] = ColorStop(uColorStops[1], 0.5);
  colors[2] = ColorStop(uColorStops[2], 1.0);
  
  vec3 rampColor;
  COLOR_RAMP(colors, uv.x, rampColor);
  
  float height = snoise(vec2(uv.x * 2.0 + uTime * 0.1, uTime * 0.25)) * 0.5 * uAmplitude;
  height = exp(height);
  height = (uv.y * 2.0 - height + 0.2);
  float intensity = 0.6 * height;
  
  float midPoint = 0.20;
  float auroraAlpha = smoothstep(midPoint - uBlend * 0.5, midPoint + uBlend * 0.5, intensity);
  
  vec3 auroraColor = intensity * rampColor;
  
  fragColor = vec4(auroraColor * auroraAlpha, auroraAlpha);
}
`;function EN(i){const{colorStops:t=["#5227FF","#7cff67","#5227FF"],amplitude:e=1,blend:n=.5}=i,s=ne.useRef(i);s.current=i;const a=ne.useRef(null);return ne.useEffect(()=>{const l=a.current;if(!l)return;const c=new uM({alpha:!0,premultipliedAlpha:!0,antialias:!0}),u=c.gl;u.clearColor(0,0,0,0),u.enable(u.BLEND),u.blendFunc(u.ONE,u.ONE_MINUS_SRC_ALPHA),u.canvas.style.backgroundColor="transparent";let f;function d(){if(!l)return;const S=l.offsetWidth,_=l.offsetHeight;c.setSize(S,_),f&&(f.uniforms.uResolution.value=[S,_])}window.addEventListener("resize",d);const m=new gM(u);m.attributes.uv&&delete m.attributes.uv;const g=t.map(S=>{const _=new zl(S);return[_.r,_.g,_.b]});f=new cM(u,{vertex:MN,fragment:bN,uniforms:{uTime:{value:0},uAmplitude:{value:e},uColorStops:{value:g},uResolution:{value:[l.offsetWidth,l.offsetHeight]},uBlend:{value:n}}});const v=new mM(u,{geometry:m,program:f});l.appendChild(u.canvas);let x=0;const M=S=>{x=requestAnimationFrame(M);const{time:_=S*.01,speed:E=1}=s.current;if(f){f.uniforms.uTime.value=_*E*.1,f.uniforms.uAmplitude.value=s.current.amplitude??1,f.uniforms.uBlend.value=s.current.blend??n;const A=s.current.colorStops??t;f.uniforms.uColorStops.value=A.map(T=>{const U=new zl(T);return[U.r,U.g,U.b]}),c.render({scene:v})}};return x=requestAnimationFrame(M),d(),()=>{var S;cancelAnimationFrame(x),window.removeEventListener("resize",d),l&&u.canvas.parentNode===l&&l.removeChild(u.canvas),(S=u.getExtension("WEBGL_lose_context"))==null||S.loseContext()}},[e]),un.jsx("div",{ref:a,className:"w-full h-full"})}const BN=Object.freeze(Object.defineProperty({__proto__:null,default:EN},Symbol.toStringTag,{value:"Module"})),TN=`
attribute vec2 uv;
attribute vec2 position;

varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = vec4(position, 0, 1);
}
`,AN=`
precision highp float;

uniform float uTime;
uniform vec3 uColor;
uniform vec3 uResolution;
uniform vec2 uMouse;
uniform float uAmplitude;
uniform float uSpeed;

varying vec2 vUv;

void main() {
  float mr = min(uResolution.x, uResolution.y);
  vec2 uv = (vUv.xy * 2.0 - 1.0) * uResolution.xy / mr;

  uv += (uMouse - vec2(0.5)) * uAmplitude;

  float d = -uTime * 0.5 * uSpeed;
  float a = 0.0;
  for (float i = 0.0; i < 8.0; ++i) {
    a += cos(i - d - a * uv.x);
    d += sin(uv.y * i + a);
  }
  d += uTime * 0.5 * uSpeed;
  vec3 col = vec3(cos(uv * vec2(d, a)) * 0.6 + 0.4, cos(a + d) * 0.5 + 0.5);
  col = cos(col * cos(vec3(d, a, 2.5)) * 0.5 + 0.5) * uColor;
  gl_FragColor = vec4(col, 1.0);
}
`;function wN({color:i=[1,1,1],speed:t=1,amplitude:e=.1,mouseReact:n=!0,...s}){const a=ne.useRef(null),l=ne.useRef({x:.5,y:.5});return ne.useEffect(()=>{if(!a.current)return;const c=a.current,u=new uM,f=u.gl;f.clearColor(0,0,0,1);let d;function m(){u.setSize(c.offsetWidth*1,c.offsetHeight*1),d&&(d.uniforms.uResolution.value=new zl(f.canvas.width,f.canvas.height,f.canvas.width/f.canvas.height))}window.addEventListener("resize",m,!1),m();const g=new gM(f);d=new cM(f,{vertex:TN,fragment:AN,uniforms:{uTime:{value:0},uColor:{value:new zl(...i)},uResolution:{value:new zl(f.canvas.width,f.canvas.height,f.canvas.width/f.canvas.height)},uMouse:{value:new Float32Array([l.current.x,l.current.y])},uAmplitude:{value:e},uSpeed:{value:t}}});const v=new mM(f,{geometry:g,program:d});let x;function M(_){x=requestAnimationFrame(M),d.uniforms.uTime.value=_*.001,u.render({scene:v})}x=requestAnimationFrame(M),f.canvas.style.width="100%",f.canvas.style.height="100%",f.canvas.style.display="block",c.appendChild(f.canvas);function S(_){const E=c.getBoundingClientRect(),A=(_.clientX-E.left)/E.width,T=1-(_.clientY-E.top)/E.height;l.current={x:A,y:T},d.uniforms.uMouse.value[0]=A,d.uniforms.uMouse.value[1]=T}return n&&c.addEventListener("mousemove",S),()=>{var _;cancelAnimationFrame(x),window.removeEventListener("resize",m),n&&c.removeEventListener("mousemove",S),c.removeChild(f.canvas),(_=f.getExtension("WEBGL_lose_context"))==null||_.loseContext()}},[i,t,e,n]),un.jsx("div",{ref:a,className:"w-full h-full",style:{width:"100%",height:"100%",position:"absolute",top:0,left:0,overflow:"hidden"},...s})}const FN=Object.freeze(Object.defineProperty({__proto__:null,default:wN},Symbol.toStringTag,{value:"Module"})),CN=i=>{const t=i.replace("#",""),e=parseInt(t.slice(0,2),16)/255,n=parseInt(t.slice(2,4),16)/255,s=parseInt(t.slice(4,6),16)/255;return[e,n,s]},RN=`
varying vec2 vUv;
varying vec3 vPosition;

void main() {
  vPosition = position;
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,DN=`
varying vec2 vUv;
varying vec3 vPosition;

uniform float uTime;
uniform vec3  uColor;
uniform float uSpeed;
uniform float uScale;
uniform float uRotation;
uniform float uNoiseIntensity;

const float e = 2.71828182845904523536;

float noise(vec2 texCoord) {
  float G = e;
  vec2  r = (G * sin(G * texCoord));
  return fract(r.x * r.y * (1.0 + texCoord.x));
}

vec2 rotateUvs(vec2 uv, float angle) {
  float c = cos(angle);
  float s = sin(angle);
  mat2  rot = mat2(c, -s, s, c);
  return rot * uv;
}

void main() {
  float rnd        = noise(gl_FragCoord.xy);
  vec2  uv         = rotateUvs(vUv * uScale, uRotation);
  vec2  tex        = uv * uScale;
  float tOffset    = uSpeed * uTime;

  tex.y += 0.03 * sin(8.0 * tex.x - tOffset);

  float pattern = 0.6 +
                  0.4 * sin(5.0 * (tex.x + tex.y +
                                   cos(3.0 * tex.x + 5.0 * tex.y) +
                                   0.02 * tOffset) +
                           sin(20.0 * (tex.x + tex.y - 0.1 * tOffset)));

  vec4 col = vec4(uColor, 1.0) * vec4(pattern) - rnd / 15.0 * uNoiseIntensity;
  col.a = 1.0;
  gl_FragColor = col;
}
`,vM=ne.forwardRef(function({uniforms:t},e){const{viewport:n}=AD();return ne.useLayoutEffect(()=>{const s=e;s.current&&s.current.scale.set(n.width,n.height,1)},[e,n]),wD((s,a)=>{const l=e;if(l.current){const c=l.current.material;c.uniforms.uTime.value+=.1*a}}),un.jsxs("mesh",{ref:e,children:[un.jsx("planeGeometry",{args:[1,1,1,1]}),un.jsx("shaderMaterial",{uniforms:t,vertexShader:RN,fragmentShader:DN})]})});vM.displayName="SilkPlane";const UN=({speed:i=5,scale:t=1,color:e="#7B7481",noiseIntensity:n=1.5,rotation:s=0})=>{const a=ne.useRef(null),l=ne.useMemo(()=>({uSpeed:{value:i},uScale:{value:t},uNoiseIntensity:{value:n},uColor:{value:new Ot(...CN(e))},uRotation:{value:s},uTime:{value:0}}),[i,t,n,e,s]);return un.jsx(QD,{dpr:[1,2],frameloop:"always",children:un.jsx(vM,{ref:a,uniforms:l})})},HN=Object.freeze(Object.defineProperty({__proto__:null,default:UN},Symbol.toStringTag,{value:"Module"}));export{Hn as $,Tm as A,fa as B,ag as C,Wm as D,ve as E,ii as F,gU as G,Ro as H,Wx as I,ke as J,_T as K,pn as L,Jm as M,An as N,De as O,bS as P,No as Q,IS as R,Hm as S,gM as T,zx as U,B as V,kS as W,us as X,pr as Y,Ds as Z,Sx as _,Zn as a,rn as a0,cg as a1,Kh as a2,Ni as a3,So as a4,yo as a5,Os as a6,hS as a7,ss as a8,Ps as a9,Ns as aa,Bh as ab,hc as ac,qt as ad,ND as ae,os as af,BN as ag,FN as ah,HN as ai,fn as b,vr as c,or as d,Sn as e,zn as f,ME as g,pt as h,pm as i,un as j,lc as k,TS as l,Ot as m,lS as n,_e as o,uM as p,zN as q,cM as r,mM as s,zl as t,AD as u,cs as v,wD as w,Wi as x,Yi as y,QD as z};
